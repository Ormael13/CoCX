package classes.Items {
import classes.*;
import classes.BodyParts.*;
import classes.GeneticMemories.BallsMem;
import classes.GeneticMemories.CockMem;
import classes.GlobalFlags.kACHIEVEMENTS;
import classes.GlobalFlags.kFLAGS;
import classes.IMutations.IMutationsLib;
import classes.Items.Consumables.Centaurinum;
import classes.Items.Consumables.EmberTF;
import classes.Races.*;
import classes.Scenes.Camp.CampStatsAndResources;
import classes.Scenes.Metamorph;
import classes.Scenes.SceneLib;
import classes.Stats.Buff;
import classes.Transformations.TransformationUtils;

public final class Mutations extends MutationsHelper {
    public function Mutations() {
    }

    public static const BAD_END_COOLDOWN:int = 6;

    //const UNKNOWN_FLAG_NUMBER_00477:int = 477;
    //const TIMES_MET_CHICKEN_HARPY:int = 652;
    //const EGGS_BOUGHT:int = 653;
    //const BIKINI_ARMOR_BONUS:int = 769;

    public var emberTFchanges:EmberTF = new EmberTF();
	public var saveUpdater:SaveUpdater = new SaveUpdater();

    public function DrunkenPowerEmpower():void {
        var bonusempower:Number = 60;
        var bonusdepower:Number = 20;
        var durationhour:Number = 2;
        if (player.spe < 21 || player.inte < 21) {
            if (player.inte < 21) bonusdepower -= (player.inte - 1);
            else bonusdepower -= (player.spe - 1);
        }
        bonusempower += (20 * (1 + player.newGamePlusMod()));
		if (player.countMiscJewelry(miscjewelries.ONI_GOURD) > 0) durationhour *= 2;
        player.statStore.replaceBuffObject({
            str: bonusempower,
            spe: -bonusdepower,
            inte: -bonusdepower,
            lib: bonusempower,
            minlustx: 0.5
        }, "DrunkenPowerEmpower", {text: "Drunken Power", rate: Buff.RATE_HOURS, tick: durationhour});
    }
	public function DrunkenPowerEmpowerIfPossible():void {
		if (CanDrunkenPowerEmpower()) DrunkenPowerEmpower();
	}
	public function CanDrunkenPowerEmpower():Boolean {
		return !player.statStore.hasBuff("DrunkenPowerEmpower") && CoC.instance.inCombat && player.racialScore(Races.ONI) >= DrunkenPowerEmpowerOni();
	}
    public function DrunkenPowerEmpowerOni():Number {
        var bonusempoweroni:Number = 12;
        if (player.perkv1(IMutationsLib.OniMusculatureIM) >= 1) bonusempoweroni -= 6;
        if (player.perkv1(IMutationsLib.OniMusculatureIM) >= 2) bonusempoweroni -= 3;
        return bonusempoweroni;
    }
	
	public function AelfwineEmpower():void {
		outputText("\n\nDamn, all this alcohol makes you feel horny… too horny to hide it. You could use getting laid a few times right now, ideally with multiple partners. As you drown your personality and morals into alcohol becoming increasingly more degenerate and lascivious your opponent gets all the more aroused by the sight!");
        var bonusempower:Number = 2;
        var bonusdepower:Number = 0.5;
        var durationhour:Number = 2;
        bonusempower *= player.lib;
		bonusdepower *= player.inte;
        player.statStore.replaceBuffObject({
            inte: -bonusdepower,
            lib: bonusempower
        }, "AelfwineEmpower", {text: "Aelfwine Power", rate: Buff.RATE_HOURS, tick: durationhour});
    }
	public function AelfwineEmpowerIfPossible():void {
		if (CanAelfwineEmpower()) AelfwineEmpower();
	}
	public function CanAelfwineEmpower():Boolean {
		return !player.statStore.hasBuff("AelfwineEmpower") && player.hasPerk(PerkLib.Aelfwine);
	}

    //ManUp Beer
    public function manUpBeer(player:Player):void {
        player.slimeFeed();
        clearOutput();
        outputText("You open the can and \"bottoms up\", hoping it wasn’t just a scam to buy an overpriced beer. \"Whoa, that’s one hell of a manly beverage!\" The alcohol in the beer is so strong you actually feel like you could lift bigger things now. No...wait, you actually do as your muscle seems to surge with new raw power.");
        if (player.hasPerk(PerkLib.GoblinoidBlood) && player.perkv1(IMutationsLib.NaturalPunchingBagIM) >= 3) alchemyBonus("str", 2 + rand(3));
        else alchemyBonus("str", 1 + rand(2));
        if (rand(3) == 0) {
            if (player.hasPerk(PerkLib.GoblinoidBlood) && player.perkv1(IMutationsLib.NaturalPunchingBagIM) >= 3) outputText(player.modTone(player.maxToneCap(), 6));
            else outputText(player.modTone(player.maxToneCap(), 3));
        }
        player.refillHunger(10);
        DrunkenPowerEmpowerIfPossible();
		AelfwineEmpowerIfPossible();
    }
	
	//Agility Elixir
    public function agilityElixir(player:Player):void {
        player.slimeFeed();
        clearOutput();
        outputText("The elixir tastes foul at first, but you guess it’s how it is with all medicine. As the merchant warned you, you begin to feel your muscles coiling like a spring, ready to allow you to make a swift dash. Your coordination definitely improved too, as well as your vision, as you can follow your movement despite the acceleration.");
        if (player.hasPerk(PerkLib.GoblinoidBlood) && player.perkv1(IMutationsLib.NaturalPunchingBagIM) >= 3) alchemyBonus("spe", 2 + rand(3));
        else alchemyBonus("spe", 1 + rand(2));
        if (rand(3) == 0) {
            if (player.hasPerk(PerkLib.GoblinoidBlood) && player.perkv1(IMutationsLib.NaturalPunchingBagIM) >= 3) outputText(player.modTone(player.maxToneCap(), 6));
            else outputText(player.modTone(player.maxToneCap(), 3));
        }
        player.refillHunger(5);
    }

    public function incenseOfInsight(player:Player):void {
        clearOutput();
        outputText("You use the incense and sit to meditate as the perfume of flowers and fruits fill the area. You see visions of things you could do and things you could’ve done good and bad, and when you open your eyes you realise you found new insight on your goals.");
        if (rand(3) == 0) {
            if (player.hasPerk(PerkLib.GoblinoidBlood) && player.perkv1(IMutationsLib.NaturalPunchingBagIM) >= 3) outputText(player.modTone(15, 2));
            else outputText(player.modTone(15, 1));
        }
        if (player.wis < 50) {
            if (player.hasPerk(PerkLib.GoblinoidBlood) && player.perkv1(IMutationsLib.NaturalPunchingBagIM) >= 3) alchemyBonus("wis", 2 + rand(7));
            else alchemyBonus("wis", 1 + rand(4));
        } else if (player.wis < 100) {
            if (player.hasPerk(PerkLib.GoblinoidBlood) && player.perkv1(IMutationsLib.NaturalPunchingBagIM) >= 3) alchemyBonus("wis", 2 + rand(5));
            else alchemyBonus("wis", 1 + rand(3));
        } else {
            if (player.hasPerk(PerkLib.GoblinoidBlood) && player.perkv1(IMutationsLib.NaturalPunchingBagIM) >= 3) alchemyBonus("wis", 2 + rand(3));
            else alchemyBonus("wis", 1 + rand(2));
        }
    }

    //Vixen Tea
    public function vixenTea(player:Player):void {
        player.slimeFeed();
        clearOutput();
        outputText("You prepare the tea and drink it. It would seem that Ayane didn’t lie to you as a pink haze settle in your mind, leaving you not only aroused, but also highly inspired. Images of sensual caresses and passionate lovemaking come and go in your head, making you blush yet smile in anticipation. You can’t wait to try what you learned.");
        if (rand(3) == 0) {
            if (player.hasPerk(PerkLib.GoblinoidBlood) && player.perkv1(IMutationsLib.NaturalPunchingBagIM) >= 3) outputText(player.modTone(15, 2));
            else outputText(player.modTone(15, 1));
        }
        if (player.lib < 50) {
            if (player.hasPerk(PerkLib.GoblinoidBlood) && player.perkv1(IMutationsLib.NaturalPunchingBagIM) >= 3) alchemyBonus("lib", 2 + rand(7));
            else alchemyBonus("lib", 1 + rand(4));
        } else if (player.lib < 100) {
            if (player.hasPerk(PerkLib.GoblinoidBlood) && player.perkv1(IMutationsLib.NaturalPunchingBagIM) >= 3) alchemyBonus("lib", 2 + rand(5));
            else alchemyBonus("lib", 1 + rand(3));
        } else {
            if (player.hasPerk(PerkLib.GoblinoidBlood) && player.perkv1(IMutationsLib.NaturalPunchingBagIM) >= 3) alchemyBonus("lib", 2 + rand(3));
            else alchemyBonus("lib", 1 + rand(2));
        }
        player.refillHunger(10);
    }

    //Cold Fish Soup
    public function coldFishSoup(player:Player):void {
        player.slimeFeed();
        clearOutput();
        outputText("As you eat the soup you shiver as your body temperature drops. Not only that but the last thing on your mind right now is sex, as you feel yourself freezing from the inside. The cold crisis eventually passes, but you remain relatively less libidinous afterward.");
        if (player.hasPerk(PerkLib.GoblinoidBlood) && player.perkv1(IMutationsLib.NaturalPunchingBagIM) >= 3) dynStats("lib", -4, "lus", -(20*player.postConsumptionMlt()));
        else dynStats("lus", -(10*player.postConsumptionMlt()), "scale", false);
        player.addCurse("lib", 2, 1);
        player.refillHunger(15);
    }

    //Strawberry shortcake
    public function strawberryShortcake(player:Player):void {
        clearOutput();
        outputText("You eat and savor the cake. You have no clue where the spoon and plate came from but they were there with the food.");
        if (player.tallness > 42) {
            outputText("[pg]Whoa, wait, did you just lose some height!? You indeed notice you've shrunk by a few inches.");
            player.tallness -= 1 + rand(3);
            if (player.basetallness < 42) player.tallness = 42;
        }
		player.refillHunger(10);
    }

    //Big chocolate cake
    public function bigChocolateCake(player:Player):void {
        clearOutput();
        outputText("You eat and savor the cake. You have no clue where the spoon and plate came from but they were there with the food.");
        if (player.basetallness < 132) {
            outputText("[pg]Whoa, wait, did you just gain some height!? You indeed notice you've grown by a few inches.");
            player.tallness += 1 + rand(3);
            if (player.basetallness > 132) player.tallness = 132;
        }
		player.refillHunger(10);
    }

    //Madmen knowledge
    public function madmenKnowledge(player:Player):void {
        clearOutput();
        outputText("You open the bottle and sip its contents, your mind flashes with images and thoughts not meant for the waking world.");
        alchemyBonus("int", 4 + rand(2));
		KnowledgeBonus("int", 4 + rand(2));
		player.addCurse("wis", 2 + rand(9), 1);
		dynStats("cor", 2);
		//-Madness
        if (!player.hasPerk(PerkLib.Insanity) && rand(20) == 0) {
            outputText("[pg]");
			outputText("As you drink the last sip of the vial, you suddenly have an epiphany. The reason you've been feeling so limited is because of the restrictions you've placed on your own thoughts. Nothing is impossible to anyone who dismisses the very notion of impossibility. Crazy is just another word for enlightened, and the mad possess knowledge and truths that the sane are too stubborn to see. ");
			outputText("With this knowledge, you decide to discard your stuck-up principles and embrace the all encompassing truth that is madness.  (<b>Gained Perk: Insanity!</b>)");
            player.createPerk(PerkLib.Insanity,0,0,0,0);
            changes++;
        }
        player.refillHunger(10);
    }

    //Airweed
    public function airweed(player:Player):void {
        player.slimeFeed();
        clearOutput();
        outputText("You eat the seaweed. It should allow you to breathe safely underwater for a day.");
        if (player.hasStatusEffect(StatusEffects.Airweed)) {
            player.removeStatusEffect(StatusEffects.Airweed);
            player.createStatusEffect(StatusEffects.Airweed, 24, 0, 0, 0);
        } else player.createStatusEffect(StatusEffects.Airweed, 24, 0, 0, 0);
    }

    public function ezekielfruit(player:Player):void {
        clearOutput();
        outputText("You take the first bite of the fruit that Evangeline gave you. Surprisingly it tastes delicious as nothing else you tasted before, so without thinking further, you eat the rest of the fruit.");
        if (!player.hasPerk(PerkLib.EzekielBlessing)) player.createPerk(PerkLib.EzekielBlessing, 0, 0, 0, 0);
        statScreenRefresh();
        player.statStore.addBuffObject({
            "str": 10,
            "tou": 10,
            "spe": 10,
            "int": 10,
            "wis": 10,
            "lib": 10
        }, 'EzekielBlessing', {text: 'Ezekiel Blessing'});
        player.refillHunger(50);
    }

    public function smallangrypill(player:Player):void {
        clearOutput();
        outputText("You pop the small pill into your mouth and swallow. You feel a bit angrier now. So would you kindly go and kill something now?[pg](Gained wrath: " + ((player.hasPerk(PerkLib.GoblinoidBlood) && player.perkv1(IMutationsLib.NaturalPunchingBagIM) >= 3) ? "40" : "20") + ")");
        if (player.hasPerk(PerkLib.GoblinoidBlood) && player.perkv1(IMutationsLib.NaturalPunchingBagIM) >= 3) player.wrath += (40*player.postConsumptionMlt());
        else player.wrath += (20*player.postConsumptionMlt());
        if (player.wrath > player.maxOverWrath()) player.wrath = player.maxOverWrath();
        statScreenRefresh();
    }

    public function mediumangrypill(player:Player):void {
        clearOutput();
        outputText("You pop the medium pill into your mouth and swallow. You feel a bit angrier now. So would you kindly go and kill something now?[pg](Gained wrath: " + ((player.hasPerk(PerkLib.GoblinoidBlood) && player.perkv1(IMutationsLib.NaturalPunchingBagIM) >= 3) ? "120" : "60") + ")");
        if (player.hasPerk(PerkLib.GoblinoidBlood) && player.perkv1(IMutationsLib.NaturalPunchingBagIM) >= 3) player.wrath += (120*player.postConsumptionMlt());
        else player.wrath += (60*player.postConsumptionMlt());
        if (player.wrath > player.maxOverWrath()) player.wrath = player.maxOverWrath();
        statScreenRefresh();
    }

    public function bigangrypill(player:Player):void {
        clearOutput();
        outputText("You pop the big pill into your mouth and swallow. You feel a bit angrier now. So would you kindly go and kill something now?[pg](Gained wrath: " + ((player.hasPerk(PerkLib.GoblinoidBlood) && player.perkv1(IMutationsLib.NaturalPunchingBagIM) >= 3) ? "360" : "180") + ")");
        if (player.hasPerk(PerkLib.GoblinoidBlood) && player.perkv1(IMutationsLib.NaturalPunchingBagIM) >= 3) player.wrath += (360*player.postConsumptionMlt());
        else player.wrath += (180*player.postConsumptionMlt());
        if (player.wrath > player.maxOverWrath()) player.wrath = player.maxOverWrath();
        statScreenRefresh();
    }

    public function mediumhealpill(player:Player):void {
        clearOutput();
        var rand:int = Math.random() * 100;
        outputText("You pop the medium pill into your mouth and swallow. ");
        if (player.HP < player.maxOverHP()) {
            if (player.hasPerk(PerkLib.GoblinoidBlood) && player.perkv1(IMutationsLib.NaturalPunchingBagIM) >= 3) HPChange(Math.round((50 + player.tou) * 6 * player.postConsumptionMlt()), true);
            else if ((player.hasPerk(PerkLib.GoblinoidBlood) && player.perkv1(IMutationsLib.NaturalPunchingBagIM) >= 2) || player.perkv1(IMutationsLib.NaturalPunchingBagIM) >= 3) HPChange(Math.round((50 + player.tou) * 4.5 * player.postConsumptionMlt()), true);
            else HPChange(((50 + player.tou) * 3 * player.postConsumptionMlt()), true);
            outputText("Some of your wounds are healed. ");
        } else outputText("You feel an odd sensation. ");
        if (rand < 70) {
            outputText("You feel a sense of warmth spread through your erogenous areas.");
            MutagenBonus("lib", 3);
        }
        if (rand >= 70 && rand <= 90) {
            outputText("Your body tingles and feels more sensitive.");
            player.addCurse("sens", 3, 1);
        }
        if (rand > 90) {
            outputText("You shudder as a small orgasm passes through you. When you recover you actually feel more aroused.");
            dynStats("lus", (15*player.postConsumptionMlt()), "scale", false);
        }
        statScreenRefresh();
    }
    public function bighealpill(player:Player):void {
        var rand:int = Math.random() * 100;
        outputText("You pop the big pill into your mouth and swallow. ");
        if (player.HP < player.maxOverHP()) {
            if (player.hasPerk(PerkLib.GoblinoidBlood) && player.perkv1(IMutationsLib.NaturalPunchingBagIM) >= 3) HPChange(Math.round((50 + player.tou) * 18 * player.postConsumptionMlt()), true);
            else if ((player.hasPerk(PerkLib.GoblinoidBlood) && player.perkv1(IMutationsLib.NaturalPunchingBagIM) >= 2) || player.perkv1(IMutationsLib.NaturalPunchingBagIM) >= 3) HPChange(Math.round((50 + player.tou) * 13.5 * player.postConsumptionMlt()), true);
            else HPChange(((50 + player.tou) * 9 * player.postConsumptionMlt()), true);
            outputText("Some of your wounds are healed. ");
        } else outputText("You feel an odd sensation. ");
        if (rand < 70) {
            outputText("You feel a sense of warmth spread through your erogenous areas.");
            MutagenBonus("lib", 9);
        }
        if (rand >= 70 && rand <= 90) {
            outputText("Your body tingles and feels more sensitive.");
            player.addCurse("sens", 9, 1);
        }
        if (rand > 90) {
            outputText("You shudder as a small orgasm passes through you. When you recover you actually feel more aroused.");
            dynStats("lus", (45*player.postConsumptionMlt()), "scale", false);
        }
        statScreenRefresh();
    }

    public function peppermintwhite(player:Player):void {
        clearOutput();
        outputText("You pull the cork off the gift from the mysterious stranger.  The scent of alluring mint fills your nose once again.  You bring the head of the bottle to your lips and tip it back, the creamy white fluid hits your tongue and slips down your throat.  The liquid is surprisingly refreshing, the creamy mint flavor clings to your tongue and mouth, and makes your breath feel cool as you exhale over your lips.  You can feel the liquid drip down to your stomach and fill you with a pleasant warmth and holiday cheer.[pg]");
        //Recovers health and fatigue, adds five to max health, and one to libido.*/
        HPChange(EngineCore.maxHP(), true);
        fatigue(-Math.round(100*player.postConsumptionMlt()));
        statScreenRefresh();
    }

    public function bagofcosmosA1(player:Player):void {
        clearOutput();
        var SSA:Number = 2 + rand(2);
        outputText("You open bag to find " + SSA + " spirit stones inside.");
        flags[kFLAGS.SPIRIT_STONES] += SSA;
		statScreenRefresh();
    }
    public function bagofcosmosA2(player:Player):void {
        clearOutput();
        var SSA:Number = 3 + rand(3);
        outputText("You open bag to find " + SSA + " spirit stones inside.");
        flags[kFLAGS.SPIRIT_STONES] += SSA;
		statScreenRefresh();
    }
    public function bagofcosmosA3(player:Player):void {
        clearOutput();
        var SSA:Number = 4 + rand(4);
        outputText("You open bag to find " + SSA + " spirit stones inside.");
        flags[kFLAGS.SPIRIT_STONES] += SSA;
		statScreenRefresh();
    }
    public function bagofcosmosA4(player:Player):void {
        clearOutput();
        var SSA:Number = 5 + rand(5);
        outputText("You open bag to find " + SSA + " spirit stones inside.");
        flags[kFLAGS.SPIRIT_STONES] += SSA;
		statScreenRefresh();
    }
    public function bagofcosmosA5(player:Player):void {
        clearOutput();
        var SSA:Number = 6 + rand(6);
        outputText("You open bag to find " + SSA + " spirit stones inside.");
        flags[kFLAGS.SPIRIT_STONES] += SSA;
		statScreenRefresh();
    }
    public function bagofcosmosA6(player:Player):void {
        clearOutput();
        var SSA:Number = 7 + rand(7);
        outputText("You open bag to find " + SSA + " spirit stones inside.");
        flags[kFLAGS.SPIRIT_STONES] += SSA;
		statScreenRefresh();
    }

    public function bagofcosmos(player:Player):void {
        if (player.hasKeyItem("Bag of Cosmos") < 0) {
            clearOutput();
            outputText("You hang your bag of cosmos on your belt and bind using small amount of your soulforce.  ");
            player.createKeyItem("Bag of Cosmos", 0, 0, 0, 0);
            outputText("<b>You now have 12 item slots bag.</b>");
        } else if (player.hasKeyItem("Bag of Cosmos") >= 0) {
            outputText("When binding this bag of cosmos, you notice you already have one of such type.  Damn, now this one is wasted.  Well next time you will remember to not bind new ones when you got one already.");
        }
    }

    public function skypoisonpearl(player:Player):void {
        clearOutput();
        outputText("You cram the pearl in your mouth and swallow it like a giant pill with some difficulty.  Surprisingly, there is no discomfort, only a cool, calming sensation that springs up from your core.[pg]");
        player.createKeyItem("Sky Poison Pearl", 0, 0, 0, 0);
        outputText("<b>You now have 14(98) item slots in your pearl.</b>");
        flags[kFLAGS.SKY_POISON_PEARL] = 2;
    }

    public function lowgradesoulforcerecoverypill(player:Player):void {
        outputText("You cram the pill in your mouth and swallow it.  ");
        if (player.hasPerk(PerkLib.EnergyDependent)) outputText("Sadly, due to your current condition, you did not gain any soulforce.");
        else {
			var lowgraderestore1:Number = Math.round(player.maxSoulforce() * 0.02) + 100;
			EngineCore.SoulforceChange(lowgraderestore1);
            if (player.isGargoyle() && player.hasPerk(PerkLib.GargoylePure)) player.refillGargoyleHunger(5);
            outputText("Surprisingly, there is no discomfort, only a cool, calming sensation that springs up from your soul.[pg](Recovered soulforce: "+lowgraderestore1+")");
            statScreenRefresh();
        }
    }
    public function lowgradesoulforcerecoverypill2(player:Player):void {
        outputText("You open the bottle and start to cram the pills in your mouth, then swallowing them all.  ");
        if (player.hasPerk(PerkLib.EnergyDependent)) outputText("Sadly, due to your current condition, you did not gain any soulforce.");
        else {
            var lowgraderestore2:Number = (Math.round(player.maxSoulforce() * 0.02) + 100) * 10;
            EngineCore.SoulforceChange(lowgraderestore2);
            if (player.isGargoyle() && player.hasPerk(PerkLib.GargoylePure)) player.refillGargoyleHunger(50);
            outputText("Surprisingly, there is no discomfort, only a cool, calming sensation that springs up from your soul.[pg](Recovered soulforce: "+lowgraderestore2+")");
            statScreenRefresh();
        }
    }
    public function midgradesoulforcerecoverypill(player:Player):void {
        outputText("You cram the pill in your mouth and swallow it.  ");
        if (player.hasPerk(PerkLib.EnergyDependent)) outputText("Sadly, due to your current condition, you did not gain any soulforce.");
        else {
            var midgraderestore1:Number = Math.round(player.maxSoulforce() * 0.04) + 600;
            EngineCore.SoulforceChange(midgraderestore1);
            if (player.isGargoyle() && player.hasPerk(PerkLib.GargoylePure)) player.refillGargoyleHunger(20);
            outputText("Surprisingly, there is no discomfort, only a cool, calming sensation that springs up from your soul.[pg](Recovered soulforce: "+midgraderestore1+")");
            statScreenRefresh();
        }
    }
    public function midgradesoulforcerecoverypill2(player:Player):void {
        outputText("You open the bottle and start to cram the pills in your mouth, then swallowing them all.  ");
        if (player.hasPerk(PerkLib.EnergyDependent)) outputText("Sadly, due to your current condition, you did not gain any soulforce.");
        else {
            var midgraderestore2:Number = (Math.round(player.maxSoulforce() * 0.04) + 600) * 10;
            EngineCore.SoulforceChange(midgraderestore2);
            if (player.isGargoyle() && player.hasPerk(PerkLib.GargoylePure)) player.refillGargoyleHunger(200);
            outputText("Surprisingly, there is no discomfort, only a cool, calming sensation that springs up from your soul.[pg](Recovered soulforce: "+midgraderestore2+")");
            statScreenRefresh();
        }
    }
    public function highgradesoulforcerecoverypill(player:Player):void {
        outputText("You cram the pill in your mouth and swallow it.  ");
        if (player.hasPerk(PerkLib.EnergyDependent)) outputText("Sadly, due to your current condition, you did not gain any soulforce.");
        else {
            var highgraderestore1:Number = Math.round(player.maxSoulforce() * 0.06) + 3600;
            EngineCore.SoulforceChange(highgraderestore1);
            if (player.isGargoyle() && player.hasPerk(PerkLib.GargoylePure)) player.refillGargoyleHunger(80);
            outputText("Surprisingly, there is no discomfort, only a cool, calming sensation that springs up from your soul.[pg](Recovered soulforce: "+highgraderestore1+")");
            statScreenRefresh();
        }
    }
    public function highgradesoulforcerecoverypill2(player:Player):void {
        outputText("You open the bottle and start to cram the pills in your mouth, then swallowing them all.  ");
        if (player.hasPerk(PerkLib.EnergyDependent)) outputText("Sadly, due to your current condition, you did not gain any soulforce.");
        else {
            var highgraderestore2:Number = (Math.round(player.maxSoulforce() * 0.06) + 3600) * 10;
            EngineCore.SoulforceChange(highgraderestore2);
            if (player.isGargoyle() && player.hasPerk(PerkLib.GargoylePure)) player.refillGargoyleHunger(800);
            outputText("Surprisingly, there is no discomfort, only a cool, calming sensation that springs up from your soul.[pg](Recovered soulforce: "+highgraderestore2+")");
            statScreenRefresh();
        }
    }
    public function superiorgradesoulforcerecoverypill(player:Player):void {
    	outputText("You cram the pill in your mouth and swallow it.  ");
        if (player.hasPerk(PerkLib.EnergyDependent)) outputText("Sadly, due to your current condition, you did not gain any soulforce.");
        else {
            var superiorgraderestore1:Number = Math.round(player.maxSoulforce() * 0.08) + 21600;
            EngineCore.SoulforceChange(superiorgraderestore1);
            if (player.isGargoyle() && player.hasPerk(PerkLib.GargoylePure)) player.refillGargoyleHunger(320);
            outputText("Surprisingly, there is no discomfort, only a cool, calming sensation that springs up from your soul.[pg](Recovered soulforce: "+superiorgraderestore1+")");
            statScreenRefresh();
        }
    }
    public function superiorgradesoulforcerecoverypill2(player:Player):void {
        outputText("You open the bottle and start to cram the pills in your mouth, then swallowing them all.  ");
        if (player.hasPerk(PerkLib.EnergyDependent)) outputText("Sadly, due to your current condition, you did not gain any soulforce.");
        else {
            var superiorgraderestore2:Number = (Math.round(player.maxSoulforce() * 0.08) + 21600) * 10;
            EngineCore.SoulforceChange(superiorgraderestore2);
            if (player.isGargoyle() && player.hasPerk(PerkLib.GargoylePure)) player.refillGargoyleHunger(3200);
            outputText("Surprisingly, there is no discomfort, only a cool, calming sensation that springs up from your soul.[pg](Recovered soulforce: "+superiorgraderestore2+")");
            statScreenRefresh();
        }
    }
    public function fasteningpill(player:Player):void {
        outputText("You cram the pill in your mouth and swallow it.  Surprisingly, there is no discomfort, only a sensation of your stomach being full.");
        if (player.hasStatusEffect(StatusEffects.FastingPill)) player.addStatusValue(StatusEffects.FastingPill, 1, 8);
        else player.createStatusEffect(StatusEffects.FastingPill, 25, 0, 0, 0);
        statScreenRefresh();
    }

    public function triplethrustmanual(player:Player):void {
        clearOutput();
        if (!player.hasStatusEffect(StatusEffects.KnowsTripleThrust)) {
            outputText("You open the manual and discover it to be an instructional book on how to use a soul skill.  Most of it is filled with generic information on poses and channeling soulforce while performing Triple Thrust.  In no time at all, you've read the whole thing, but it disappears into thin air before you can put it away.");
            outputText("[pg]You blink in surprise, assaulted by the knowledge of a <b>new soul skill: Triple Thrust.</b>");
            player.createStatusEffect(StatusEffects.KnowsTripleThrust, 0, 0, 0, 0);
            return;
        }
        if (player.hasStatusEffect(StatusEffects.KnowsTripleThrust)) {
            outputText("When you open the manual, it turns out you already know this soul skill.  Having a hunch, you read the whole manual and when it disappears into thin air you feel it has restored some of your soulforce.");
            EngineCore.SoulforceChange(20);
        }
    }
    public function sextuplethrustmanual(player:Player):void {
        clearOutput();
        if (player.hasPerk(PerkLib.SoulPersonage) && player.hasStatusEffect(StatusEffects.KnowsTripleThrust)) {
            if (!player.hasStatusEffect(StatusEffects.KnowsSextupleThrust)) {
                outputText("You open the manual and discover it to be an instructional book on how to use a soul skill.  Most of it is filled with generic information on poses and channeling soulforce while performing Sextuple Thrust.  In no time at all, you've read the whole thing, but it disappears into thin air before you can put it away.");
                outputText("[pg]You blink in surprise, assaulted by the knowledge of a <b>new soul skill: Sextuple Thrust.</b>");
                player.createStatusEffect(StatusEffects.KnowsSextupleThrust, 0, 0, 0, 0);
                return;
            }
            if (player.hasStatusEffect(StatusEffects.KnowsSextupleThrust)) {
                outputText("When you open the manual, it turns out you already know this soul skill.  Having a hunch, you read the whole manual and when it disappears into thin air you feel it has restored some of your soulforce.");
                EngineCore.SoulforceChange(45);
            }
        } else {
            outputText("You open the manual, and discover to your horror it's a way too complicated soul skill to learn currently.  What makes it worse is the nature of the manual, which vanish at a moment's notice whether you've managed to memorize the soulskill or not.  A moment later, it starts to disappear before you can put it away. ");
            outputText("You should be more careful next time not to waste any new manuals by trying to learn a soul skill you can't handle yet.");
            if (!player.hasStatusEffect(StatusEffects.KnowsTripleThrust)) outputText(" Or the one that require other less complicated soulskill used as a base to learn the more advanced one.");
        }
    }
    public function nonuplethrustmanual(player:Player):void {
        clearOutput();
        if (player.hasPerk(PerkLib.SoulSprite) && player.hasStatusEffect(StatusEffects.KnowsSextupleThrust)) {
            if (!player.hasStatusEffect(StatusEffects.KnowsNonupleThrust)) {
                outputText("You open the manual and discover it to be an instructional book on how to use a soul skill.  Most of it is filled with generic information on poses and channeling soulforce while performing Nonuple Thrust.  In no time at all, you've read the whole thing, but it disappears into thin air before you can put it away.");
                outputText("[pg]You blink in surprise, assaulted by the knowledge of a <b>new soul skill: Nonuple Thrust.</b>");
                player.createStatusEffect(StatusEffects.KnowsNonupleThrust, 0, 0, 0, 0);
                return;
            }
            if (player.hasStatusEffect(StatusEffects.KnowsNonupleThrust)) {
                outputText("When you open the manual, it turns out you already know this soul skill.  Having a hunch, you read the whole manual and when it disappears into thin air you feel it has restored some of your soulforce.");
                EngineCore.SoulforceChange(100);
            }
        } else {
            outputText("You open the manual, and discover to your horror it's a way too complicated soul skill to learn currently.  What makes it worse is the nature of the manual, which vanish at a moment's notice whether you've managed to memorize the soulskill or not.  A moment later, it starts to disappear before you can put it away. ");
            outputText("You should be more careful next time not to waste any new manuals by trying to learn a soul skill you can't handle yet.");
            if (!player.hasStatusEffect(StatusEffects.KnowsSextupleThrust)) outputText(" Or the one that require other less complicated soulskill used as a base to learn the more advanced one.");
        }
    }

    public function hailofbladesmanual(player:Player):void {
        clearOutput();
        if (!player.hasStatusEffect(StatusEffects.KnowsYinYangBlast)) {
            outputText("You open the manual and discover it to be an instructional book on how to use a soul skill.  Most of it is filled with generic information on poses and channeling soulforce while performing Hail of Blades.  In no time at all, you've read the whole thing, but it disappears into thin air before you can put it away.");
            outputText("[pg]You blink in surprise, assaulted by the knowledge of a <b>new soul skills: Yin Palm, Yang Fist, Yin Yang Blast.</b>");//yin penetrating armor/mresist but weak maybe giving internal bleed/dmg dot and yang high dmg but reduced by armor/mresist and stunning - combined yin yang blast giving internal bleeding and stun and damage that is sum of both attacks
            player.createStatusEffect(StatusEffects.KnowsYinYangBlast, 0, 0, 0, 0);
            return;
        }
        if (player.hasStatusEffect(StatusEffects.KnowsYinYangBlast)) {
            outputText("When you open the manual, it turns out you already know this soul skill.  Having a hunch, you read the whole manual and when it disappears into thin air you feel it has restored some of your soulforce.");
            EngineCore.SoulforceChange(25);
        }
    }

    public function dracosweepmanual(player:Player):void {
        clearOutput();
        if (!player.hasStatusEffect(StatusEffects.KnowsDracoSweep)) {
            outputText("You open the manual and discover it to be an instructional book on how to use a soul skill.  Most of it is filled with generic information on poses and channeling soulforce while performing Draco Sweep.  In no time at all, you've read the whole thing, but it disappears into thin air before you can put it away.");
            outputText("[pg]You blink in surprise, assaulted by the knowledge of a <b>new soul skill: Draco Sweep.</b>");
            player.createStatusEffect(StatusEffects.KnowsDracoSweep, 0, 0, 0, 0);
            return;
        }
        if (player.hasStatusEffect(StatusEffects.KnowsDracoSweep)) {
            outputText("When you open the manual, it turns out you already know this soul skill.  Having a hunch, you read the whole manual and when it disappears into thin air you feel it has restored some of your soulforce.");
            EngineCore.SoulforceChange(25);
        }
    }

    public function manybirdsmanual(player:Player):void {
        clearOutput();
        if (!player.hasStatusEffect(StatusEffects.KnowsManyBirds)) {
            outputText("You open the manual and discover it to be an instructional book on how to use a soul skill.  Most of it is filled with generic information on poses and channeling soulforce while performing Many Birds.  In no time at all, you've read the whole thing, but it disappears into thin air before you can put it away.");
            outputText("[pg]You blink in surprise, assaulted by the knowledge of a <b>new soul skill: Many Birds.</b>");
            player.createStatusEffect(StatusEffects.KnowsManyBirds, 0, 0, 0, 0);
            return;
        }
        if (player.hasStatusEffect(StatusEffects.KnowsManyBirds)) {
            outputText("When you open the manual, it turns out you already know this soul skill.  Having a hunch, you read the whole manual and when it disappears into thin air you feel it has restored some of your soulforce.");
            EngineCore.SoulforceChange(25);
        }
    }

    public function hailofbladesmanual1(player:Player):void {
        clearOutput();
        if (!player.hasStatusEffect(StatusEffects.KnowsHailOfBlades)) {
            outputText("You open the manual and discover it to be an instructional book on how to use a soul skill.  Most of it is filled with generic information on poses and channeling soulforce while performing Hail of Blades.  In no time at all, you've read the whole thing, but it disappears into thin air before you can put it away.");
            outputText("[pg]You blink in surprise, assaulted by the knowledge of a <b>new soul skill: Hail of Blades.</b>");
            player.createStatusEffect(StatusEffects.KnowsHailOfBlades, 0, 0, 0, 0);
            return;
        }
        if (player.hasStatusEffect(StatusEffects.KnowsHailOfBlades)) {
            outputText("When you open the manual, it turns out you already know this soul skill.  Having a hunch, you read the whole manual and when it disappears into thin air you feel it has restored some of your soulforce.");
            EngineCore.SoulforceChange(25);
        }
    }
    public function hailofbladesmanual2(player:Player):void {
        clearOutput();
        if (player.hasPerk(PerkLib.SoulPersonage) && player.hasStatusEffect(StatusEffects.KnowsHailOfBlades)) {
            if (!player.hasStatusEffect(StatusEffects.KnowsGrandioseHailOfBlades)) {
                outputText("You open the manual and discover it to be an instructional book on how to use a soul skill.  Most of it is filled with generic information on poses and channeling soulforce while performing Grandiose Hail of Blades.  In no time at all, you've read the whole thing, but it disappears into thin air before you can put it away.");
                outputText("[pg]You blink in surprise, assaulted by the knowledge of a <b>new soul skill: Grandiose Hail of Blades.</b>");
                player.createStatusEffect(StatusEffects.KnowsGrandioseHailOfBlades, 0, 0, 0, 0);
                return;
            }
            if (player.hasStatusEffect(StatusEffects.KnowsGrandioseHailOfBlades)) {
                outputText("When you open the manual, it turns out you already know this soul skill.  Having a hunch, you read the whole manual and when it disappears into thin air you feel it has restored some of your soulforce.");
                EngineCore.SoulforceChange(45);
            }
        } else {
            outputText("You open the manual, and discover to your horror it's a way too complicated soul skill to learn currently.  What makes it worse, it's nature of manual that would vanish in a moment whenever you memorized everything about this soulskill or not.  A moment later, it starts to disappear before you can put it away. ");
            outputText("You should be more careful next time not to waste any new manuals by trying to learn a soul skill you can't handle yet.");
            if (!player.hasStatusEffect(StatusEffects.KnowsHailOfBlades)) outputText(" Or the one that require other less complicated soulskill used as a base to learn the more advanced one.");
        }
    }
    public function hailofbladesmanual3(player:Player):void {
        clearOutput();
        if (player.hasPerk(PerkLib.SoulPersonage) && player.hasStatusEffect(StatusEffects.KnowsGrandioseHailOfBlades)) {
            if (!player.hasStatusEffect(StatusEffects.KnowsGrandioseHailOfMoonBlades)) {
                outputText("You open the manual and discover it to be an instructional book on how to use a soul skill.  Most of it is filled with generic information on poses and channeling soulforce while performing Grandiose Hail of Moon Blades.  In no time at all, you've read the whole thing, but it disappears into thin air before you can put it away.");
                outputText("[pg]You blink in surprise, assaulted by the knowledge of a <b>new soul skill: Grandiose Hail of Moon Blades.</b>");
                player.createStatusEffect(StatusEffects.KnowsGrandioseHailOfMoonBlades, 0, 0, 0, 0);
                return;
            }
            if (player.hasStatusEffect(StatusEffects.KnowsGrandioseHailOfMoonBlades)) {
                outputText("When you open the manual, it turns out you already know this soul skill.  Having a hunch, you read the whole manual and when it disappears into thin air you feel it has restored some of your soulforce.");
                EngineCore.SoulforceChange(45);
            }
        } else {
            outputText("You open the manual, and discover to your horror it's a way too complicated soul skill to learn currently.  What makes it worse, it's nature of manual that would vanish in a moment whenever you memorized everything about this soulskill or not.  A moment later, it starts to disappear before you can put it away. ");
            outputText("You should be more careful next time not to waste any new manuals by trying to learn a soul skill you can't handle yet.");
            if (!player.hasStatusEffect(StatusEffects.KnowsGrandioseHailOfBlades)) outputText(" Or the one that require other less complicated soulskill used as a base to learn the more advanced one.");
        }
    }
    public function hailofbladesmanual4(player:Player):void {
        clearOutput();
        if (player.hasPerk(PerkLib.SoulPersonage) && player.hasStatusEffect(StatusEffects.KnowsGrandioseHailOfMoonBlades)) {
            if (!player.hasStatusEffect(StatusEffects.KnowsSextupleThrust)) {
                outputText("You open the manual and discover it to be an instructional book on how to use a soul skill.  Most of it is filled with generic information on poses and channeling soulforce while performing Sextuple Thrust.  In no time at all, you've read the whole thing, but it disappears into thin air before you can put it away.");
                outputText("[pg]You blink in surprise, assaulted by the knowledge of a <b>new soul skill: Sextuple Thrust.</b>");
                player.createStatusEffect(StatusEffects.KnowsSextupleThrust, 0, 0, 0, 0);
                return;
            }
            if (player.hasStatusEffect(StatusEffects.KnowsSextupleThrust)) {
                outputText("When you open the manual, it turns out you already know this soul skill.  Having a hunch, you read the whole manual and when it disappears into thin air you feel it has restored some of your soulforce.");
                EngineCore.SoulforceChange(45);
            }
        } else {
            outputText("You open the manual, and discover to your horror it's a way too complicated soul skill to learn currently.  What makes it worse is the nature of the manual, which vanish at a moment's notice whether you've managed to memorize the soulskill or not.  A moment later, it starts to disappear before you can put it away. ");
            outputText("You should be more careful next time not to waste any new manuals by trying to learn a soul skill you can't handle yet.");
            if (!player.hasStatusEffect(StatusEffects.KnowsGrandioseHailOfMoonBlades)) outputText(" Or the one that require other less complicated soulskill used as a base to learn the more advanced one.");
        }
    }

    public function cometmanual(player:Player):void {
        clearOutput();
        if (player.hasPerk(PerkLib.SoulWarrior)) {
            if (!player.hasStatusEffect(StatusEffects.KnowsComet)) {
                outputText("You open the manual and discover it to be an instructional book on how to use a soul skill.  Most of it is filled with generic information on poses and channeling soulforce while performing Comet.  In no time at all, you've read the whole thing, but it disappears into thin air before you can put it away.");
                outputText("[pg]You blink in surprise, assaulted by the knowledge of a <b>new soul skill: Comet.</b>");
                player.createStatusEffect(StatusEffects.KnowsComet, 0, 0, 0, 0);
                return;
            }
            if (player.hasStatusEffect(StatusEffects.KnowsComet)) {
                outputText("When you open the manual, it turns out you already know this soul skill.  Having a hunch, you read the whole manual and when it disappears into thin air you feel it has restored some of your soulforce.");
                EngineCore.SoulforceChange(100);
            }
        } else {
            outputText("You open the manual, and discover to your horror it's a way too complicated soul skill to learn currently.  What makes it worse is the nature of the manual, which vanish at a moment's notice whether you've managed to memorize the soulskill or not.  A moment later, it starts to disappear before you can put it away. ");
            outputText("You should be more careful next time not to waste any new manuals by trying to learn a soul skill you can't handle yet.");
        }
    }
    public function createelementmanual1(player:Player):void {
        clearOutput();
        if (!player.hasStatusEffect(StatusEffects.KnowsCreateElementBasic)) {
            outputText("You open the manual and discover it to be an instructional book on how to use a soul skill.  Most of it is filled with generic information on poses and channeling soulforce while performing Create Element (Basic).  In no time at all, you've read the whole thing, but it disappears into thin air before you can put it away.");
            outputText("[pg]You blink in surprise, assaulted by the knowledge of a <b>new soul skill: Create Element (Basic).</b>");
            player.createStatusEffect(StatusEffects.KnowsCreateElementBasic, 0, 0, 0, 0);
            return;
        }
        if (player.hasStatusEffect(StatusEffects.KnowsCreateElementBasic)) {
            outputText("When you open the manual, it turns out you already know this soul skill.  Having a hunch, you read the whole manual and when it disappears into thin air you feel it has restored some of your soulforce.");
            EngineCore.SoulforceChange(25);
        }
    }
    public function createelementmanual2(player:Player):void {
        clearOutput();
        if (player.hasPerk(PerkLib.SoulPersonage) && player.hasStatusEffect(StatusEffects.KnowsCreateElementBasic)) {
            if (!player.hasStatusEffect(StatusEffects.KnowsCreateElementAdvanced)) {
                outputText("You open the manual and discover it to be an instructional book on how to use a soul skill.  Most of it is filled with generic information on poses and channeling soulforce while performing Create Element (Advanced).  In no time at all, you've read the whole thing, but it disappears into thin air before you can put it away.");
                outputText("[pg]You blink in surprise, assaulted by the knowledge of a <b>new soul skill: Create Element (Advanced).</b>");
                player.createStatusEffect(StatusEffects.KnowsCreateElementAdvanced, 0, 0, 0, 0);
                return;
            }
            if (player.hasStatusEffect(StatusEffects.KnowsCreateElementAdvanced)) {
                outputText("When you open the manual, it turns out you already know this soul skill.  Having a hunch, you read the whole manual and when it disappears into thin air you feel it has restored some of your soulforce.");
                EngineCore.SoulforceChange(45);
            }
        } else {
            outputText("You open the manual, and discover to your horror it's a way too complicated soul skill to learn currently.  What makes it worse is the nature of the manual, which vanish at a moment's notice whether you've managed to memorize the soulskill or not.  A moment later, it starts to disappear before you can put it away. ");
            outputText("You should be more careful next time not to waste any new manuals by trying to learn a soul skill you can't handle yet.");
            if (!player.hasStatusEffect(StatusEffects.KnowsCreateElementAdvanced)) outputText(" Or the one that require other less complicated soulskill used as a base to learn the more advanced one.");
        }
    }

    public function violetpupiltransformationmanual(player:Player):void {
        clearOutput();
        if (player.hasPerk(PerkLib.SoulWarrior)) {
            if (!player.hasStatusEffect(StatusEffects.KnowsVioletPupilTransformation)) {
                outputText("You open the manual and discover it to be an instructional book on how to use a soul skill.  Most of it is filled with generic information on poses and channeling soulforce while performing Violet Pupil Transformation.  In no time at all, you've read the whole thing, but it disappears into thin air before you can put it away.");
                outputText("[pg]You blink in surprise, assaulted by the knowledge of a <b>new soul skill: Violet Pupil Transformation.</b>");
                player.createStatusEffect(StatusEffects.KnowsVioletPupilTransformation, 0, 0, 0, 0);
                return;
            }
            if (player.hasStatusEffect(StatusEffects.KnowsVioletPupilTransformation)) {
                outputText("When you open the manual, it turns out you already know this soul skill.  Having a hunch, you read the whole manual and when it disappears into thin air you feel it has restored some of your soulforce.");
                EngineCore.SoulforceChange(100);
            }
        } else {
            outputText("You open the manual, and discover to your horror it's a way too complicated soul skill to learn currently.  What makes it worse is the nature of the manual, which vanish at a moment's notice whether you've managed to memorize the soulskill or not.  A moment later, it starts to disappear before you can put it away. ");
            outputText("You should be more careful next time not to waste any new manuals by trying to learn a soul skill you can't handle yet.");
        }
    }
	
    public function sunrisemanual(player:Player):void {
        clearOutput();
        if (player.hasPerk(PerkLib.SoulWarrior)) {
            if (!player.hasStatusEffect(StatusEffects.KnowsSunrise)) {
                outputText("You open the manual and discover it to be an instructional book on how to use a soul skill.  Most of it is filled with generic information on poses and channeling soulforce while performing Sunrise.  In no time at all, you've read the whole thing, but it disappears into thin air before you can put it away.");
                outputText("[pg]You blink in surprise, assaulted by the knowledge of a <b>new soul skill: Sunrise.</b>");
                player.createStatusEffect(StatusEffects.KnowsSunrise, 0, 0, 0, 0);
                return;
            }
            if (player.hasStatusEffect(StatusEffects.KnowsSunrise)) {
                outputText("When you open the manual, it turns out you already know this soul skill.  Having a hunch, you read the whole manual and when it disappears into thin air you feel it has restored some of your soulforce.");
                EngineCore.SoulforceChange(100);
            }
        } else {
            outputText("You open the manual, and discover to your horror it's a way too complicated soul skill to learn currently.  What makes it worse is the nature of the manual, which vanish at a moment's notice whether you've managed to memorize the soulskill or not.  A moment later, it starts to disappear before you can put it away. ");
            outputText("You should be more careful next time not to waste any new manuals by trying to learn a soul skill you can't handle yet.");
        }
    }

    public function soulblastmanual(player:Player):void {
        clearOutput();
        outputText("You open the manual and discover it to be an instructional book on how to use a soul skill.  Most of it is filled with generic information on poses and channeling soulforce while performing Soul Blast.  In no time at all, you've read the whole thing, but it disappears into thin air before you can put it away.");
        outputText("[pg]You blink in surprise, assaulted by the knowledge of a <b>new soul skill: Soul Blast.</b>");
        player.createStatusEffect(StatusEffects.KnowsSoulBlast, 0, 0, 0, 0);
    }

    public function flamesoflovemanualrankless(player:Player):void {
        clearOutput();
        if (!player.hasStatusEffect(StatusEffects.KnowsFlamesOfLove)) {
            outputText("You open the manual and discover it to be an instructional book on how to use a soul skill.  Most of it is filled with generic information on poses and channeling lust into flames.  In no time at all, you've read the whole thing, but it disappears into thin air before you can put it away.");
            outputText("[pg]You blink in surprise, assaulted by the knowledge of a <b>new soul skill: Flames of Love (Rankless).</b>");
            player.createStatusEffect(StatusEffects.KnowsFlamesOfLove, 1, 0, 0, 0);
            return;
        }
        if (player.hasStatusEffect(StatusEffects.KnowsFlamesOfLove)) {
            outputText("When you open the manual, it turns out you already know this soul skill.  Having a hunch, you read the whole manual and when it disappears into thin air you feel it has restored some of your soulforce.");
            EngineCore.SoulforceChange(25);
        }
    }

    public function flamesoflovemanuallowrank(player:Player):void {
        clearOutput();
        if (player.hasPerk(PerkLib.SoulApprentice)) {
            if (!player.hasStatusEffect(StatusEffects.KnowsFlamesOfLove)) {
                outputText("You open the manual and discover it to be an instructional book on how to use a soul skill.  Most of it is filled with generic information on poses and channeling lust into flames.  In no time at all, you've read the whole thing, but it disappears into thin air before you can put it away.");
                outputText("[pg]You blink in surprise, assaulted by the knowledge of a <b>new soul skill: Flames of Love (Low Rank).</b>");
                player.createStatusEffect(StatusEffects.KnowsFlamesOfLove, 2, 0, 0, 0);
                return;
            }
            else if (player.statusEffectv1(StatusEffects.KnowsFlamesOfLove) < 2) {
                outputText("You open the manual and discover it to be an instructional book on how to use a soul skill.  Most of it is filled with generic information on poses and channeling lust into flames.  In no time at all, you've read the whole thing, but it disappears into thin air before you can put it away.");
                outputText("[pg]You blink in surprise, assaulted by the knowledge of a <b>new soul skill: Flames of Love (Low Rank).</b>");
                player.changeStatusValue(StatusEffects.KnowsFlamesOfLove, 1, 2);
            } else {
                outputText("When you open the manual, it turns out you already know this soul skill.  Having a hunch, you read the whole manual and when it disappears into thin air you feel it has restored some of your soulforce.");
                EngineCore.SoulforceChange(50);
            }
        } else {
            outputText("You open the manual, and discover to your horror it's a way too complicated soul skill to learn currently.  What makes it worse is the nature of the manual, which vanish at a moment's notice whether you've managed to memorize the soulskill or not.  A moment later, it starts to disappear before you can put it away. ");
            outputText("You should be more careful next time not to waste any new manuals by trying to learn a soul skill you can't handle yet.");
        }
    }

    public function iciclesoflovemanualrankless(player:Player):void {
        clearOutput();
        if (!player.hasStatusEffect(StatusEffects.KnowsIciclesOfLove)) {
            outputText("You open the manual and discover it to be an instructional book on how to use a soul skill.  Most of it is filled with generic information on poses and channeling lust into icicles.  In no time at all, you've read the whole thing, but it disappears into thin air before you can put it away.");
            outputText("[pg]You blink in surprise, assaulted by the knowledge of a <b>new soul skill: Icicles of Love (Rankless).</b>");
            player.createStatusEffect(StatusEffects.KnowsIciclesOfLove, 1, 0, 0, 0);
            return;
        }
        if (player.hasStatusEffect(StatusEffects.KnowsIciclesOfLove)) {
            outputText("When you open the manual, it turns out you already know this soul skill.  Having a hunch, you read the whole manual and when it disappears into thin air you feel it has restored some of your soulforce.");
            EngineCore.SoulforceChange(25);
        }
    }

    public function iciclesoflovemanuallowrank(player:Player):void {
        clearOutput();
        if (player.hasPerk(PerkLib.SoulApprentice)) {
            if (!player.hasStatusEffect(StatusEffects.KnowsIciclesOfLove)) {
                outputText("You open the manual and discover it to be an instructional book on how to use a soul skill.  Most of it is filled with generic information on poses and channeling lust into icicles.  In no time at all, you've read the whole thing, but it disappears into thin air before you can put it away.");
                outputText("[pg]You blink in surprise, assaulted by the knowledge of a <b>new soul skill: Icicles of Love (Low Rank).</b>");
                player.createStatusEffect(StatusEffects.KnowsIciclesOfLove, 2, 0, 0, 0);
                return;
            }
            else if (player.statusEffectv1(StatusEffects.KnowsIciclesOfLove) < 2) {
                outputText("You open the manual and discover it to be an instructional book on how to use a soul skill.  Most of it is filled with generic information on poses and channeling lust into icicles.  In no time at all, you've read the whole thing, but it disappears into thin air before you can put it away.");
                outputText("[pg]You blink in surprise, assaulted by the knowledge of a <b>new soul skill: Icicles of Love (Low Rank).</b>");
                player.changeStatusValue(StatusEffects.KnowsIciclesOfLove, 1, 2);
            } else {
                outputText("When you open the manual, it turns out you already know this soul skill.  Having a hunch, you read the whole manual and when it disappears into thin air you feel it has restored some of your soulforce.");
                EngineCore.SoulforceChange(50);
            }
        } else {
            outputText("You open the manual, and discover to your horror it's a way too complicated soul skill to learn currently.  What makes it worse is the nature of the manual, which vanish at a moment's notice whether you've managed to memorize the soulskill or not.  A moment later, it starts to disappear before you can put it away. ");
            outputText("You should be more careful next time not to waste any new manuals by trying to learn a soul skill you can't handle yet.");
        }
    }

    public function stormofsisterhoodmanualrankless(player:Player):void {
        clearOutput();
        if (!player.hasStatusEffect(StatusEffects.KnowsStormOfSisterhood)) {
            outputText("You open the manual and discover it to be an instructional book on how to use a soul skill.  Most of it is filled with generic information on poses and channeling wrath into lighting.  In no time at all, you've read the whole thing, but it disappears into thin air before you can put it away.");
            outputText("[pg]You blink in surprise, assaulted by the knowledge of a <b>new soul skill: Storm of Sisterhood (Rankless).</b>");
            player.createStatusEffect(StatusEffects.KnowsStormOfSisterhood, 1, 0, 0, 0);
            return;
        }
        if (player.hasStatusEffect(StatusEffects.KnowsStormOfSisterhood)) {
            outputText("When you open the manual, it turns out you already know this soul skill.  Having a hunch, you read the whole manual and when it disappears into thin air you feel it has restored some of your soulforce.");
            EngineCore.SoulforceChange(25);
        }
    }

    public function stormofsisterhoodmanuallowrank(player:Player):void {
        clearOutput();
        if (player.hasPerk(PerkLib.SoulApprentice)) {
            if (!player.hasStatusEffect(StatusEffects.KnowsStormOfSisterhood)) {
                outputText("You open the manual and discover it to be an instructional book on how to use a soul skill.  Most of it is filled with generic information on poses and channeling wrath into lighting.  In no time at all, you've read the whole thing, but it disappears into thin air before you can put it away.");
                outputText("[pg]You blink in surprise, assaulted by the knowledge of a <b>new soul skill: Storm of Sisterhood (Low Rank).</b>");
                player.createStatusEffect(StatusEffects.KnowsStormOfSisterhood, 2, 0, 0, 0);
                return;
            }
            else if (player.statusEffectv1(StatusEffects.KnowsStormOfSisterhood) < 2) {
                outputText("You open the manual and discover it to be an instructional book on how to use a soul skill.  Most of it is filled with generic information on poses and channeling wrath into lighting.  In no time at all, you've read the whole thing, but it disappears into thin air before you can put it away.");
                outputText("[pg]You blink in surprise, assaulted by the knowledge of a <b>new soul skill: Storm of Sisterhood (Low Rank).</b>");
                player.changeStatusValue(StatusEffects.KnowsStormOfSisterhood, 1, 2);
            } else {
                outputText("When you open the manual, it turns out you already know this soul skill.  Having a hunch, you read the whole manual and when it disappears into thin air you feel it has restored some of your soulforce.");
                EngineCore.SoulforceChange(50);
            }
        } else {
            outputText("You open the manual, and discover to your horror it's a way too complicated soul skill to learn currently.  What makes it worse is the nature of the manual, which vanish at a moment's notice whether you've managed to memorize the soulskill or not.  A moment later, it starts to disappear before you can put it away. ");
            outputText("You should be more careful next time not to waste any new manuals by trying to learn a soul skill you can't handle yet.");
        }
    }

    public function nightofbrotherhoodmanualrankless(player:Player):void {
        clearOutput();
        if (!player.hasStatusEffect(StatusEffects.KnowsNightOfBrotherhood)) {
            outputText("You open the manual and discover it to be an instructional book on how to use a soul skill.  Most of it is filled with generic information on poses and channeling wrath into darkness.  In no time at all, you've read the whole thing, but it disappears into thin air before you can put it away.");
            outputText("[pg]You blink in surprise, assaulted by the knowledge of a <b>new soul skill: Night of Brotherhood (Rankless).</b>");
            player.createStatusEffect(StatusEffects.KnowsNightOfBrotherhood, 1, 0, 0, 0);
            return;
        }
        if (player.hasStatusEffect(StatusEffects.KnowsNightOfBrotherhood)) {
            outputText("When you open the manual, it turns out you already know this soul skill.  Having a hunch, you read the whole manual and when it disappears into thin air you feel it has restored some of your soulforce.");
            EngineCore.SoulforceChange(25);
        }
    }

    public function nightofbrotherhoodmanuallowrank(player:Player):void {
        clearOutput();
        if (player.hasPerk(PerkLib.SoulApprentice)) {
            if (!player.hasStatusEffect(StatusEffects.KnowsNightOfBrotherhood)) {
                outputText("You open the manual and discover it to be an instructional book on how to use a soul skill.  Most of it is filled with generic information on poses and channeling wrath into darkness.  In no time at all, you've read the whole thing, but it disappears into thin air before you can put it away.");
                outputText("[pg]You blink in surprise, assaulted by the knowledge of a <b>new soul skill: Night of Brotherhood (Low Rank).</b>");
                player.createStatusEffect(StatusEffects.KnowsNightOfBrotherhood, 2, 0, 0, 0);
                return;
            }
            else if (player.hasStatusEffect(StatusEffects.KnowsNightOfBrotherhood)) {
                outputText("You open the manual and discover it to be an instructional book on how to use a soul skill.  Most of it is filled with generic information on poses and channeling wrath into darkness.  In no time at all, you've read the whole thing, but it disappears into thin air before you can put it away.");
                outputText("[pg]You blink in surprise, assaulted by the knowledge of a <b>new soul skill: Night of Brotherhood (Low Rank).</b>");
                player.changeStatusValue(StatusEffects.KnowsNightOfBrotherhood, 1, 2);
            } else {
                outputText("When you open the manual, it turns out you already know this soul skill.  Having a hunch, you read the whole manual and when it disappears into thin air you feel it has restored some of your soulforce.");
                EngineCore.SoulforceChange(50);
            }
        } else {
            outputText("You open the manual, and discover to your horror it's a way too complicated soul skill to learn currently.  What makes it worse is the nature of the manual, which vanish at a moment's notice whether you've managed to memorize the soulskill or not.  A moment later, it starts to disappear before you can put it away. ");
            outputText("You should be more careful next time not to waste any new manuals by trying to learn a soul skill you can't handle yet.");
        }
    }

    public function devourermanual(player:Player):void {
        clearOutput();
        outputText("You open the manual, and discover it seems to be almost unreadable. It looks like it would teach the reader to use some sort of soul skill, but it seems all very fragmentary. In no time at all, you've read the whole thing, and like other manuscripts, it starts to disappear into thin air. When you are left with nothing to do, you are considering your next course of action when a new thought begins to circulate in your mind. The more it circles, the more it seems to literally 'suck you in'. You try to stop it, but it's too late. 'At least I hope I won’t hit the ground...' is the last non-devoured thought you have before blanking out. [pg]After an unknown amount of time, you awake on the floor with the knowledge of a b>new soul skill: Devourer/b> seared into your mind.");
        player.createStatusEffect(StatusEffects.KnowsHeavensDevourer, 1, 0, 0, 0);
    }
	
    public function soaringbladesmanual(player:Player):void {
        clearOutput();
		if (player.hasPerk(PerkLib.Dantain)) {
			if (!player.hasPerk(PerkLib.SoaringBlades)) {
				outputText("You open the manual and read it slowly. Initially, it seems needlessly complicated, but you take a moment to read it a again, slowly working out the parts as the aspect becomes clearer. It goes into depth about lowering the consumption of soulforce when manipulating flying swords. You can see the ways it teaches you how to lower consumption when the change is not related to progressing through each minor or major cultivation realm, but due to progression developing dantain. From Qi Condensation and Foundation Establishment toward Golden Core or Nascent Soul.\n\n");
				outputText("You're feeling more enlightened, closer and closer with each thorough read. You read from the beginning once again, before you finally close the manual with a sense of enlightenment. You barely notice the manual fading away in your grasp. (<b>Gained Perk: Soaring Blades!</b>)");
				player.createPerk(PerkLib.SoaringBlades, 0, 0, 0, 0);
				return;
			}
			if (player.hasPerk(PerkLib.SoaringBlades)) {
				outputText("When you open the manual, it turns out you already know this passive.  Having a hunch, you read the whole manual and when it disappears into thin air you feel it has restored some of your soulforce.");
				EngineCore.SoulforceChange(150);
			}
		} else {
			outputText("You open the manual, and discover to your horror it's way too complicated passive to learn currently.  What makes it worse is the nature of the manual, which vanish at a moment's notice whether you've managed to memorize the soulskill or not.  A moment later, it starts to disappear before you can put it away. ");
            outputText("You should be more careful next time to not waste any new manual by trying to learn it when you not even found your own Dantian.");
		}
    }
	
    public function firstattackflyingswordmanual(player:Player):void {
        clearOutput();
		if (player.hasPerk(PerkLib.SoulWarrior) && player.hasPerk(PerkLib.SoaringBlades) && player.level >= 24) {
			if (!player.hasPerk(PerkLib.FirstAttackFlyingSword)) {
				outputText("You open the manual and read it slowly. Initially, it seems needlessly complicated, but you take a moment to read it a again, slowly working out the parts as the aspect becomes clearer. It goes into depth about using flying swords to attack enemy before you act. You can see the ways it teaches you how to use them in way allowing more independent actions with very minimal amount of concentration, which you could now use elsewhere.\n\n");
				outputText("You're feeling more enlightened, closer and closer with each thorough read. You read from the beginning once again, before you finally close the manual with a sense of enlightenment. You barely notice the manual fading away in your grasp. (<b>Gained Perk: First Attack: Flying Sword!</b>)");
				player.createPerk(PerkLib.FirstAttackFlyingSword, 0, 0, 0, 0);
				return;
			}
			if (player.hasPerk(PerkLib.FirstAttackFlyingSword)) {
				outputText("When you open the manual, it turns out you already know this passive.  Having a hunch, you read the whole manual and when it disappears into thin air you feel it has restored some of your soulforce.");
				EngineCore.SoulforceChange(150);
			}
		} else {
			outputText("You open the manual, and discover to your horror it's way too complicated passive to learn currently.  What makes it worse is the nature of the manual, which vanish at a moment's notice whether you've managed to memorize the soulskill or not.  A moment later, it starts to disappear before you can put it away. ");
            outputText("You should be more careful next time to not waste any new manual by trying to learn it when you neither: reached Soul Warrior stage, learned Soaring Blades passive, been strong enough (lvl 24+).");
		}
    }

    public function verydilutedarcaneregenconcotion(player:Player):void {
		var verydilutedarcaneregen:Number = Math.round(player.maxMana() * 0.02) + 200;
		outputText("You grab your mana potion, pull the cork off, and swiftly chug it down.[pg](Mana recovered: "+verydilutedarcaneregen+")");
        EngineCore.ManaChange(verydilutedarcaneregen);
        statScreenRefresh();
    }
    public function dilutedarcaneregenconcotion(player:Player):void {
        var dilutedarcaneregen:Number = Math.round(player.maxMana() * 0.04) + 1200;
		outputText("You grab your mana potion, pull the cork off, and swiftly chug it down.[pg](Mana recovered:: "+dilutedarcaneregen+")");
        EngineCore.ManaChange(dilutedarcaneregen);
        statScreenRefresh();
    }
    public function arcaneregenconcotion(player:Player):void {
        var arcaneregen:Number = Math.round(player.maxMana() * 0.06) + 7200;
		outputText("You grab your mana potion, pull the cork off, and swiftly chug it down.[pg](Mana recovered:: "+arcaneregen+")");
        EngineCore.ManaChange(arcaneregen);
        statScreenRefresh();
    }

    public function tomeofcleave(player:Player):void {
        clearOutput();
        if (!player.hasStatusEffect(StatusEffects.KnowsCleave)) {
            outputText("[pg]You read the tome, enlightening yourself to the art of making your blows properly connect to multiple targets. You gained <b>new physical special: Cleave.</b>");
            player.createStatusEffect(StatusEffects.KnowsCleave, 0, 0, 0, 0);
            return;
        }
        if (player.hasStatusEffect(StatusEffects.KnowsCleave)) {
            outputText("When you open the tome, it turns out you already know this special.  Having a hunch you read whole tome and when it disappears into thin air you feel it does restored some of your fatigue.");
            EngineCore.changeFatigue(-Math.round(25*player.postConsumptionMlt()));
        }
    }

    public function buffAlchemicalThunder(player:Player):void {
        clearOutput();
        outputText("You coat your weapon with the solution, and your " + player.weaponName + " begins crackling with electricity!");
        player.createStatusEffect(StatusEffects.AlchemicalThunderBuff, 0, 0, 0, 0);
    }

    public function packOfNails(player:Player):void {
        clearOutput();
        var nails:Number = 10 + rand(21);
        if (flags[kFLAGS.ACHIEVEMENT_PROGRESS_HAMMER_TIME] >= 300) awardAchievement("Hammer Time", kACHIEVEMENTS.GENERAL_HAMMER_TIME);
        CampStatsAndResources.NailsResc += nails;
        if (CampStatsAndResources.NailsResc > SceneLib.campUpgrades.checkMaterialsCapNails()) CampStatsAndResources.NailsResc = SceneLib.campUpgrades.checkMaterialsCapNails();
        outputText("You open the pack to find " + nails + " nails inside. <b>("+CampStatsAndResources.NailsResc+"/"+SceneLib.campUpgrades.checkMaterialsCapNails()+" total!)</b>");
    }

    public function packOfDemonBones(player:Player):void {
        clearOutput();
        var harv:Number = 10;
		if (harv + player.perkv1(PerkLib.PrestigeJobNecromancer) > SceneLib.campMakeWinions.maxDemonBonesStored()) harv = SceneLib.campMakeWinions.maxDemonBonesStored() - player.perkv1(PerkLib.PrestigeJobNecromancer);
		outputText("You open the pack to find " + harv + " demon bones inside.");
		player.addPerkValue(PerkLib.PrestigeJobNecromancer, 1, harv);
    }

    /* ITEMZZZZZ FUNCTIONS GO HERE */
    public function incubiDraft(tainted:Boolean, player:Player):void {
        player.slimeFeed();
        var temp2:Number = 0;
        var temp3:Number = 0;
        var rando:Number = rand(100);
        rando += (10 * player.additionalTransformationChances);
        clearOutput();
        outputText("The draft is slick and sticky, ");
        if (player.cor <= 33) outputText("just swallowing it makes you feel unclean.");
        if (player.cor > 33 && player.cor <= 66) outputText("reminding you of something you just can't place.");
        if (player.cor > 66) outputText("deliciously sinful in all the right ways.");
        if (player.cor >= 90) outputText("  You're sure it must be distilled from the cum of an incubus.");
        if (!player.blockingBodyTransformations()) {
            //Lowlevel changes
            if (rando < 50) {
                if (player.cocks.length == 1) {
                    if (player.cocks[0].cockType != CockTypesEnum.DEMON) outputText("[pg]Your [cock] becomes shockingly hard.  It turns a shiny inhuman purple and spasms, dribbling hot demon-like cum as it begins to grow.");
                    else outputText("[pg]Your [cock] becomes shockingly hard.  It dribbles hot demon-like cum as it begins to grow.");
                    var selectedCock:int;
                    if (rand(4) == 0) selectedCock = player.growCock(0, 3);
                    else selectedCock = player.growCock(0, 1);
                    dynStats("lust", 5 + selectedCock * 3, "cor", tainted ? 1 : 0);
                    player.addCurse("sens", 1, 1);
                    MutagenBonus("int", 1);
                    MutagenBonus("lib", 2);
                    if (selectedCock < .5) outputText("  It stops almost as soon as it starts, growing only a tiny bit longer.");
                    if (selectedCock >= .5 && selectedCock < 1) outputText("  It grows slowly, stopping after roughly half an inch of growth.");
                    if (selectedCock >= 1 && selectedCock <= 2) outputText("  The sensation is incredible as more than an inch of lengthened dick-flesh grows in.");
                    if (selectedCock > 2) outputText("  You smile and idly stroke your lengthening [cock] as a few more inches sprout.");
                    if (tainted) {
                        dynStats("lus", 5 + selectedCock * 3, "cor", 1);
                        player.addCurse("sens", 1, 1);
                        MutagenBonus("int", 1);
                        MutagenBonus("lib", 2);
                    } else {
                        dynStats("lus", 5 + selectedCock * 3, "scale", false);
                        player.addCurse("sens", 1, 1);
                        MutagenBonus("int", 1);
                        MutagenBonus("lib", 2);
                    }
                    if (player.cocks[0].cockType != CockTypesEnum.DEMON) outputText("  With the transformation complete, your [cock] returns to its normal coloration.");
                    else outputText("  With the transformation complete, your [cock] throbs in an almost happy way as it goes flaccid once more.");
                }
                if (player.cocks.length > 1) {
                    selectedCock = player.cocks.length;
                    temp2 = player.shortestCockIndex();
                    if (int(Math.random() * 4) == 0) temp3 = player.growCock(temp2, 3);
                    else temp3 = player.growCock(temp2, 1);
                    if (tainted) {
                        dynStats("lus", 5 + selectedCock * 3, "cor", 1);
                        player.addCurse("sens", 1, 1);
                        MutagenBonus("int", 1);
                        MutagenBonus("lib", 2);
                    } else {
                        dynStats("lus", 5 + selectedCock * 3, "scale", false);
                        player.addCurse("sens", 1, 1);
                        MutagenBonus("int", 1);
                        MutagenBonus("lib", 2);
                    }
                    //Grammar police for 2 cocks
                    if (player.cockTotal() == 2) outputText("[pg]Both of your [cocks] become shockingly hard, swollen and twitching as they turn a shiny inhuman purple in color.  They spasm, dripping thick ropes of hot demon-like pre-cum along their lengths as your shortest " + player.cockDescript(temp2) + " begins to grow.");
                    //For more than 2
                    else outputText("[pg]All of your [cocks] become shockingly hard, swollen and twitching as they turn a shiny inhuman purple in color.  They spasm, dripping thick ropes of hot demon-like pre-cum along their lengths as your shortest " + player.cockDescript(temp2) + " begins to grow.");

                    if (temp3 < .5) outputText("  It stops almost as soon as it starts, growing only a tiny bit longer.");
                    if (temp3 >= .5 && temp3 < 1) outputText("  It grows slowly, stopping after roughly half an inch of growth.");
                    if (temp3 >= 1 && temp3 <= 2) outputText("  The sensation is incredible as more than an inch of lengthened dick-flesh grows in.");
                    if (temp3 > 2) outputText("  You smile and idly stroke your lengthening " + player.cockDescript(temp2) + " as a few more inches sprout.");
                    outputText("  With the transformation complete, your [cocks] return to their normal coloration.");
                }
                //NO CAWKS?
                if (player.cocks.length == 0) {
                    growDemonCock(1, tainted);
                }
                //TIT CHANGE 25% chance of shrinkage
                if (rand(4) == 0) {
                    if (!flags[kFLAGS.HYPER_HAPPY]) {
                        player.shrinkTits();
                    }
                }
            }
            //Mid-level changes
            if (rando >= 50 && rando < 93) {
                if (player.cocks.length == 0) growDemonCock(1, tainted);
                else if (player.cocks.length >= 1) {
                    if (player.cocks.length == 1) outputText("[pg]Your cock fills to its normal size and begins growing... ");
                    else outputText("[pg]Your cocks fill to full-size... and begin growing obscenely.  ");
                    selectedCock = player.cocks.length;
                    while (selectedCock > 0) {
                        selectedCock--;
                        temp2 = player.growCock(selectedCock, rand(3) + 2);
                        temp3 = player.thickenCock(selectedCock, 1);
                        if (temp3 < .1) player.cocks[selectedCock].cockThickness += .05;
                    }
                    player.lengthChange(temp2, player.cocks.length);
                    //Display the degree of thickness change.
                    if (temp3 >= 1) {
                        if (player.cocks.length == 1) outputText("[pg]Your cock spreads rapidly, swelling an inch or more in girth, making it feel fat and floppy.");
                        else outputText("[pg]Your cocks spread rapidly, swelling as they grow an inch or more in girth, making them feel fat and floppy.");
                    }
                    if (temp3 <= .5) {
                        if (player.cocks.length > 1) outputText("[pg]Your cocks feel swollen and heavy. With a firm, but gentle, squeeze, you confirm your suspicions. They are definitely thicker.");
                        else outputText("[pg]Your cock feels swollen and heavy. With a firm, but gentle, squeeze, you confirm your suspicions. It is definitely thicker.");
                    }
                    if (temp3 > .5 && temp2 < 1) {
                        if (player.cocks.length == 1) outputText("[pg]Your cock seems to swell up, feeling heavier. You look down and watch it growing fatter as it thickens.");
                        if (player.cocks.length > 1) outputText("[pg]Your cocks seem to swell up, feeling heavier. You look down and watch them growing fatter as they thicken.");
                    }
                    if (tainted) {
                        dynStats("lus", 10, "cor", 3);
                        player.addCurse("sens", 5, 1);
                        MutagenBonus("lib", 3);
                    } else {
                        dynStats("lus", 10, "scale", false);
                        player.addCurse("sens", 5, 1);
                        MutagenBonus("lib", 3);
                    }
                }
                //Shrink breasts a more
                //TIT CHANGE 50% chance of shrinkage
                if (rand(2) == 0) {
                    if (!flags[kFLAGS.HYPER_HAPPY]) {
                        player.shrinkTits();
                    }
                }
            }
            //High level change
            if (rando >= 93) {
                if (player.cockTotal() < 10) {
                    if (int(Math.random() * 10) < int(player.cor / (25+player.corruptionTolerance))) {
                        outputText("[pg]");
                        growDemonCock(rand(2) + 2, tainted);
                    } else {
                        growDemonCock(1, tainted);
                    }
                }
                if (!flags[kFLAGS.HYPER_HAPPY]) {
                    player.shrinkTits();
                    player.shrinkTits();
                }
				if (!InCollection(player.skinColor1, DemonRace.DemonSkinColors) && !InCollection(player.skinColor2, DemonRace.DemonSkin2Colors)) {
					var choice1:String = randomChoice(DemonRace.DemonSkinColors);
                    var choice2:String = randomChoice(DemonRace.DemonSkin2Colors);
                    player.skinColor1 = choice1;
                    player.skinColor2 = choice2;
                    outputText("[pg]A tingling sensation runs across your skin in waves, growing stronger as <b>your skin's tone slowly shifts, darkening to become [skin color] in color.</b>");
                    if (tainted) dynStats("cor", 1);
                    else dynStats("cor", 0);
				}
            }
            //Demonic changes - higher chance with higher corruption.
            if (rand(40) + (player.cor + player.corruptionTolerance) / 2 > 40 && tainted) demonChanges(player);
        }
        if (rand(4) == 0 && tainted) outputText(player.modFem(5, 2));
        if (rand(4) == 0 && tainted) outputText(player.modThickness(30, 2));
        player.refillHunger(10);
    }

    public function growDemonCock(growCocks:Number, tainted:Boolean):void {
        var grown:int = 0;
        while (growCocks > 0) {
            player.createCock();
            transformations.UnlockCocks();
            player.cocks[player.cocks.length - 1].cockLength = rand(3) + 4;
            player.cocks[player.cocks.length - 1].cockThickness = .75;
            if (tainted) {
                player.cocks[player.cocks.length - 1].cockType = CockTypesEnum.DEMON;
                Metamorph.unlockMetamorphEx(CockMem.getMemory(CockMem.DEMON));
            }
            growCocks--;
            grown++;
        }
        if (tainted) {
            dynStats("lus", 10, "cor", 5);
            player.addCurse("sens", 5, 1);
            MutagenBonus("lib", 3);
        } else {
            dynStats("lus", 10, "scale", false);
            player.addCurse("sens", 5, 1);
            MutagenBonus("lib", 3);
        }
        outputText("[pg]You shudder as a pressure builds in your crotch, peaking painfully as a large bulge begins to push out from your body.  ");
        if (grown == 1) {
            outputText("The skin seems to fold back as a fully formed demon-cock bursts forth from your loins, drizzling hot cum everywhere as it orgasms.  ");
            if (!tainted) outputText("In time, it fades to a more normal coloration and human-like texture.  ");
        } else {
            outputText("The skin bulges obscenely, darkening and splitting around " + num2Text(grown) + " of your new dicks.  For an instant they turn a demonic purple and dribble in thick spasms of scalding demon-cum.  ");
            if (grown > 4) outputText("Your tender bundle of new cocks feels deliciously sensitive, and you cannot stop yourself from wrapping your hands around the slick demonic bundle and pleasuring them.[pg]Nearly an hour later, you finally pull your slick body away from the puddle you left on the ground.  When you look back, you notice it has already been devoured by the hungry earth.  ");
            cheatTime(1); // hour :P
            if (!tainted) outputText("In a few minutes, your cocks return to a more humanoid coloration.  ");
        }

        player.orgasm('Dick');
    }

    public function minotaurCum(purified:Boolean, player:Player):void {
        player.slimeFeed();
        clearOutput();
		//Minotaur cum addiction
        var changingaddition:Number = 7;
        if (purified) {
			changingaddition -= 14;
			if (flags[kFLAGS.MINOTAUR_CUM_ADDICTION_STATE] == 2) changingaddition -= 10;
			if (flags[kFLAGS.MINOTAUR_CUM_ADDICTION_STATE] == 3) changingaddition -= 20;
		}
        player.minoCumAddiction(changingaddition);
        outputText("As soon as you crack the seal on the bottled white fluid, a ");
        if (flags[kFLAGS.MINOTAUR_CUM_ADDICTION_STATE] == 0 && (!player.hasPerk(PerkLib.MinotaurCumResistance) || !player.hasPerk(PerkLib.ManticoreCumAddict))) outputText("potent musk washes over you.");
        else outputText("heavenly scent fills your nostrils.");
        if (!purified) {
            if (flags[kFLAGS.MINOTAUR_CUM_ADDICTION_TRACKER] < 50) outputText("  It makes you feel dizzy, ditzy, and placid.");
            else outputText("  It makes you feel euphoric, happy, and willing to do ANYTHING to keep feeling this way.");
        } else outputText("  You know that the bottle is purified and you're positive you won't get any addiction from this bottle.");
        outputText("  Unbidden, your hand brings the bottle to your lips, and the heady taste fills your mouth as you convulsively swallow the entire bottle.");
        //-Raises lust by 10.
        //-Raises sensitivity
        dynStats("lus", 10, "scale", false);
        MutagenBonus("lib", 1);
        //-Raises corruption by 1 to 50, then by .5 to 75, then by .25 to 100.
        if (!purified) {
            if (player.cor < 50) dynStats("cor", 1);
            else if (player.cor < 75) dynStats("cor", .5);
            else dynStats("cor", .25);
        }
        outputText("[pg]Intermittent waves of numbness wash through your body, turning into a warm tingling that makes you feel sensitive all over.  The warmth flows through you, converging in your loins and bubbling up into lust.");
        if (player.cocks.length > 0) {
            outputText("  ");
            if (player.cockTotal() == 1) outputText("Y");
            else outputText("Each of y");
            outputText("our [cocks] aches, flooding with blood until it's bloating and trembling.");
        }
        if (player.hasVagina()) {
            outputText("  Your [clit] engorges, ");
            if (player.clitLength < 3) outputText("parting your lips.");
            else outputText("bursting free of your lips and bobbing under its own weight.");
            if (player.vaginas[0].vaginalWetness <= VaginaClass.WETNESS_NORMAL) outputText("  Wetness builds inside you as your [vagina] tingles and aches to be filled.");
            else if (player.vaginas[0].vaginalWetness <= VaginaClass.WETNESS_SLICK) outputText("  A trickle of wetness escapes your [vagina] as your body reacts to the desire burning inside you.");
            else if (player.vaginas[0].vaginalWetness <= VaginaClass.WETNESS_DROOLING) outputText("  Wet fluids leak down your thighs as your body reacts to this new stimulus.");
            else outputText("  Slick fluids soak your thighs as your body reacts to this new stimulus.");
        }
        //(Minotaur fantasy)
        if (!CoC.instance.inCombat && rand(10) == 1 && (!purified && (!player.hasPerk(PerkLib.MinotaurCumResistance)) || !player.hasPerk(PerkLib.ManticoreCumAddict))) {
            outputText("[pg]Your eyes flutter closed for a second as a fantasy violates your mind.  You're on your knees, prostrate before a minotaur.  Its narcotic scent fills the air around you, and you're swaying back and forth with your belly already sloshing and full of spunk.  Its equine-like member is rubbing over your face, and you submit to the beast, stretching your jaw wide to take its sweaty, glistening girth inside you.  Your tongue quivers happily as you begin sucking and slurping, swallowing each drop of pre-cum you entice from the beastly erection.  Gurgling happily, you give yourself to your inhuman master for a chance to swallow into unthinking bliss.");
            dynStats("lus", rand(5) + player.cor / 20 + flags[kFLAGS.MINOTAUR_CUM_ADDICTION_TRACKER] / 5, "scale", false);
            MutagenBonus("lib", 1);
        }
        //(Healing – if hurt and uber-addicted (hasperk))
        if (player.HP < player.maxOverHP() && player.hasPerk(PerkLib.MinotaurCumAddict)) {
            outputText("[pg]The fire of your arousal consumes your body, leaving vitality in its wake.  You feel much better!");
            HPChange(int((player.maxHP() / 4)*player.postConsumptionMlt()), false);
        }
        //Uber-addicted status!
        if (player.hasPerk(PerkLib.MinotaurCumAddict) && flags[kFLAGS.MINOTAUR_CUM_REALLY_ADDICTED_STATE] <= 0 && !purified) {
            flags[kFLAGS.MINOTAUR_CUM_REALLY_ADDICTED_STATE] = 3 + rand(2);
            outputText("[pg]<b>Your body feels so amazing and sensitive.  Experimentally you pinch yourself and discover that even pain is turning you on!</b>");
        }
        //Clear mind a bit
        if (purified && (player.hasPerk(PerkLib.MinotaurCumAddict) || flags[kFLAGS.MINOTAUR_CUM_ADDICTION_TRACKER] >= 40)) {
            outputText("[pg]Your mind feels a bit clearer just from drinking the purified minotaur cum. Maybe if you drink more of these, you'll be able to rid yourself of your addiction?");
            if (player.hasPerk(PerkLib.MinotaurCumAddict) && flags[kFLAGS.MINOTAUR_CUM_ADDICTION_TRACKER] <= 50) {
                outputText("  Suddenly, you black out and images flash in your mind about getting abducted by minotaurs and the abandonment of your quest that eventually leads to Lethice's success in taking over Mareth. No, it cannot be! You wake up and recover from the blackout, horrified to find out what would really happen if you spend the rest of your life with the Minotaurs! You shake your head and realize that you're no longer dependent on the cum.  ");
                outputText("\n<b>(Lost Perk: Minotaur Cum Addict!)</b>");
                player.removePerk(PerkLib.MinotaurCumAddict);
            }
        }
        player.refillHunger(25);
        if (player.isGargoyle() && player.hasPerk(PerkLib.GargoyleCorrupted)) player.refillGargoyleHunger(25);
    }

    public function succubiMilk(tainted:Boolean, player:Player):void {
        player.slimeFeed();
        var temp2:Number = 0;
        var temp3:Number = 0;
        var rando:Number = Math.random() * 100;
        var randomod:Number = (5 * player.additionalTransformationChances);
        if (rando >= 90 && !tainted) rando -= 10;
        if (player.cor < 35) {
            clearOutput();
            outputText("You wonder why in the gods' names you would drink such a thing, but you have to admit, it is the best thing you have ever tasted.");
        } else if (player.cor >= 35 && player.cor < 70) {
            clearOutput();
            outputText("You savor the incredible flavor as you greedily gulp it down.");
            if (player.gender == 2 || player.gender == 3) {
                outputText("  The taste alone makes your [vagina] feel ");
                if (player.vaginas[0].vaginalWetness == VaginaClass.WETNESS_DRY) outputText("tingly.");
                if (player.vaginas[0].vaginalWetness == VaginaClass.WETNESS_NORMAL) outputText("wet.");
                if (player.vaginas[0].vaginalWetness == VaginaClass.WETNESS_WET) outputText("sloppy and wet.");
                if (player.vaginas[0].vaginalWetness == VaginaClass.WETNESS_SLICK) outputText("sopping and juicy.");
                if (player.vaginas[0].vaginalWetness >= VaginaClass.WETNESS_DROOLING) outputText("dripping wet.");
            } else if (player.hasCock()) outputText("  You feel a building arousal, but it doesn't affect your cock.");
        }
        if (player.cor >= 70) {
            clearOutput();
            outputText("You pour the milk down your throat, chugging the stuff as fast as you can.  You want more.");
            if (player.gender == 2 || player.gender == 3) {
                outputText("  Your " + vaginaDescript(0));
                if (player.vaginas.length > 1) outputText(" quiver in orgasm, ");
                if (player.vaginas.length == 1) outputText(" quivers in orgasm, ");
                if (player.vaginas[0].vaginalWetness == VaginaClass.WETNESS_DRY) outputText("becoming slightly sticky.");
                if (player.vaginas[0].vaginalWetness == VaginaClass.WETNESS_NORMAL) outputText("leaving your undergarments sticky.");
                if (player.vaginas[0].vaginalWetness == VaginaClass.WETNESS_WET) outputText("wet with girlcum.");
                if (player.vaginas[0].vaginalWetness == VaginaClass.WETNESS_SLICK) outputText("staining your undergarments with cum.");
                if (player.vaginas[0].vaginalWetness == VaginaClass.WETNESS_DROOLING) outputText("leaving cunt-juice trickling down your leg.");
                if (player.vaginas[0].vaginalWetness >= VaginaClass.WETNESS_SLAVERING) outputText("spraying your undergarments liberally with slick girl-cum.");
                player.orgasm();
            } else if (player.gender != 0) {
                if (player.cocks.length == 1) outputText("  You feel a strange sexual pleasure, but your " + multiCockDescript() + " remains unaffected.");
                else outputText("  You feel a strange sexual pleasure, but your " + multiCockDescript() + " remain unaffected.");
            }
        }
        if (tainted) {
            dynStats("lus", 3, "cor", 1);
            MutagenBonus("spe", 1);
        } else {
            dynStats("lus", 3, "scale", false);
            MutagenBonus("spe", 1);
        }
        if (!player.blockingBodyTransformations()) {
            //Breast growth (maybe cock reduction!)
            if (rando <= 75-randomod) {
                var growth:int = 1 + rand(3);
                if (player.breastRows.length > 0) {
                    if (player.breastRows[0].breastRating < 2 && rand(3) == 0) growth++;
                    if (player.breastRows[0].breastRating < 5 && rand(4) == 0) growth++;
                    if (player.breastRows[0].breastRating < 6 && rand(5) == 0) growth++;
                }
                outputText("[pg]");
                player.growTits(growth, player.breastRows.length, true, 3);
                if (player.breastRows.length == 0) {
                    transformations.CreateBreastRow(2).applyEffect();
                    outputText("\n");
                }
                if (!flags[kFLAGS.HYPER_HAPPY]) {
                    // Shrink cocks if you have them.
                    if (player.cocks.length > 0) {
                        var index:int = 0;
                        temp2 = player.cocks.length;
                        temp3 = 0;
                        //Find biggest cock
                        while (temp2 > 0) {
                            temp2--;
                            if (player.cocks[index].cockLength <= player.cocks[temp2].cockLength) index = temp2;
                        }
                        //Shrink said cock
                        if (player.cocks[index].cockLength < 6 && player.cocks[index].cockLength >= 2.9) {
                            player.cocks[index].cockLength -= .5;
                            temp3 -= .5;
                            if (player.cocks[index].cockThickness * 6 > player.cocks[index].cockLength) player.cocks[index].cockThickness -= .2;
                            if (player.cocks[index].cockThickness * 8 > player.cocks[index].cockLength) player.cocks[index].cockThickness -= .2;
                            if (player.cocks[index].cockThickness < .5) player.cocks[index].cockThickness = .5;
                        }
                        temp3 += player.growCock(index, (rand(3) + 1) * -1);
                        outputText("[pg]");
                        player.lengthChange(temp3, 1);
                        if (player.cocks[index].cockLength < 2) {
                            outputText("  ");
                            player.killCocks(1);
                        }
                    }
                }
            }
            if (player.vaginas.length == 0 && (rand(3) == 0 || (rando > 75-randomod && rando < 90))) {
                transformations.VaginaHuman().applyEffect(false);
                if (player.fertility <= 5) player.fertility = 6;
                outputText("[pg]An itching starts in your crotch and spreads vertically.  You reach down and discover an opening.  You have grown a <b>new [vagina]</b>!");
            }
            //Increase pussy wetness or grow one!!
            else if (rando > 75-randomod && rando < 90) {
                //Shrink cawk
                if (player.cocks.length > 0 && !flags[kFLAGS.HYPER_HAPPY]) {
                    outputText("[pg]");
                    index = 0;
                    temp2 = player.cocks.length;
                    //Find biggest cock
                    while (temp2 > 0) {
                        temp2--;
                        if (player.cocks[index].cockLength <= player.cocks[temp2].cockLength) index = temp2;
                    }
                    //Shrink said cock
                    if (player.cocks[index].cockLength < 6 && player.cocks[index].cockLength >= 2.9) {
                        player.cocks[index].cockLength -= .5;
                    }
                    temp3 = player.growCock(index, -1 * (rand(3) + 1));
                    player.lengthChange(temp3, 1);
                    if (player.cocks[index].cockLength < 3) {
                        outputText("  ");
                        player.killCocks(1);
                    }
                }
                if (player.vaginas.length > 0) {
                    outputText("[pg]");
                    //0 = dry, 1 = wet, 2 = extra wet, 3 = always slick, 4 = drools constantly, 5 = female ejaculator
                    if (player.vaginas[0].vaginalWetness == VaginaClass.WETNESS_SLAVERING) {
                        if (player.vaginas.length == 1) outputText("Your [vagina] gushes fluids down your leg as you spontaneously orgasm.");
                        else outputText("Your [vagina]s gush fluids down your legs as you spontaneously orgasm, leaving a thick puddle of pussy-juice on the ground.  It is rapidly absorbed by the earth.");
                        player.orgasm();
                        if (tainted) dynStats("cor", 1);
                        if (player.vaginaType() != VaginaClass.DEMONIC) {
                            transformations.VaginaDemonic().applyEffect();
                        }
                    }
                    if (player.vaginas[0].vaginalWetness == VaginaClass.WETNESS_DROOLING) {
                        if (player.vaginas.length == 1) outputText("Your pussy feels hot and juicy, aroused and tender.  You cannot resist as your hands dive into your [vagina].  You quickly orgasm, squirting fluids everywhere.  <b>You are now a squirter</b>.");
                        if (player.vaginas.length > 1) outputText("Your pussies feel hot and juicy, aroused and tender.  You cannot resist plunging your hands inside your [vagina]s.  You quiver around your fingers, squirting copious fluids over yourself and the ground.  The fluids quickly disappear into the dirt.");
                        player.orgasm();
                        if (tainted) dynStats("cor", 1);
                    }
                    if (player.vaginas[0].vaginalWetness == VaginaClass.WETNESS_SLICK) {
                        if (player.vaginas.length == 1) outputText("You feel a sudden trickle of fluid down your leg.  You smell it and realize it's your pussy-juice.  Your [vagina] now drools lubricant constantly down your leg.");
                        if (player.vaginas.length > 1) outputText("You feel sudden trickles of fluids down your leg.  You smell the stuff and realize it's your pussies-juices.  They seem to drool lubricant constantly down your legs.");
                    }
                    if (player.vaginas[0].vaginalWetness == VaginaClass.WETNESS_WET) {
                        outputText("You flush in sexual arousal as you realize how moist your cunt-lips have become.  Once you've calmed down a bit you realize they're still slick and ready to fuck, and always will be.");
                    }
                    if (player.vaginas[0].vaginalWetness == VaginaClass.WETNESS_NORMAL) {
                        if (player.vaginas.length == 1) outputText("A feeling of intense arousal passes through you, causing you to masturbate furiously.  You realize afterward that your [vagina] felt much wetter than normal.");
                        else outputText("A feeling of intense arousal passes through you, causing you to masturbate furiously.  You realize afterward that your [vagina] was much wetter than normal.");
                    }
                    if (player.vaginas[0].vaginalWetness == VaginaClass.WETNESS_DRY) {
                        outputText("You feel a tingling in your crotch, but cannot identify it.");
                    }
                    index = player.vaginas.length;
                    while (index > 0) {
                        index--;
                        if (player.vaginas[0].vaginalWetness < VaginaClass.WETNESS_SLAVERING) player.vaginas[index].vaginalWetness++;
                    }
                }
            }
            if (rando >= 90-randomod && changeLimit != 0) {
                if (InCollection(player.skinColor1, DemonRace.DemonSkinColors) && InCollection(player.skinColor2, DemonRace.DemonSkin2Colors)) {
                    if (player.hasVagina()) {
                        outputText("[pg]Your heart begins beating harder and harder as heat floods to your groin.  You feel your clit peeking out from under its hood, growing larger and longer as it takes in more and more blood.");
                        if (player.clitLength > 3 && !player.hasPerk(PerkLib.BigClit)) outputText("  After some time it shrinks, returning to its normal aroused size.  You guess it can't get any bigger.");
                        if (player.clitLength > 5 && player.hasPerk(PerkLib.BigClit)) outputText("  Eventually it shrinks back down to its normal (but still HUGE) size.  You guess it can't get any bigger.");
                        if (((player.hasPerk(PerkLib.BigClit)) && player.clitLength < 6)
                                || player.clitLength < 3) {
                            player.clitLength += (rand(4) + 2) / 10;
                        }
                        dynStats("lus", 8, "scale", false);
                        player.addCurse("sens", 3, 1);
                    } else {
                        transformations.VaginaHuman().applyEffect();
                    }
                } else {
                    var choice1:String = randomChoice(DemonRace.DemonSkinColors);
                    var choice2:String = randomChoice(DemonRace.DemonSkin2Colors);
                    player.skinColor1 = choice1;
                    player.skinColor2 = choice2;
                    outputText("[pg]A tingling sensation runs across your skin in waves, growing stronger as <b>your skin's tone slowly shifts, darkening to become [skin color] in color.</b>");
                    if (tainted) dynStats("cor", 1);
                    else dynStats("cor", 0);
                }
            }
            //Demonic changes - higher chance with higher corruption.
            if (rand(40) + (player.cor + player.corruptionTolerance) / 2 > 40 && tainted && changeLimit != 0) demonChanges(player);
            if (tainted) {
                outputText(player.modFem(100, 2));
                if (rand(3) == 0) outputText(player.modTone(15, 2));
            } else {
                outputText(player.modFem(90, 1));
                if (rand(3) == 0) outputText(player.modTone(20, 2));
            }
        }
		if (player.perkv1(IMutationsLib.DisplacerMetabolismIM) >= 1) player.displacerFeedFromBottle();
        player.refillHunger(20);
    }

    public function wolfPepper(player:Player):void {
        var temp2:Number = 0;
        //Set up changes and changeLimit
        var changes:Number = 0;
        var changeLimit:Number = 2;
        if (rand(2) == 0) changeLimit++;
        changeLimit += player.additionalTransformationChances;
        player.slimeFeed();
        clearOutput();
        outputText("The black pepper is strangely spicy but very tasty.");
        if (rand(3) == 0 && changes < changeLimit && MutagenBonus("str", 1)) {
            outputText("[pg]You feel raw bestial power coursing through you.");
            changes++;
        }
        if (rand(3) == 0 && changes < changeLimit && MutagenBonus("spe", 1)) {
            outputText("[pg]You feel you could run forever, relishing the breeze against your [skin.type].");
            changes++;
        }
        if (rand(3) == 0 && changes < changeLimit && MutagenBonus("tou", 1)) {
            outputText("[pg]You become more... solid. You feel sinewy, a memory comes unbidden from your youth of a grizzled wolf you encountered while hunting, covered in scars, yet still moving with an easy grace. You imagine that must have felt something like this. You don't feel the cold as much as before either maybe you're just getting used to it.");
            changes++;
        }
        if (player.inte > 30 && rand(3) == 0 && changes < changeLimit && MutagenBonus("int", -1)) {
            outputText("[pg]You feel dumber.");
            changes++;
        }
        if (player.blockingBodyTransformations()) changeLimit = 0;
        if (rand(3) == 0 && player.basetallness < 120 && changes < changeLimit) {
            outputText("[pg]You suddenly realise the ground is farther down then you remember it to be… did you just grew taller?");
            player.tallness += (1 + rand(5));
            changes++;
        }
        //Male Stuff
        if (player.cocks.length > 0 && rand(2) == 0 && changes < changeLimit) {
            var selectedCockValue:int = -1; //Changed as selectedCock and i caused duplicate var warnings
            for (var indexI:int = 0; indexI < player.cocks.length; indexI++) {
                if (player.cocks[indexI].cockType != CockTypesEnum.WOLF) {
                    selectedCockValue = indexI;
                    break;
                }
            }
            if (selectedCockValue != -1) {
                transformations.CockWolf(selectedCockValue).applyEffect();
                player.thickenCock(selectedCockValue, 2);
                changes++;
            }
            if (player.dogCocks() > 0 && changes < changeLimit && rand(2) == 0) {
                transformations.GrowKnot(-1, 1, 1, 40).applyEffect();
                changes++;
            }
        }

        //Female Stuff
        //Multiboobages
        if (changes < changeLimit && player.breastRows.length > 0) {
            //if bigger than A cup
            if (player.breastRows[0].breastRating > 0 && player.vaginas.length > 0) {
                //Doggies only get 3 rows of tits! FENOXO HAS SPOKEN
                if (player.breastRows.length < 3 && rand(2) == 0 && changes < changeLimit) {
                    //Store choice to the index of the newest row
                    var choice:Number = player.breastRows.length - 1;
                    //Breasts are too small to grow a new row, so they get bigger first
                    //But ONLY if player has a vagina (dont want dudes weirded out)
                    if (player.vaginas.length > 0 && player.breastRows[0].breastRating <= player.breastRows.length-1) {
                        outputText("[pg]Your [breasts] feel constrained and painful against your top as they grow larger by the moment, finally stopping as they reach ");
                        player.breastRows[0].breastRating += 2;
                        outputText(player.breastCup(0) + " size.  But it doesn't stop there, you feel a tightness beginning lower on your torso...");
                        changes++;
                    }
                    //Had 1 row to start
                    if (player.breastRows.length == 1) {
                        //1 size below primary breast row!
                        transformations.CopyBreastRow().applyEffect();
                        dynStats("lus", 5, "scale", false);
                        player.addCurse("sen", 6, 1);
                        changes++;
                    }
                    //Many breast Rows - requires larger primary tits...
                    if (player.breastRows.length > 1 && player.breastRows[0].breastRating > player.breastRows.length+1) {
                        dynStats("lus", 5, "scale", false);
                        player.addCurse("sen", 6, 1);
                        //New row's size = the size of the row above -1
                        transformations.CreateBreastRow(player.breastRows[choice].breastRating - 1).applyEffect();
                        changes++;
                    }
                    //Extra sensitive or not
                    if (rand(3) == 0) {
                        if (rand(3) == 0) {
                            outputText("  You heft your new chest experimentally, exploring the new flesh with tender touches.  Your eyes nearly roll back in your head from the intense feelings.");
                            dynStats("lus", 15, "cor", 0)
                            player.addCurse("sens", 6, 1);
                        } else {
                            outputText("  You touch your new nipples with a mixture of awe and desire, the experience arousing beyond measure.  You squeal in delight, nearly orgasming, but in time finding the willpower to stop yourself.");
                            dynStats("lus", 10, "scale", false);
                            player.addCurse("sens", 3, 1);
                        }
                    }
                }
                //If already has max doggie breasts!
                else if (rand(2) == 0) {
                    //Check for size mismatches, and move closer to spec!
                    choice = player.breastRows.length;
                    temp2 = 0;
                    var evened:Boolean = false;
                    //Check each row, and if the row above or below it is
                    while (choice > 1 && temp2 == 0) {
                        choice--;
                        //Gimme a sec
                        if (player.breastRows[choice].breastRating + 1 < player.breastRows[choice - 1].breastRating) {
                            if (!evened) {
                                evened = true;
                                outputText("\n");
                            }
                            outputText("\nYour ");
                            if (choice > 4) outputText("");
                            else outputText(num2Text2(choice));
                            outputText("row of " + breastDescript(choice) + " grows larger, as if jealous of the jiggling flesh above.");
                            temp2 = (player.breastRows[choice - 1].breastRating) - player.breastRows[choice].breastRating - 1;
                            if (temp2 > 5) temp2 = 5;
                            if (temp2 < 1) temp2 = 1;
                            player.breastRows[choice].breastRating += temp2;
                        }
                    }
                }
            }
        }
        //Grow tits if have NO breasts/nipples AT ALL
        else if (rand(2) == 0 && changes < changeLimit) {
            transformations.CreateBreastRow(2).applyEffect();
            dynStats("lus", 6, "scale", false);
            player.addCurse("sens", 4, 1);
            changes++;
        }
        //Go into heat
        if (rand(3) == 0 && changes < changeLimit) {
            if (player.goIntoHeat(true)) {
                changes++;
            }
        }
        //Wolf fangs face
        if (rand(3) == 0 && changes < changeLimit && player.faceType != Face.WOLF_FANGS && player.isFurCovered()) {
            outputText("[pg]");
			transformations.FaceWolfFangs.applyEffect();
            changes++;
        }
        //Wolf partial fur
        if (rand(3) == 0 && changes < changeLimit && player.lowerBody == LowerBody.WOLF && player.tailType == Tail.WOLF && player.ears.type == Ears.WOLF && !player.hasPartialCoat(Skin.FUR)) {
            outputText("[pg]");
            transformations.SkinFur(Skin.COVERAGE_LOW, {color: player.hairColor}).applyEffect();
            changes++;
        }
        if (changes < changeLimit && player.arms.type == Arms.HUMAN && rand(3) == 0) {
            outputText("[pg]");
            transformations.ArmsWolf.applyEffect();
            changes++;
        }
        //-Remove feather-arms (copy this for goblin ale, mino blood, equinum, centaurinum, canine pepps, demon items)
        if (changes < changeLimit && !InCollection(player.arms.type, Arms.HUMAN, Arms.WOLF) && rand(3) == 0) {
            outputText("[pg]");
            transformations.ArmsHuman.applyEffect();
            changes++;
        }
        //Wolf paws
        if (rand(3) == 0 && transformations.LowerBodyWolf(2).isPossible() && changes < changeLimit) {
            if (player.isBiped() && player.lowerBody == LowerBody.HUMAN) {
                outputText("[pg]");
                transformations.LowerBodyWolf(2).applyEffect();
                changes++;
            }
            if (player.lowerBody != LowerBody.HUMAN && player.lowerBody != LowerBody.WOLF) {
                outputText("[pg]");
                transformations.LowerBodyHuman.applyEffect();
                changes++;
            }
        }
        //Wolf ears
        if (rand(2) == 0 && transformations.EarsWolf.isPossible() && changes < changeLimit) {
            if (player.ears.type == Ears.HUMAN) {
                outputText("[pg]");
                transformations.EarsWolf.applyEffect();
                changes++;
            }
            if (player.ears.type != Ears.HUMAN && player.ears.type != Ears.WOLF && player.tailType == Tail.WOLF) {
                outputText("[pg]");
                transformations.EarsHuman.applyEffect();
                changes++;
            }
        }
        //Grow tail if not wolf-tailed
        if (rand(3) == 0 && changes < changeLimit && player.tailType != Tail.WOLF) {
            if (player.tailType == Tail.NONE) {
                outputText("[pg]");
                transformations.TailWolf.applyEffect();
                changes++;
            }
            if (player.tailType != Tail.NONE && player.tailType != Tail.WOLF) {
                outputText("[pg]");
                transformations.TailNone.applyEffect();
                changes++;
            }
        }
		if (player.faceType == Face.WOLF_FANGS && player.eyes.type != Eyes.FERAL && changes < changeLimit && rand(3) == 0) {
            outputText("[pg]");
            transformations.EyesFeral.applyEffect();
            changes++;
        }
        if (player.rearBody.type != RearBody.WOLF_COLLAR && changes < changeLimit && rand(3) == 0) {
            outputText("[pg]");
            transformations.RearBodyWolfCollar.applyEffect();
            changes++;
        }
        // Remove gills
        if (rand(3) == 0 && player.hasGills() && changes < changeLimit) {
            outputText("[pg]");
            transformations.GillsNone.applyEffect();
            changes++;
        }
        //If no changes yay
        if (changes == 0) {
            outputText("[pg]Inhuman vitality spreads through your body, invigorating you!\n");
            HPChange(Math.round(20*player.postConsumptionMlt()), true);
            dynStats("lus", Math.round(3*player.postConsumptionMlt()), "scale", false);
        }
        player.refillHunger(15);
        flags[kFLAGS.TIMES_TRANSFORMED] += changes;
    }

    public function chillyPepper(player:Player):void {
        var temp2:Number = 0;
        //Set up changes and changeLimit
        var changes:Number = 0;
        var changeLimit:Number = 2;
        if (rand(2) == 0) changeLimit++;
        changeLimit += player.additionalTransformationChances;
        player.slimeFeed();
        clearOutput();
        outputText("The pepper taste and feels like trying to eat snow and ice. However, you eat it anyway still feeling a cold tingling in your mouth.");
        if (rand(3) == 0 && changes < changeLimit && MutagenBonus("str", 1)) {
            outputText("[pg]You feel raw bestial power coursing through you.");
            changes++;
        }
        if (rand(3) == 0 && changes < changeLimit && MutagenBonus("spe", 1)) {
            outputText("[pg]You feel you could run forever, relishing the breeze against your [skin.type].");
            changes++;
        }
        if (rand(3) == 0 && changes < changeLimit && MutagenBonus("tou", 1)) {
            outputText("[pg]You become more... solid. You feel sinewy, a memory comes unbidden from your youth of a grizzled wolf you encountered while hunting, covered in scars, yet still moving with an easy grace. You imagine that must have felt something like this. You don't feel the cold as much as before either maybe you're just getting used to it.");
            changes++;
        }
        if (player.inte > 30 && rand(3) == 0 && changes < changeLimit && MutagenBonus("int", -1)) {
            outputText("[pg]You feel dumber.");
            changes++;
        }
        if (player.blockingBodyTransformations()) changeLimit = 0;
        if (rand(3) == 0 && player.basetallness < 120 && changes < changeLimit) {
            outputText("[pg]You suddenly realise the ground is farther down then you remember it to be… did you just grew taller?");
            player.tallness += (1 + rand(5));
            changes++;
        }
        //Male Stuff
        if (player.cocks.length > 0 && rand(3) == 0 && changes < changeLimit) {
            var selectedCockValue:int = -1; //Changed as selectedCock and i caused duplicate var warnings
            for (var indexI:int = 0; indexI < player.cocks.length; indexI++) {
                if (player.cocks[indexI].cockType != CockTypesEnum.WOLF) {
                    selectedCockValue = indexI;
                    break;
                }
            }
            if (selectedCockValue != -1) {
                transformations.CockWolf(selectedCockValue).applyEffect();
                player.thickenCock(selectedCockValue, 2);
                changes++;
            }
            if (player.dogCocks() > 0 && changes < changeLimit && rand(2) == 0) {
                transformations.GrowKnot(-1, 1, 1, 40).applyEffect();
                changes++;
            }
        }

        //Female Stuff
        //Multiboobages
        if (changes < changeLimit && player.breastRows.length > 0) {
            //if bigger than A cup
            if (player.breastRows[0].breastRating > 0 && player.vaginas.length > 0) {
                //Doggies only get 3 rows of tits! FENOXO HAS SPOKEN
                if (player.breastRows.length < 3 && rand(2) == 0 && changes < changeLimit) {
                    //Store choice to the index of the newest row
                    var choice:Number = player.breastRows.length - 1;
                    //Breasts are too small to grow a new row, so they get bigger first
                    //But ONLY if player has a vagina (dont want dudes weirded out)
                    if (player.vaginas.length > 0 && player.breastRows[0].breastRating <= player.breastRows.length-1) {
                        outputText("[pg]Your [breasts] feel constrained and painful against your top as they grow larger by the moment, finally stopping as they reach ");
                        player.breastRows[0].breastRating += 2;
                        outputText(player.breastCup(0) + " size.  But it doesn't stop there, you feel a tightness beginning lower on your torso...");
                        changes++;
                    }
                    //Had 1 row to start
                    if (player.breastRows.length == 1) {
                        //1 size below primary breast row!
                        transformations.CopyBreastRow().applyEffect();
                        dynStats("lus", 5, "scale", false);
                        player.addCurse("sen", 6, 1);
                        changes++;
                    }
                    //Many breast Rows - requires larger primary tits...
                    if (player.breastRows.length > 1 && player.breastRows[0].breastRating > player.breastRows.length+1) {
                        dynStats("lus", 5, "scale", false);
                        player.addCurse("sen", 6, 1);
                        //New row's size = the size of the row above -1
                        transformations.CreateBreastRow(player.breastRows[choice].breastRating - 1).applyEffect();
                        changes++;
                    }
                    //Extra sensitive or not
                    if (rand(3) == 0) {
                        if (rand(3) == 0) {
                            outputText("  You heft your new chest experimentally, exploring the new flesh with tender touches.  Your eyes nearly roll back in your head from the intense feelings.");
                            dynStats("lus", 15, "cor", 0)
                            player.addCurse("sens", 6, 1);
                        } else {
                            outputText("  You touch your new nipples with a mixture of awe and desire, the experience arousing beyond measure.  You squeal in delight, nearly orgasming, but in time finding the willpower to stop yourself.");
                            dynStats("lus", 10, "scale", false);
                            player.addCurse("sens", 3, 1);
                        }
                    }
                }
                //If already has max doggie breasts!
                else if (rand(2) == 0) {
                    //Check for size mismatches, and move closer to spec!
                    choice = player.breastRows.length;
                    temp2 = 0;
                    var evened:Boolean = false;
                    //Check each row, and if the row above or below it is
                    while (choice > 1 && temp2 == 0) {
                        choice--;
                        //Gimme a sec
                        if (player.breastRows[choice].breastRating + 1 < player.breastRows[choice - 1].breastRating) {
                            if (!evened) {
                                evened = true;
                                outputText("\n");
                            }
                            outputText("\nYour ");
                            if (choice > 4) outputText("");
                            else outputText(num2Text2(choice));
                            outputText("row of " + breastDescript(choice) + " grows larger, as if jealous of the jiggling flesh above.");
                            temp2 = (player.breastRows[choice - 1].breastRating) - player.breastRows[choice].breastRating - 1;
                            if (temp2 > 5) temp2 = 5;
                            if (temp2 < 1) temp2 = 1;
                            player.breastRows[choice].breastRating += temp2;
                        }
                    }
                }
            }
        }
        //Grow tits if have NO breasts/nipples AT ALL
        else if (rand(2) == 0 && changes < changeLimit) {
            transformations.CreateBreastRow(2).applyEffect();
            dynStats("lus", 6, "scale", false);
            player.addCurse("sens", 4, 1);
            changes++;
        }
        //Go into heat
        if (rand(3) == 0 && changes < changeLimit) {
            if (player.goIntoHeat(true)) {
                changes++;
            }
        }
        if (changes < changeLimit && player.racialScore(Races.WOLF, false) >= 3 && rand(4) == 0) {
            changes++;
            outputText("[pg]");
            outputText("Images and thoughts come unbidden to your mind, overwhelming your control as you rapidly lose yourself in them, daydreaming of... ");
            //cawk fantasies
            if (player.gender <= 1 || (player.gender == 3 && rand(2) == 0)) {
                outputText("bounding through the woods, hunting a prey.  Feeling the wind in your fur and the thrill of the hunt coursing through your veins intoxicates you.  You have your nose to the ground, tracking your quarry as you run, until a heavenly scent stops you in your tracks.");
                dynStats("lus", 5 + player.lib / 20, "scale", false);
                //break1
                if (player.cor < 33 || !player.hasCock()) outputText("\nYou shake your head to clear the unwanted fantasy from your mind, repulsed by it.");
                else {
                    outputText("  Heart pounding, your shaft pops free of its sheath on instinct, as you take off after the new scent.  ");
                    outputText("You burst through a bush, spotting a white-furred female.  She drops, exposing her dripping fem-sex to you, the musky scent of her sex channeling straight through your nose and sliding into your canine cock.");
                    dynStats("lus", 5 + player.lib / 20, "scale", false);
                    //Break 2
                    if (player.cor < 66) outputText("\nYou blink a few times, the fantasy fading as you master yourself.  That daydream was so strange, yet so hot.");
                    else {
                        outputText("  Unable to wait any longer, you mount her, pressing your bulging knot against her vulva as she yips in pleasure. The heat of her sex is unreal, the tight passage gripping you like a vice as you jackhammer against her, biting her neck gently in spite of the violent pounding.");
                        dynStats("lus", 5 + player.lib / 20, "scale", false);
                        //break3
                        if (player.cor < 80) {
                            if (player.vaginas.length > 0) outputText("\nYou reluctantly pry your hand from your aching [vagina] as you drag yourself out of your fantasy.");
                            else outputText("\nYou reluctantly pry your hand from your aching [cock] as you drag yourself out of your fantasy.");
                        } else {
                            outputText("  At last your knot pops into her juicy snatch, splattering her groin with a smattering of her arousal.  The scents of your mating reach a peak as the velvet vice around your " + Appearance.cockNoun(CockTypesEnum.WOLF) + " quivers in the most indescribably pleasant way.  You clamp down on her hide as your whole body tenses, unleashing a torrent of cum into her sex.  Each blast is accompanied by a squeeze of her hot passage, milking you of the last of your spooge.  Your [legs] give out as your fantasy nearly brings you to orgasm, the sudden impact with the ground jarring you from your daydream.");
                            dynStats("lus", 5 + player.lib / 20, "scale", false);
                        }
                    }
                }
            }
            //Pure female fantasies
            else if (player.hasVagina()) {
                outputText("wagging your dripping [vagina] before a pack of horny wolves, watching their shiny red doggie-pricks practically jump out of their sheaths at your fertile scent.");
                dynStats("lus", 5 + player.lib / 20, "scale", false);
                //BREAK 1
                if (player.cor < 33) {
                    outputText("\nYou shake your head to clear the unwanted fantasy from your mind, repulsed by it.");
                } else {
                    outputText("  In moments they begin their advance, plunging their pointed beast-dicks into you, one after another.  You yip and howl with pleasure as each one takes his turn knotting you.");
                    dynStats("lus", 5 + player.lib / 20, "scale", false);
                    //BREAK 2
                    if (player.cor <= 66) {
                        outputText("\nYou blink a few times, the fantasy fading as you master yourself.  That daydream was so strange, yet so hot.");
                    } else {
                        outputText("  The feeling of all that hot wolf-spooge spilling from your overfilled snatch and running down your thighs is heavenly, nearly making you orgasm on the spot.  You see the alpha of the pack is hard again, and his impressive member is throbbing with the need to breed you.");
                        dynStats("lus", 5 + player.lib / 20, "scale", false);
                        //break3
                        if (player.cor < 80) {
                            outputText("\nYou reluctantly pry your hand from your aching [vagina] as you drag yourself out of your fantasy.");
                        } else {
                            outputText("  You growl with discomfort as he pushes into your abused wetness, stretching you tightly, every beat of his heart vibrating through your nethers.  With exquisite force, he buries his knot in you and begins filling you with his potent seed, impregnating you for sure. Your knees give out as your fantasy nearly brings you to orgasm, the sudden impact with the ground jarring you from your daydream.");
                            dynStats("lus", 5 + player.lib / 20, "scale", false);
                        }
                    }
                }
            } else {
                outputText("wagging your [asshole] before a pack of horny wolves, watching their shiny red doggie-pricks practically jump out of their sheaths at you after going so long without a female in the pack.");
                dynStats("lus", 5 + player.lib / 20, "scale", false);
                //BREAK 1
                if (player.cor < 33) {
                    outputText("\nYou shake your head to clear the unwanted fantasy from your mind, repulsed by it.");
                } else {
                    outputText("  In moments they begin their advance, plunging their pointed beast-dicks into you, one after another.  You yip and howl with pleasure as each one takes his turn knotting you.");
                    dynStats("lus", 5 + player.lib / 20, "scale", false);
                    //BREAK 2
                    if (player.cor <= 66) {
                        outputText("\nYou blink a few times, the fantasy fading as you master yourself.  That daydream was so strange, yet so hot.");
                    } else {
                        outputText("  The feeling of all that hot wolf-spooge spilling from your overfilled ass and running down your thighs is heavenly, nearly making you orgasm on the spot.  You see the alpha of the pack is hard again, and his impressive member is throbbing with the need to spend his lust on you.");
                        dynStats("lus", 5 + player.lib / 20, "scale", false);
                        //break3
                        if (player.cor < 80) {
                            outputText("\nYou reluctantly pry your hand from your aching asshole as you drag yourself out of your fantasy.");
                        } else {
                            outputText("  You growl with discomfort as he pushes into your abused, wet hole, stretching you tightly, every beat of his heart vibrating through your hindquarters.  With exquisite force, he buries his knot in you and begins filling you with his potent seed, impregnating you for sure. Your knees give out as your fantasy nearly brings you to orgasm, the sudden impact with the ground jarring you from your daydream.");
                            dynStats("lus", 5 + player.lib / 20, "scale", false);
                        }
                    }
                }
            }
        }
        //Animal tooth face
        if (rand(3) == 0 && changes < changeLimit && player.faceType != Face.ANIMAL_TOOTHS && player.isFurCovered()) {
            outputText("[pg]");
			transformations.FaceAnimalTeeth.applyEffect();
            changes++;
        }
        //Wolf face
        if (rand(3) == 0 && changes < changeLimit && player.faceType == Face.ANIMAL_TOOTHS && player.isFurCovered()) {
            outputText("[pg]");
            transformations.FaceWolf.applyEffect();
            changes++;
        }
        //Winter wolf fur partial fur
        if (rand(3) == 0 && changes < changeLimit && player.lowerBody == LowerBody.WOLF && player.tailType == Tail.WOLF && player.ears.type == Ears.WOLF && !player.hasPartialCoat(Skin.FUR) && (player.hairColor != "glacial white" || player.furColor != "glacial white")) {
            if (player.hairColor != "glacial white") {
                outputText("[pg]");
                transformations.HairChangeColor(["glacial white"]).applyEffect();
            }
            outputText("[pg]");
            transformations.SkinFur(Skin.COVERAGE_LOW, {color: "glacial white"}).applyEffect();
            changes++;
        }
        //Winter wolf full fur
        if (rand(3) == 0 && changes < changeLimit && player.lowerBody == LowerBody.WOLF && player.tailType == Tail.WOLF && player.ears.type == Ears.WOLF && player.hasPartialCoat(Skin.FUR) && (player.hairColor != "glacial white" || player.furColor != "glacial white")) {
            if (player.hairColor != "glacial white") {
                outputText("[pg]");
                transformations.HairChangeColor(["glacial white"]).applyEffect();
            }
            transformations.SkinFur(Skin.COVERAGE_COMPLETE, {color: "glacial white"}).applyEffect();
            changes++;
        }
        if (rand(3) == 0 && changes < changeLimit && player.lowerBody == LowerBody.WOLF && player.tailType == Tail.WOLF && player.ears.type == Ears.WOLF && player.hasFullCoatOfType(Skin.FUR) && (player.hairColor != "glacial white" || player.furColor != "glacial white")) {
            outputText("<b>[pg]Your fur and hair tingles, growing in thicker than ever as coldness begins to spread from the roots, turning it glacial white.</b>");
            player.hairColor = "glacial white";
            player.furColor = player.hairColor;
            changes++;
        }
        if (changes < changeLimit && player.arms.type == Arms.HUMAN && rand(3) == 0) {
            outputText("[pg]");
            transformations.ArmsWolf.applyEffect();
            changes++;
        }
        //-Remove feather-arms (copy this for goblin ale, mino blood, equinum, centaurinum, canine pepps, demon items)
        if (changes < changeLimit && !InCollection(player.arms.type, Arms.HUMAN, Arms.WOLF) && rand(3) == 0) {
            outputText("[pg]");
            transformations.ArmsHuman.applyEffect();
            changes++;
        }
        //Wolf paws
        if (rand(3) == 0 && transformations.LowerBodyWolf(2).isPossible() && changes < changeLimit) {
            if (player.isBiped() && player.lowerBody == LowerBody.HUMAN) {
                outputText("[pg]");
                transformations.LowerBodyWolf(2).applyEffect();
                changes++;
            }
            if (player.lowerBody != LowerBody.HUMAN && player.lowerBody != LowerBody.WOLF) {
                outputText("[pg]");
                transformations.LowerBodyHuman.applyEffect();
                changes++;
            }
        }
        //Wolf ears
        if (rand(3) == 0 && transformations.EarsWolf.isPossible() && changes < changeLimit) {
            if (player.ears.type == Ears.HUMAN) {
                outputText("[pg]");
                transformations.EarsWolf.applyEffect();
                changes++;
            }
            if (player.ears.type != Ears.HUMAN && player.ears.type != Ears.WOLF && player.tailType == Tail.WOLF) {
                outputText("[pg]");
                transformations.EarsHuman.applyEffect();
                changes++;
            }
        }
        //Grow tail if not wolf-tailed
        if (rand(3) == 0 && changes < changeLimit && player.tailType != Tail.WOLF) {
            if (player.tailType == Tail.NONE) {
                outputText("[pg]");
                transformations.TailWolf.applyEffect();
                changes++;
            }
            if (player.tailType != Tail.NONE && player.tailType != Tail.WOLF) {
                outputText("[pg]");
                transformations.TailNone.applyEffect();
                changes++;
            }
        }
        // Remove gills
        if (rand(3) == 0 && player.hasGills() && changes < changeLimit) {
            outputText("[pg]");
            transformations.GillsNone.applyEffect();
            changes++;
        }
        //If no changes yay
        if (changes == 0) {
            outputText("[pg]Inhuman vitality spreads through your body, invigorating you!\n");
            HPChange(Math.round(20*player.postConsumptionMlt()), true);
            dynStats("lus", Math.round(3*player.postConsumptionMlt()), "scale", false);
        }
        player.refillHunger(15);
        flags[kFLAGS.TIMES_TRANSFORMED] += changes;
    }

    //1-Oversized Pepper (+size, thickness)
    //2-Double Pepper (+grows second cock or changes two cocks to dogcocks)
    //3-Black Pepper (Dark Fur, +corruption/libido)
    //4-Knotty Pepper (+Knot + Cum Multiplier)
    //5-Bulbous Pepper (+ball size or fresh balls)
    public function caninePepper(type:Number, player:Player):void {
        clearOutput();
        var choice:int;
        var temp2:Number = 0;
        var temp3:Number = 0;
        var crit:Number = int(Math.random() * 20) / 10 + 2;
        //Set up changes and changeLimit
        var changes:Number = 0;
        var changeLimit:Number = 2;
        if (rand(2) == 0) changeLimit++;
        if (rand(2) == 0) changeLimit++;
        changeLimit += player.additionalTransformationChances;
        //Initial outputs & crit level
        switch (type) {
            case 0: //Canine pepper
                if (rand(100) > 15) {
                    crit = 1;
                    outputText("The pepper is strangely spicy, but very tasty.");
                } else outputText("The pepper tastes particularly potent, searingly hot and spicy.");
                break;
            case 1: //Oversized pepper
                outputText("The pepper is so large and thick that you have to eat it in several large bites.  It is not as spicy as the normal ones, but is delicious and flavorful.");
                break;
            case 2: //Double Pepper
                outputText("The double-pepper is strange, looking like it was formed when two peppers grew together near their bases.");
                break;
            case 3: //Black Pepper
                outputText("This black pepper tastes sweet, but has a bit of a tangy aftertaste.");
                break;
            case 4: //Knotty Pepper
                outputText("The pepper is a bit tough to eat due to the swollen bulge near the base, but you manage to cram it down and munch on it.  It's extra spicy!");
                break;
            case 5: //Bulbous Pepper
                outputText("You eat the pepper, even the two orb-like growths that have grown out from the base.  It's delicious!");
                break;
            default:
                crit = 1;
                break;
        }

        //OVERDOSE Bad End!
        if (type <= 0 && player.hasFullCoatOfType(Skin.FUR) && player.faceType == Face.DOG && player.ears.type == Ears.DOG && player.lowerBody == LowerBody.DOG && player.tailType == Tail.DOG && !player.hasPerk(PerkLib.TransformationResistance)) {
            if (!player.hasStatusEffect(StatusEffects.TFWarning) || player.getStatusValue(StatusEffects.TFWarning, 1) != Races.DOG.id) {
                player.removeStatusEffect(StatusEffects.TFWarning);
                player.createStatusEffect(StatusEffects.TFWarning, Races.DOG.id, 0, BAD_END_COOLDOWN, 0);
            } else {
                player.changeStatusValue(StatusEffects.TFWarning, 3, BAD_END_COOLDOWN);
                player.addStatusValue(StatusEffects.TFWarning, 2, 1);
                if (player.getStatusValue(StatusEffects.TFWarning, 2) >= 3 && crit > 1) {
                    if (rand(2) == 0) {
                        outputText("[pg]As you swallow the pepper, you note that the spicy hotness on your tongue seems to be spreading. Your entire body seems to tingle and burn, making you feel far warmer than normal, feverish even. Unable to stand it any longer you tear away your clothes, hoping to cool down a little. Sadly, this does nothing to aid you with your problem. On the bright side, the sudden feeling of vertigo you've developed is more than enough to take your mind off your temperature issues. You fall forward onto your hands and knees, well not really hands and knees to be honest. More like paws and knees. That can't be good, you think for a moment, before the sensation of your bones shifting into a quadrupedal configuration robs you of your concentration. After that, it is only a short time before your form is remade completely into that of a large dog, or perhaps a wolf. The distinction would mean little to you now, even if you were capable of comprehending it. ");
                        if (player.hasPerk(PerkLib.MarblesMilk)) outputText("All you know is that there is a scent on the wind, it is time to hunt; at the end of the day, you need to come home for your milk.");
                        else outputText("All you know is that there is a scent on the wind, and it is time to hunt.");
                    } else outputText("[pg]You devour the sweet pepper, carefully licking your fingers for all the succulent juices of the fruit, and are about to go on your way when suddenly a tightness begins to build in your chest and stomach, horrid cramps working their way first through your chest, then slowly flowing out to your extremities, the feeling soon joined by horrible, blood-curdling cracks as your bones begin to reform, twisting and shifting, your mind exploding with pain. You fall to the ground, reaching one hand forward. No... A paw, you realize in horror, as you try to push yourself back up. You watch in horror, looking down your foreleg as thicker fur erupts from your skin, a [haircolor] coat slowly creeping from your bare flesh to cover your body. Suddenly, you feel yourself slipping away, as if into a dream, your mind warping and twisting, your body finally settling into its new form. With one last crack of bone you let out a yelp, kicking free of the cloth that binds you, wresting yourself from its grasp and fleeing into the now setting sun, eager to find prey to dine on tonight.");
                    EventParser.gameOver();
                    return;
                }
            }
            outputText("<b>[pg]Eating the pepper, you realize how dog-like you've become, and you wonder what else the peppers could change...</b>");
        } else player.removeStatusEffect(StatusEffects.TFWarning);
        if (type == 3) {
            MutagenBonus("lib", 2 + rand(4));
            dynStats("lus", 5 + rand(5), "cor", 2 + rand(4));
            outputText("[pg]You feel yourself relaxing as gentle warmth spreads through your body.  Honestly you don't think you'd mind running into a demon or monster right now, they'd make for good entertainment.");
            if (player.cor < 50) outputText("  You shake your head, blushing hotly.  Where did that thought come from?");
        }
        if (rand(3) == 0 && MutagenBonus("str", crit)) {
            if (crit > 1) outputText("[pg]Your muscles ripple and grow, bulging outwards.");
            else outputText("[pg]Your muscles feel more toned.");
            changes++;
        }
        if (rand(3) == 0 && changes < changeLimit && MutagenBonus("spe", crit)) {
            if (crit > 1) outputText("[pg]You find your muscles responding quicker, faster, and you feel an odd desire to go for a walk.");
            else outputText("[pg]You feel quicker.");
            changes++;
        }
        if (player.inte > 30 && rand(3) == 0 && changes < changeLimit && type != 3) {
            player.addCurse("int", crit, 1);
            outputText("[pg]You feel ");
            if (crit > 1) outputText("MUCH ");
            outputText("dumber.");
            changes++;
        }
        //if(type != 2 && type != 4 && type != 5) outputText("\n");
        if (player.blockingBodyTransformations()) changeLimit = 0;
        //Double Pepper!
        //Xforms/grows dicks to make you have two dogcocks
        if (changes < changeLimit && (type == 2 || type == 3)) {
            //If already doubled up, GROWTH
            if (player.dogCocks() >= 2) {
                if (type != 3)
                    type = 1;
            }
            //If player doesnt have 2 dogdicks
            else {
                //If player has NO dogdicks
                if (player.dogCocks() == 0) {
                    //Dickless - grow two dogpeckers
                    if (player.cockTotal() == 0) {
                        outputText("[pg]A painful lump forms on your groin, nearly doubling you over as it presses against your [armor].  You rip open your gear and watch, horrified as the discolored skin splits apart, revealing a pair of red-tipped points.  A feeling of relief, and surprising lust grows as they push forward, glistening red and thickening.  The skin bunches up into an animal-like sheath, while a pair of fat bulges pop free.  You now have two nice thick dog-cocks, with decent sized knots.  Both pulse and dribble animal-pre, arousing you in spite of your attempts at self-control.");
                        transformations.CockDog(0, 7 + rand(7), 1.5 + rand(10) / 10, 1.7).applyEffect(false);
                        transformations.CockDog(1, 7 + rand(7), 1.5 + rand(10) / 10, 1.7).applyEffect(false);
                        dynStats("lus", 50, "scale", false);
                    }
                    //1 dick - grow 1 and convert 1
                    else if (player.cockTotal() == 1) {
                        transformations.CockDog().applyEffect();
                        outputText("[pg]You feel something slippery wiggling inside the new sheath, and another red point peeks out.  In spite of yourself, you start getting turned on by the change, and the new dick slowly slides free, eventually stopping once the thick knot pops free.  The pair of dog-dicks hang there, leaking pre-cum and arousing you far beyond normal.");
                        transformations.CockDog(1, 7 + rand(7), 1.5 + rand(10) / 10, 1.7).applyEffect(false);
                        dynStats("lus", 50, "scale", false);
                        MutagenBonus("lib", 2);
                    }
                    //2 dicks+ - convert first 2 to doggie-dom
                    else {
                        outputText("[pg]Your crotch twitches, and you pull open your [armor] to get a better look.  You watch in horror and arousal as your [cock] and [cock 2] both warp and twist, becoming red and pointed, growing thick bulges near the base.  When it stops you have two dog-cocks and an animal-like sheath.  The whole episode turns you on far more than it should, leaving you dripping animal pre and ready to breed.");
                        transformations.CockDog().applyEffect(false);
                        transformations.CockDog(1).applyEffect(false);
                        dynStats("lus", 50, "scale", false);
                        MutagenBonus("lib", 2);
                    }
                }
                //If player has 1 dogdicks
                else {
                    //if player has 1 total
                    if (player.cockTotal() == 1) {
                        outputText("[pg]You feel something slippery wiggling inside your sheath, and another red point peeks out.  In spite of yourself, you start getting turned on by the change, and the new dick slowly slides free, eventually stopping once the thick knot pops free.  The pair of dog-dicks hang there, leaking pre-cum and arousing you far beyond normal.");
                        transformations.CockDog(1, 7 + rand(7), 1.5 + rand(10) / 10).applyEffect(false);
                        dynStats("lus", 50, "scale", false);
                        MutagenBonus("lib", 2);
                    }
                    //if player has more
                    if (player.cockTotal() >= 1) {
                        //if first dick is already doggi'ed
                        if (player.cocks[0].cockType == CockTypesEnum.DOG) {
                            outputText("[pg]Your crotch twitches, and you pull open your [armor] to get a better look.  You watch in horror and arousal as your " + cockDescript(1) + " warps and twists, becoming red and pointed, just like other dog-dick, growing thick bulges near the base.  When it stops you have two dog-cocks and an animal-like sheath.  The whole episode turns you on far more than it should, leaving you dripping animal pre and ready to breed.");
                            transformations.CockDog(1).applyEffect(false);
                        }
                        //first dick is not dog
                        else {
                            outputText("[pg]Your crotch twitches, and you pull open your [armor] to get a better look.  You watch in horror and arousal as your [cock] warps and twists, becoming red and pointed, just like other dog-dick, growing thick bulges near the base.  When it stops you have two dog-cocks and an animal-like sheath.  The whole episode turns you on far more than it should, leaving you dripping animal pre and ready to breed.");
                            transformations.CockDog(0).applyEffect(false);
                        }
                        dynStats("lus", 50, "scale", false);
                        MutagenBonus("lib", 2);
                    }
                }
            }
        }
        //Knotty knot pepper!
        if (changes < changeLimit && type == 4) {
            //Cocks only!
            if (player.cockTotal() > 0) {
                //biggify knots
                if (player.dogCocks() > 0) {
                    transformations.GrowKnot(-1, crit, 5, 20).applyEffect();
                    changes++
                }
                //Grow dogdick with big knot
                else {
                    outputText("[pg]Your [cock] twitches, reshaping itself.  The crown tapers down to a point while the base begins swelling.  It isn't painful in the slightest, actually kind of pleasant.  Your dog-like knot slowly fills up like a balloon, eventually stopping when it's nearly twice as thick as the rest.  You touch and shiver with pleasure, oozing pre-cum.");
                    transformations.CockDog(0).applyEffect(false);
                    player.cocks[0].knotMultiplier = 2.1;
                }
            }
            //You wasted knot pepper!
            else outputText("[pg]A slight wave of nausea passes through you.  It seems this pepper does not quite agree with your body.");
        }
        //GROW BALLS
        if (changes < changeLimit && type == 5) {
            if (player.balls <= 1) {
                transformations.BallsDuo.applyEffect();
                dynStats("lus", -10, "scale", false);
                MutagenBonus("lib", 2);
            } else {
                //Makes your balls biggah!
                player.ballSize++;
                //They grow slower as they get bigger...
                if (player.ballSize > 10) player.ballSize -= .5;
                //Texts
                if (player.ballSize <= 2) outputText("[pg]A flash of warmth passes through you and a sudden weight develops in your groin.  You pause to examine the changes and your roving fingers discover your " + simpleBallsDescript() + " have grown larger than a human's.");
                if (player.ballSize > 2) outputText("[pg]A sudden onset of heat envelops your groin, focusing on your [sack].  Walking becomes difficult as you discover your " + simpleBallsDescript() + " have enlarged again.");
                dynStats("lus", 3, "scale", false);
                MutagenBonus("lib", 1);
            }
        }
        //Sexual Stuff Now
        //------------------
        //Man-Parts
        //3 Changes,
        //1. Cock Xform
        //2. Knot Size++
        //3. cumMultiplier++ (to max of 1.5)
        if (changes < changeLimit && player.cocks.length > 0) {
            //Grow knot on smallest knotted dog cock
            if (type != 4 && player.dogCocks() > 0 && ((changes < changeLimit && rand(1.4) == 0) || type == 1)) {
                //Have smallest knotted cock selected.
                transformations.GrowKnot(-1, crit, 1, 20).applyEffect();
                changes++;
            }
            //Cock Xform if player has free cocks.
            if (player.dogCocks() < player.cocks.length && ((changes < changeLimit && rand(1.6)) && type != 6 || type == 1) == 0) {
                //Select first human cock
                choice = player.findFirstCockNotInType([CockTypesEnum.DOG])
                //Talk about it
                //Demon
                if (player.cocks[choice].cockType == CockTypesEnum.DEMON) {
                    outputText("[pg]Your " + cockDescript(choice) + " color shifts red for a moment and begins to swell at the base, but within moments it smooths out, retaining its distinctive demonic shape, only perhaps a bit thicker.");
                    dynStats("lus", 2 * crit, "scale", false);
                    player.addCurse("sen", 1, 1);
                }
                else{
                    dynStats("lus", 5 * crit, "scale", false);
                    player.addCurse("sen", 4, 1);
                    transformations.CockDog(choice).applyEffect();
                }
                //Xform it!
                player.cocks[choice].knotMultiplier += 0.1;
                player.thickenCock(choice, 2);
                changes++;
            }
            //Cum Multiplier Xform
            if (player.cumMultiplier < 2 && rand(2) == 0 && changes < changeLimit && type != 6) {
                choice = 1.5;
                //Lots of cum raises cum multiplier cap to 3 instead of 1.5
                if (player.hasPerk(PerkLib.MessyOrgasms)) choice = 3;
                if (choice < player.cumMultiplier + .05 * crit) {
                    changes--;
                } else {
                    player.cumMultiplier += .05 * crit;
                    //Flavor text
                    if (player.balls == 0) outputText("[pg]You feel a churning inside your gut as something inside you changes.");
                    if (player.hasBalls()) outputText("[pg]You feel a churning in your [balls].  It quickly settles, leaving them feeling somewhat more dense.");
                    if (crit > 1) outputText("  A bit of milky pre dribbles from your [cocks], pushed out by the change.");
                }
                changes++;
            }
            //Oversized pepper
            if (type == 1) {
                //GET LONGER
                //single cock
                if (player.cocks.length == 1) {
                    temp2 = player.growCock(0, rand(4) + 3);
                    choice = 0;
                    dynStats("lus", 10, "scale", false);
                    player.addCurse("sen", 1, 1);
                }
                //Multicock
                else {
                    //Find smallest cock
                    //Temp2 = smallness size
                    //choice = current smallest
                    temp3 = player.cocks.length;
                    choice = 0;
                    while (temp3 > 0) {
                        temp3--;
                        //If current cock is smaller than saved, switch values.
                        if (player.cocks[choice].cockLength > player.cocks[temp3].cockLength) {
                            temp2 = player.cocks[temp3].cockLength;
                            choice = temp3;
                        }
                    }
                    //Grow smallest cock!
                    //temp2 changes to growth amount
                    temp2 = player.growCock(choice, rand(4) + 3);
                    dynStats("lus", 10, "scale", false);
                    player.addCurse("sen", 1, 1);
                    if (player.cocks[choice].cockThickness <= 2) player.thickenCock(choice, 1);
                }
                if (temp2 > 2) outputText("[pg]Your " + cockDescript(choice) + " tightens painfully, inches of bulging dick-flesh pouring out from your crotch as it grows longer.  Thick pre forms at the pointed tip, drawn out from the pleasure of the change.");
                if (temp2 > 1 && temp2 <= 2) outputText("[pg]Aching pressure builds within your crotch, suddenly releasing as an inch or more of extra dick-flesh spills out.  A dollop of pre beads on the head of your enlarged " + cockDescript(choice) + " from the pleasure of the growth.");
                if (temp2 <= 1) outputText("[pg]A slight pressure builds and releases as your " + cockDescript(choice) + " pushes a bit further out of your crotch.");
            }
        }
        //Female Stuff
        //Multiboobages
        if (changes < changeLimit && player.breastRows.length > 0) {
            //if bigger than A cup
            if (player.breastRows[0].breastRating > 0 && player.vaginas.length > 0) {
                //Doggies only get 3 rows of tits! FENOXO HAS SPOKEN
                if (player.breastRows.length < 3 && rand(2) == 0 && changes < changeLimit) {
                    //Store choice to the index of the newest row
                    choice = player.breastRows.length - 1;
                    //Breasts are too small to grow a new row, so they get bigger first
                    //But ONLY if player has a vagina (dont want dudes weirded out)
                    if (player.vaginas.length > 0 && player.breastRows[0].breastRating <= player.breastRows.length-1) {
                        outputText("[pg]Your [breasts] feel constrained and painful against your top as they grow larger by the moment, finally stopping as they reach ");
                        player.breastRows[0].breastRating += 2;
                        outputText(player.breastCup(0) + " size.  But it doesn't stop there, you feel a tightness beginning lower on your torso...");
                        changes++;
                    }
                    //Had 1 row to start
                    if (player.breastRows.length == 1) {
                        //1 size below primary breast row!
                        transformations.CopyBreastRow().applyEffect();
                        dynStats("lus", 5, "scale", false);
                        player.addCurse("sen", 6, 1);
                        changes++;
                    }
                    //Many breast Rows - requires larger primary tits...
                    if (player.breastRows.length > 1 && player.breastRows[0].breastRating > player.breastRows.length+1) {
                        dynStats("lus", 5, "scale", false);
                        player.addCurse("sen", 6, 1);
                        //New row's size = the size of the row above -1
                        transformations.CreateBreastRow(player.breastRows[choice].breastRating - 1).applyEffect();
                        changes++;
                    }
                    //Extra sensitive if crit
                    if (crit > 1 && type != 6) {
                        if (crit > 2) {
                            outputText("[pg]You heft your new chest experimentally, exploring the new flesh with tender touches.  Your eyes nearly roll back in your head from the intense feelings.");
                            dynStats("lus", 15)
                            player.addCurse("sen", 6, 1);
                        } else {
                            outputText("  You touch your new nipples with a mixture of awe and desire, the experience arousing beyond measure.  You squeal in delight, nearly orgasming, but in time finding the willpower to stop yourself.");
                            dynStats("lus", 10, "scale", false);
                            player.addCurse("sen", 3, 1);
                        }
                    }
                }
                //If already has max doggie breasts!
                else if (rand(2) == 0) {
                    //Check for size mismatches, and move closer to spec!
                    choice = player.breastRows.length;
                    temp2 = 0;
                    var evened:Boolean = false;
                    //Check each row, and if the row above or below it is
                    while (choice > 1 && temp2 == 0) {
                        choice--;
                        //Gimme a sec
                        if (player.breastRows[choice].breastRating + 1 < player.breastRows[choice - 1].breastRating) {
                            if (!evened) {
                                evened = true;
                                outputText("\n");
                            }
                            outputText("\nYour ");
                            if (choice > 4) outputText("");
                            else outputText(num2Text2(choice));
                            outputText("row of " + breastDescript(choice) + " grows larger, as if jealous of the jiggling flesh above.");
                            temp2 = (player.breastRows[choice - 1].breastRating) - player.breastRows[choice].breastRating - 1;
                            if (temp2 > 5) temp2 = 5;
                            if (temp2 < 1) temp2 = 1;
                            player.breastRows[choice].breastRating += temp2;
                        }
                    }
                }
            }
        }
        //Grow tits if have NO breasts/nipples AT ALL
        else if (rand(2) == 0 && changes < changeLimit) {
            transformations.CreateBreastRow(2).applyEffect();
            dynStats("lus", 6, "scale", false);
            player.addCurse("sen", 4, 1);
            changes++;
        }
        if (player.hasVagina() && player.vaginas.length == 1 && type == 3 && rand(8) == 0 && changes < changeLimit) {
            transformations.SecondVagina.applyEffect();
            changes++;
        }
        //Go into heat
        if (rand(2) == 0 && changes < changeLimit) {
            if (player.goIntoHeat(true)) {
                changes++;
            }
        }
        if (changes < changeLimit && player.racialScore(Races.DOG, false) >= 3 && rand(4) == 0) {
            changes++;
            outputText("[pg]");
            outputText("Images and thoughts come unbidden to your mind, overwhelming your control as you rapidly lose yourself in them, daydreaming of... ");
            //cawk fantasies
            if (player.gender <= 1 || (player.gender == 3 && rand(2) == 0)) {
                outputText("bounding through the woods, hunting with your master.  Feeling the wind in your fur and the thrill of the hunt coursing through your veins intoxicates you.  You have your nose to the ground, tracking your quarry as you run, until a heavenly scent stops you in your tracks.");
                dynStats("lus", 5 + player.lib / 20, "scale", false);
                //break1
                if (player.cor < 33 || !player.hasCock()) outputText("\nYou shake your head to clear the unwanted fantasy from your mind, repulsed by it.");
                else {
                    outputText("  Heart pounding, your shaft pops free of its sheath on instinct, as you take off after the new scent.  Caught firmly in the grip of a female's heat, you ignore your master's cry as you disappear into the wild, " + Appearance.cockNoun(CockTypesEnum.DOG) + " growing harder as you near your quarry.  You burst through a bush, spotting a white-furred female.  She drops, exposing her dripping fem-sex to you, the musky scent of her sex channeling straight through your nose and sliding into your canine cock.");
                    dynStats("lus", 5 + player.lib / 20, "scale", false);
                    //Break 2
                    if (player.cor < 66) outputText("\nYou blink a few times, the fantasy fading as you master yourself.  That daydream was so strange, yet so hot.");
                    else {
                        outputText("  Unable to wait any longer, you mount her, pressing your bulging knot against her vulva as she yips in pleasure. The heat of her sex is unreal, the tight passage gripping you like a vice as you jackhammer against her, biting her neck gently in spite of the violent pounding.");
                        dynStats("lus", 5 + player.lib / 20, "scale", false);
                        //break3
                        if (player.cor < 80) {
                            if (player.vaginas.length > 0) outputText("\nYou reluctantly pry your hand from your aching [vagina] as you drag yourself out of your fantasy.");
                            else outputText("\nYou reluctantly pry your hand from your aching [cock] as you drag yourself out of your fantasy.");
                        } else {
                            outputText("  At last your knot pops into her juicy snatch, splattering her groin with a smattering of her arousal.  The scents of your mating reach a peak as the velvet vice around your " + Appearance.cockNoun(CockTypesEnum.DOG) + " quivers in the most indescribably pleasant way.  You clamp down on her hide as your whole body tenses, unleashing a torrent of cum into her sex.  Each blast is accompanied by a squeeze of her hot passage, milking you of the last of your spooge.  Your [legs] give out as your fantasy nearly brings you to orgasm, the sudden impact with the ground jarring you from your daydream.");
                            dynStats("lus", 5 + player.lib / 20, "scale", false);
                        }
                    }
                }
            }
            //Pure female fantasies
            else if (player.hasVagina()) {
                outputText("wagging your dripping [vagina] before a pack of horny wolves, watching their shiny red doggie-pricks practically jump out of their sheaths at your fertile scent.");
                dynStats("lus", 5 + player.lib / 20, "scale", false);
                //BREAK 1
                if (player.cor < 33) {
                    outputText("\nYou shake your head to clear the unwanted fantasy from your mind, repulsed by it.");
                } else {
                    outputText("  In moments they begin their advance, plunging their pointed beast-dicks into you, one after another.  You yip and howl with pleasure as each one takes his turn knotting you.");
                    dynStats("lus", 5 + player.lib / 20, "scale", false);
                    //BREAK 2
                    if (player.cor <= 66) {
                        outputText("\nYou blink a few times, the fantasy fading as you master yourself.  That daydream was so strange, yet so hot.");
                    } else {
                        outputText("  The feeling of all that hot wolf-spooge spilling from your overfilled snatch and running down your thighs is heavenly, nearly making you orgasm on the spot.  You see the alpha of the pack is hard again, and his impressive member is throbbing with the need to breed you.");
                        dynStats("lus", 5 + player.lib / 20, "scale", false);
                        //break3
                        if (player.cor < 80) {
                            outputText("\nYou reluctantly pry your hand from your aching [vagina] as you drag yourself out of your fantasy.");
                        } else {
                            outputText("  You growl with discomfort as he pushes into your abused wetness, stretching you tightly, every beat of his heart vibrating through your nethers.  With exquisite force, he buries his knot in you and begins filling you with his potent seed, impregnating you for sure. Your knees give out as your fantasy nearly brings you to orgasm, the sudden impact with the ground jarring you from your daydream.");
                            dynStats("lus", 5 + player.lib / 20, "scale", false);
                        }
                    }
                }
            } else {
                outputText("wagging your [asshole] before a pack of horny wolves, watching their shiny red doggie-pricks practically jump out of their sheaths at you after going so long without a female in the pack.");
                dynStats("lus", 5 + player.lib / 20, "scale", false);
                //BREAK 1
                if (player.cor < 33) {
                    outputText("\nYou shake your head to clear the unwanted fantasy from your mind, repulsed by it.");
                } else {
                    outputText("  In moments they begin their advance, plunging their pointed beast-dicks into you, one after another.  You yip and howl with pleasure as each one takes his turn knotting you.");
                    dynStats("lus", 5 + player.lib / 20, "scale", false);
                    //BREAK 2
                    if (player.cor <= 66) {
                        outputText("\nYou blink a few times, the fantasy fading as you master yourself.  That daydream was so strange, yet so hot.");
                    } else {
                        outputText("  The feeling of all that hot wolf-spooge spilling from your overfilled ass and running down your thighs is heavenly, nearly making you orgasm on the spot.  You see the alpha of the pack is hard again, and his impressive member is throbbing with the need to spend his lust on you.");
                        dynStats("lus", 5 + player.lib / 20, "scale", false);
                        //break3
                        if (player.cor < 80) {
                            outputText("\nYou reluctantly pry your hand from your aching asshole as you drag yourself out of your fantasy.");
                        } else {
                            outputText("  You growl with discomfort as he pushes into your abused, wet hole, stretching you tightly, every beat of his heart vibrating through your hindquarters.  With exquisite force, he buries his knot in you and begins filling you with his potent seed, impregnating you for sure. Your knees give out as your fantasy nearly brings you to orgasm, the sudden impact with the ground jarring you from your daydream.");
                            dynStats("lus", 5 + player.lib / 20, "scale", false);
                        }
                    }
                }
            }
        }
        //Remove odd eyes
        if (changes < changeLimit && rand(5) == 0 && player.eyes.type != Eyes.HUMAN && type != 6) {
            outputText("[pg]");
            transformations.EyesHuman.applyEffect();
            changes++;
        }
        //Master Furry Appearance Order:
        //Tail -> Ears -> Paws -> Arms -> Fur -> Face
        //Dog-face requires fur & paws  Should be last morph to take place
        if (rand(3) == 0 && changes < changeLimit && transformations.FaceDog.isPossible()) {
            outputText("[pg]");
            transformations.FaceDog.applyEffect();
            changes++;
        }

        //Remove special hairs
        if (changes < changeLimit && player.hairType != Hair.NORMAL && rand(3) == 0) {
		    outputText("[pg]");
		    transformations.HairHuman.applyEffect();
            changes++;
        }

        if (changes < changeLimit && type == 3 && player.hairColor != "midnight black") {
            outputText("[pg]");
            transformations.HairChangeColor(["midnight black"]).applyEffect();
            outputText("[pg]");
            transformations.SkinFur(Skin.COVERAGE_COMPLETE, {color: "midnight black", adj: "thick"}).applyEffect();
        }
        //Become furred - requires paws and tail
        if (rand(4) == 0 && changes < changeLimit && player.lowerBody == LowerBody.DOG && player.tailType == Tail.DOG && !player.isFurCovered()) {
            outputText("[pg]");
            if (rand(3) > 0) {
                transformations.SkinFur(Skin.COVERAGE_COMPLETE, {colors: ["brown", "chocolate", "auburn", "caramel", "orange", "black", "dark gray", "gray", "light gray", "silver", "white"]}).applyEffect();
            } else {
                transformations.SkinFur(Skin.COVERAGE_COMPLETE, {colors: ["orange", "brown", "black"], pattern: Skin.PATTERN_SPOTTED, color2: "white"}).applyEffect();
            }
            changes++;
        }
        //Change to paws - requires tail and ears
        if (rand(3) == 0 && transformations.LowerBodyDog(2).isPossible() && changes < changeLimit) {
            outputText("[pg]");
            transformations.LowerBodyDog(2).applyEffect();
            changes++;
        }
        //Change to dog-ears!  Requires dog-tail
        if (rand(2) == 0 && transformations.EarsDog.isPossible() && changes < changeLimit) {
            transformations.EarsDog.applyEffect();
            changes++;
        }
        //Grow tail if not dog-tailed
        if (rand(3) == 0 && changes < changeLimit && ((player.tailType != Tail.DOG && type != 6) || (player.tailType != Tail.WOLF && type == 6))) {
            outputText("[pg]");
            if (type != 6) {
                transformations.TailDog.applyEffect();
            } else {
                transformations.TailWolf.applyEffect();
            }
            changes++;
        }
        // Remove gills
        if (rand(4) == 0 && player.hasGills() && changes < changeLimit) {
            outputText("[pg]");
            transformations.GillsNone.applyEffect();
            changes++;
        }
        if (player.hasFullCoatOfType(Skin.FUR) && changes < changeLimit && rand(3) == 0 && type != 6 && MutagenBonus("tou", 4)) {
            outputText("[pg]You become more... solid.  Sinewy.  A memory comes unbidden from your youth of a grizzled wolf you encountered while hunting, covered in scars, yet still moving with an easy grace.  You imagine that must have felt something like this.");
            changes++;
        }
        //If no changes yay
        if (changes == 0) {
            outputText("[pg]Inhuman vitality spreads through your body, invigorating you!\n");
            HPChange(Math.round(20*player.postConsumptionMlt()), true);
            dynStats("lus", Math.round(3*player.postConsumptionMlt()), "scale", false);
        }
        player.refillHunger(15);
        flags[kFLAGS.TIMES_TRANSFORMED] += changes;
    }

    public function forceCerberus(doOutput:Boolean = false):void {
        transformations.HairWild.applyEffect(doOutput);
        transformations.FaceCerberus.applyEffect(doOutput);
        if (player.tongue.type != Tongue.DOG) transformations.TongueDog.applyEffect(doOutput);
        if (player.eyes.type != Eyes.INFERNAL) transformations.EyesInfernal.applyEffect(doOutput);
        if (player.hasPerk(PerkLib.FireLord)) transformations.EyesChangeColor(["green"]).applyEffect(doOutput);
        else transformations.EyesChangeColor(["red"]).applyEffect(doOutput);
        if (player.ears.type != Ears.DOG) transformations.EarsDog.applyEffect(doOutput);
        if (player.arms.type != Arms.HOUND) transformations.ArmsHound.applyEffect(doOutput);
        if (player.lowerBody != LowerBody.DOG) transformations.LowerBodyDog(2).applyEffect(doOutput);
        if (player.tail.type != Tail.DOG) transformations.TailDog.applyEffect(doOutput);
        if (player.rearBody.type != RearBody.HELLHOUND_COLLAR) transformations.RearBodyHellhoundCollar.applyEffect(doOutput);
        transformations.SkinColor(["grayish-blue"]).applyEffect(doOutput);
        transformations.SkinFur(Skin.COVERAGE_LOW, {color: "midnight black"}).applyEffect(doOutput);
        if (player.wings.type != Wings.NONE) transformations.WingsNone.applyEffect(doOutput);
        var cockBonus:Number = 0;
        while (player.cocks.length > 2) {
            cockBonus += 2+rand(3);
            if (doOutput) outputText("\n");
            player.killCocks(1, doOutput);
        }
        if (doOutput) outputText("\n");
        transformations.CockDog(0).applyEffect(doOutput);
        if (doOutput) outputText("\n");
        transformations.CockDog(1).applyEffect(doOutput);
        player.growCock(0, cockBonus/2);
        player.growCock(1, cockBonus/2);
        if (doOutput) outputText("\n");
        if (player.hasVagina() && player.vaginas.length < 2) transformations.SecondVagina.applyEffect(doOutput);
        if (doOutput) outputText("\n");
        if (player.hasVagina() && player.bRows() < 3) transformations.BreastRowsThree.applyEffect(doOutput);
        if (doOutput) outputText("\n");
        transformations.BallsQuad(3, true).applyEffect(doOutput);
        if (player.tone < 80) player.tone = 90;
        if (player.thickness > 20) player.thickness = 20;
        if (doOutput) outputText("\nYou gain "+ Measurements.inchesOrCentimetres(11*12 - player.tallness, 0) +" in height");
        if (player.tallness < 11*12) player.tallness = 11*12;
        if (!player.hasPerk(PerkLib.DominantAlpha)) {
            player.createPerk(PerkLib.DominantAlpha, 0, 0, 0, 0);
            outputText("\n<b>Gained Perk: Dominant Alpha!</b> "+PerkLib.DominantAlpha.longDesc);
            player.statStore.addBuffObject({
                "str.mult": 0.02,
                "tou.mult": 0.02,
                "spe.mult": 0.02,
                "int.mult": 0.02,
                "wis.mult": 0.02,
                "lib.mult": 0.02
            }, 'Dominant Alpha', {text: 'Dominant Alpha'});
        }
        if (!player.hasPerk(PerkLib.TitanicStrength)) {
            player.createPerk(PerkLib.TitanicStrength, 0, 0, 0, 0);
            outputText("\n<b>Gained Perk: Titanic Strength!</b> " +PerkLib.TitanicStrength.longDesc);
        }
        if (!player.hasPerk(PerkLib.FireAffinity)) {
            player.createPerk(PerkLib.FireAffinity, 0, 0, 0, 0);
            outputText("\n<b>Gained Perk: Fire Affinity!</b> " +PerkLib.FireAffinity.longDesc);
        }
        if (!player.hasPerk(PerkLib.Hellfire)) {
            player.createPerk(PerkLib.Hellfire, 0, 0, 0, 0);
            outputText("\n<b>Gained Ability: Hellfire!</b> "+PerkLib.Hellfire.longDesc);
        }
        player.createPerk(PerkLib.HellfireCoat, 0, 0, 0, 0);
        outputText("\n<b>Gained Ability: Hellfire Coat</b> " + PerkLib.HellfireCoat.longDesc);
        outputText("\n<b>Upgraded Ability: Bite -> Tripple Bite</b>");
        outputText("\n<b>Upgraded Ability: Hellfire -> tripple effect</b>");
        outputText("\n<b>Gained Ability: Terrifying Howl</b>");
        if (player.hasPerk(PerkLib.RacialParagon))
            flags[kFLAGS.APEX_SELECTED_RACE] = Races.CERBERUS;
        IMutationsLib.HellhoundFireBallsIM.trueMutation = true;
        IMutationsLib.AlphaHowlIM.trueMutation = true;

        player.removeAllRacialMutation();
        if (player.cor < 50) player.cor = 50;
        outputText("\n<b>Gained Mutation: Hellhound Fireballs</b>");
		player.createPerk(PerkLib.TransformationImmunity2, 3, 0, 0, 0);
		outputText("\n<b>Gained Perk: Transformation Immunity!</b> "+PerkLib.TransformationImmunity2.longDesc);
        IMutationsLib.HellhoundFireBallsIM.acquireMutation(player,"none");
    }
    
    public function impFood(player:Player):void {
        clearOutput();
		var changes:Number = 0;
        var changeLimit:Number = 2;
		if (player.blockingBodyTransformations()) changeLimit = 0;
        if (player.cocks.length > 0) {
            outputText("The food tastes strange and corrupt - you can't really think of a better word for it, but it's unclean.");
            player.refillHunger(20);
            if (player.cocks[0].cockLength < 12 && changes < changeLimit) {
                var cIdx:int = player.growCock(0, rand(2) + 2);
                outputText("[pg]");
                player.lengthChange(cIdx, 1);
				changes++;
            }
            outputText("[pg]Inhuman vitality spreads through your body, invigorating you!\n");
            HPChange(Math.round((30 + player.tou / 3)*player.postConsumptionMlt()), true);
            dynStats("lus", Math.round(3*player.postConsumptionMlt()), "cor", 1);
            //Shrinkage!
            if (rand(2) == 0 && player.tallness > 42 && changes < changeLimit) {
                outputText("[pg]Your skin crawls, making you close your eyes and shiver.  When you open them again the world seems... different.  After a bit of investigation, you realize you've become shorter!\n");
                player.tallness -= 1 + rand(3);
				changes++;
            }
            //Red skin!
            if (!InCollection(player.skinColor, ImpRace.ImpSkinColors, ImpRace.ImpRareSkinColors) && changes < changeLimit && rand(3) == 0) {
				if (player.isFurCovered()) outputText("[pg]Underneath your fur, your skin ");
				else outputText("[pg]Your [skin.type] ");
				player.skinColor = weightedRandom(
						[2, "dark green"],
						[1, "emerald"],
						[1, "green"],
						[1, "pale yellow"],
						[1, "grayish-blue"],
						[17, "red"],
						[7, "orange"],
						[7, "pale purple"],
						[7, "royal purple"],
						[7, "light purple"]
				);
				outputText("begins to lose its color, fading until you're as white as an albino.  then, starting from the crown of your head, a hue rolls down your body like a wave, turning you completely [skin color].");
				changes++;
			}
            return;
        } else {
            outputText("The food tastes... corrupt, for lack of a better word.\n");
            player.refillHunger(20);
            HPChange(Math.round((20 + player.tou / 3)*player.postConsumptionMlt()), true);
            dynStats("lus", Math.round(3*player.postConsumptionMlt()), "cor", 1);
        }
        //Red skin!
        if (rand(30) == 0 && changes < changeLimit && player.skinColor != "red") {
            if (player.isFurCovered()) outputText("[pg]Underneath your fur, your skin ");
            else outputText("[pg]Your [skin.type] ");
            if (rand(2) == 0) player.skinColor = "red";
            else player.skinColor = "orange";
            outputText("begins to lose its color, fading until you're as white as an albino.  Then, starting at the crown of your head, a reddish hue rolls down your body in a wave, turning you completely [skin color].");
			changes++;
        }
        //Shrinkage!
        if (rand(2) == 0 && player.tallness > 42 && changes < changeLimit) {
            outputText("[pg]Your skin crawls, making you close your eyes and shiver.  When you open them again the world seems... different.  After a bit of investigation, you realize you've become shorter!");
            player.tallness -= 1 + rand(3);
			changes++;
        }
		//skin tone
        if (!InCollection(player.skinColor, ImpRace.ImpSkinColors, ImpRace.ImpRareSkinColors) && changes < changeLimit && rand(3) == 0) {
            if (player.isFurCovered()) outputText("[pg]Underneath your fur, your skin ");
            else outputText("[pg]Your [skin.type] ");
            player.skinColor = weightedRandom(
                    [2, "dark green"],
                    [1, "emerald"],
                    [1, "green"],
                    [1, "pale yellow"],
                    [1, "grayish-blue"],
                    [17, "red"],
                    [7, "orange"],
                    [7, "pale purple"],
                    [7, "royal purple"],
                    [7, "light purple"]
            );
            outputText("begins to lose its color, fading until you're as white as an albino.  then, starting from the crown of your head, a hue rolls down your body like a wave, turning you completely [skin color].");
			changes++;
        }
        //Ears!
        if ((player.ears.type != Ears.BIG || player.ears.type != Ears.ELFIN) && changes < changeLimit && rand(3) == 0) {
            outputText("[pg]");
			if (rand(4) == 0) transformations.EarsBig.applyEffect();
			else transformations.EarsElfin.applyEffect();
            changes++;
        }
        flags[kFLAGS.TIMES_TRANSFORMED] += changes;
    }

    public function impTFgradual(player:Player):void {
        var changes:Number = 0;
        var changeLimit:Number = 1;
        outputText("[pg]The Tome of Imps gives off a constant corrupting aura.");
        if (player.cor < 50 || rand(2) == 0)
            dynStats("lus", 2, "cor", 1);
        if (player.blockingBodyTransformations()) changeLimit = 0;
        //Shrinkage!
        if (player.tallness > 42 && rand(4) < 3 && changes < changeLimit) {
            outputText("[pg]Your skin crawls, making you close your eyes and shiver.  When you open them again the world seems... different.  After a bit of investigation, you realize you've become shorter!");
            player.tallness -= 1 + rand(5);
        }
        if (player.cocks.length > 0) {
            if (player.smallestCockLength() < 12 && changes < changeLimit) {
                var i2:int = player.growCock(player.smallestCockIndex(), rand(2) + 1);
            }
            var x:int = player.findFirstCockNotInType([CockTypesEnum.DEMON]);
            if (x >= 0 && rand(5) == 0 && changes < changeLimit) {
                transformations.CockDemon(x).applyEffect();
            }
        }
        if (player.vaginas.length > 0 && rand(3) == 0) {
            //0 = dry, 1 = wet, 2 = extra wet, 3 = always slick, 4 = drools constantly, 5 = female ejaculator
            outputText("[pg]");
            //0 = dry, 1 = wet, 2 = extra wet, 3 = always slick, 4 = drools constantly, 5 = female ejaculator
            if (player.vaginas[0].vaginalWetness == VaginaClass.WETNESS_SLAVERING && rand(2) == 0 && changes < changeLimit) {
                if (player.vaginas.length == 1) outputText("Your [vagina] gushes fluids down your leg as you spontaneously orgasm.");
                else outputText("Your [vagina]s gush fluids down your legs as you spontaneously orgasm, leaving a thick puddle of pussy-juice on the ground.  It is rapidly absorbed by the earth.");
                player.orgasm();
                if (player.vaginaType() != VaginaClass.DEMONIC) {
                    transformations.VaginaDemonic().applyEffect();
                }
            }
            if (player.vaginas[0].vaginalWetness == VaginaClass.WETNESS_DROOLING) {
                if (player.vaginas.length == 1) outputText("Your pussy feels hot and juicy, aroused and tender.  You cannot resist as your hands dive into your [vagina].  You quickly orgasm, squirting fluids everywhere.  <b>You are now a squirter</b>.");
                if (player.vaginas.length > 1) outputText("Your pussies feel hot and juicy, aroused and tender.  You cannot resist plunging your hands inside your [vagina]s.  You quiver around your fingers, squirting copious fluids over yourself and the ground.  The fluids quickly disappear into the dirt.");
                player.orgasm();
            }
            if (player.vaginas[0].vaginalWetness == VaginaClass.WETNESS_SLICK) {
                if (player.vaginas.length == 1) outputText("You feel a sudden trickle of fluid down your leg.  You smell it and realize it's your pussy-juice.  Your [vagina] now drools lubricant constantly down your leg.");
                if (player.vaginas.length > 1) outputText("You feel sudden trickles of fluids down your leg.  You smell the stuff and realize it's your pussies-juices.  They seem to drool lubricant constantly down your legs.");
            }
            if (player.vaginas[0].vaginalWetness == VaginaClass.WETNESS_WET) {
                outputText("You flush in sexual arousal as you realize how moist your cunt-lips have become.  Once you've calmed down a bit you realize they're still slick and ready to fuck, and always will be.");
            }
            if (player.vaginas[0].vaginalWetness == VaginaClass.WETNESS_NORMAL) {
                if (player.vaginas.length == 1) outputText("A feeling of intense arousal passes through you, causing you to masturbate furiously.  You realize afterwards that your [vagina] felt much wetter than normal.");
                else outputText("A feeling of intense arousal passes through you, causing you to masturbate furiously.  You realize afterwards that your [vagina] were much wetter than normal.");
            }
            if (player.vaginas[0].vaginalWetness == VaginaClass.WETNESS_DRY) {
                outputText("You feel a tingling in your crotch, but cannot identify it.");
            }
            var index:int = player.vaginas.length;
            while (index > 0) {
                index--;
                if (player.vaginas[0].vaginalWetness < VaginaClass.WETNESS_SLAVERING) player.vaginas[index].vaginalWetness++;
            }
        }
        //grow horns!
        if (!InCollection(player.horns.type, Horns.ORCHID, Horns.DEMON, Horns.ARCH_IMP) && rand(4) == 0 && changes < changeLimit) {
            outputText("[pg]");
            transformations.HornsDemonic.applyEffect();
            changes++;
        }
        if (player.tailType != Tail.DEMONIC && player.horns.count > 0 && rand(4) == 0 && changes < changeLimit) {
            outputText("[pg]");
            transformations.TailDemonic.applyEffect();
            changes++;
        }
        if (rand(4) == 0 && changes < changeLimit) {
            outputText("[pg]");
            if (rand(2) == 0 && player.ears.type != Ears.ELFIN) transformations.EarsElfin.applyEffect();
            else transformations.EarsBig.applyEffect();
            changes++;
        }
        if ((player.wings.type != Wings.BAT_LIKE_TINY && rand(4) == 0) && changes < changeLimit) {
            outputText("[pg]");
            transformations.WingsDemonicTiny.applyEffect();
            changes++;
        }
        if (((!InCollection(player.hairColor1, ImpRace.ImpHairColors) && rand(3) == 0) || rand(10) == 0) && changes < changeLimit) {
            outputText("[pg]");
            transformations.HairChangeColor(ImpRace.ImpHairColors).applyEffect();
        }
        if (player.tallness <= 60 && changes < changeLimit) {
            if (player.tongue.type != Tongue.IMPISH && rand(3) == 0 && changes < changeLimit) {
                outputText("[pg]");
                transformations.TongueImp.applyEffect();
                changes++;
            }
            if (player.lowerBody != LowerBody.TINY && rand(3) == 0 && changes < changeLimit) {
                transformations.LowerBodyTiny.applyEffect();
                changes++;
            }
            if (player.arms.type != Arms.TINY && rand(3) == 0 && changes < changeLimit) {
                transformations.ArmsTiny.applyEffect();
                changes++;
            }
        }
        //Red skin!
        if ((!InCollection(player.skinColor1, ImpRace.ImpSkinColors) &&  rand(3) == 0) && changes < changeLimit) {
            if (player.isFurCovered()) outputText("[pg]Underneath your fur, your skin ");
            else outputText("[pg]Your [skin.type] ");
            var colors:Array = [];
            if (player.hasCock() && player.hasVagina()) colors = ImpRace.ImpSkinColors;
            else if (player.hasVagina()) colors = ImpRace.ImpSkinColorsFemale;
            else colors = ImpRace.ImpSkinColorsMale;
            player.skinColor = randomChoice(colors);
            outputText("begins to lose its color, fading until you're as white as an albino.  Then, starting at the crown of your head, a reddish hue rolls down your body in a wave, turning you completely [skin color].");
            changes++;
        }
        //Face!
        if ((((player.faceType != Face.HUMAN || player.faceType != Face.ANIMAL_TOOTHS) && rand(3) == 0) || rand(10) == 0) && changes < changeLimit) {
            outputText("[pg]");
            if (player.faceType != Face.ANIMAL_TOOTHS) {
                transformations.FaceAnimalTeeth.applyEffect();
                changes++;
            } else if (rand(3) == 0) {
                transformations.FaceHuman.applyEffect();
                changes++;
            }
        }
        if (!player.hasPlainSkinOnly() && changes < changeLimit && rand(3) == 0) {
            outputText("[pg]");
            transformations.SkinPlain.applyEffect();
            changes++;
        }
        //Remove odd eyes
        if (player.eyes.type > Eyes.HUMAN && rand(5) == 0 && changes < changeLimit) {
            outputText("[pg]");
            transformations.EyesHuman.applyEffect();
            changes++;
        }
        if ((!InCollection(player.eyes.colour, ImpRace.ImpEyeColors) && rand(3) == 0) || rand(20) == 0 && changes < changeLimit) {
            outputText("[pg]");
            transformations.EyesChangeColor(ImpRace.ImpEyeColors).applyEffect();
            changes++;
        }
        //Change hair type to normal
        if (transformations.HairHuman.isPossible() && changes < changeLimit && rand(2) == 0) {
            outputText("[pg]");
            transformations.HairChangeColor(ImpRace.ImpHairColors).applyEffect();
            transformations.HairHuman.applyEffect();
            changes++;
        }
        if (rand(3) == 0 && changes < changeLimit && player.antennae.type != Antennae.NONE) {
            outputText("[pg]");
            transformations.AntennaeNone.applyEffect();
            changes++;
        }
        if (rand(3) == 0 && changes < changeLimit && player.rearBody.type != RearBody.NONE) {
            outputText("[pg]");
            transformations.RearBodyNone.applyEffect();
            changes++;
        }
        flags[kFLAGS.TIMES_TRANSFORMED] += changes;
    }

    public function archImpTFforce(player:Player):void {
        var changes:Number = 0;
        //Shrinkage!
        if (player.tallness > 42) {
            player.tallness = 42;
        }
        if (player.cocks.length > 0) {
            var x:int = player.findFirstCockNotInType([CockTypesEnum.DEMON]);
            while (x >= 0 ) {
                outputText("[pg]");
                transformations.CockDemon(x).applyEffect(false);
                x = player.findFirstCockNotInType([CockTypesEnum.DEMON])
            }
        }
        if (player.vaginas.length > 0 && rand(3) == 0) {
            //0 = dry, 1 = wet, 2 = extra wet, 3 = always slick, 4 = drools constantly, 5 = female ejaculator
            if (player.vaginaType() != VaginaClass.DEMONIC) {
                transformations.VaginaDemonic().applyEffect(false);
            }
            var index:int = player.vaginas.length;
            while (index > 0) {
                index--;
                if (player.vaginas[0].vaginalWetness < VaginaClass.WETNESS_SLAVERING) player.vaginas[index].vaginalWetness++;
            }
        }
        //Red skin!
        if (!InCollection(player.skinColor1, ImpRace.ImpSkinColors)) {
            var colors:Array = [];
            if (player.hasCock() && player.hasVagina()) colors = ImpRace.ImpSkinColors;
            else if (player.hasVagina()) colors = ImpRace.ImpSkinColorsFemale;
            else colors = ImpRace.ImpSkinColorsMale;
            player.skinColor = randomChoice(colors);
        }
        if (player.tailType != Tail.DEMONIC) {
            transformations.TailDemonic.applyEffect(false);
            changes++;
        }
        if (!InCollection(player.ears.type, Ears.ELFIN, Ears.BIG)) {
            if (rand(2) == 0 && player.ears.type != Ears.ELFIN) transformations.EarsElfin.applyEffect(false);
            else transformations.EarsBig.applyEffect(false);
            changes++;
        }
        if (player.wings.type != Wings.BAT_LIKE_TINY) {
            transformations.WingsDemonicTiny.applyEffect(false);
            changes++;
        }
        //Face!
        if ((player.faceType != Face.HUMAN || player.faceType != Face.ANIMAL_TOOTHS)) {
            transformations.FaceAnimalTeeth.applyEffect(false);
            changes++;
        }
        if (!player.hasPlainSkinOnly()) {
            transformations.SkinPlain.applyEffect(false);
            changes++;
        }
        if (player.tongue.type != Tongue.IMPISH) {
            transformations.TongueImp.applyEffect(false);
            changes++;
        }
        if (player.lowerBody != LowerBody.TINY) {
            transformations.LowerBodyTiny.applyEffect(false);
            changes++;
        }
        if (player.arms.type != Arms.TINY) {
            transformations.ArmsTiny.applyEffect(false);
            changes++;
        }
        //Remove odd eyes
        if (player.eyes.type != Eyes.HUMAN) {
            transformations.EyesHuman.applyEffect(false);
            changes++;
        }
        if (!InCollection(player.eyes.colour, ImpRace.ImpEyeColors)) {
            transformations.EyesChangeColor(ImpRace.ImpEyeColors).applyEffect(false);
            changes++;
        }
        //Change hair type to normal
        if (transformations.HairHuman.isPossible()) {
            transformations.HairHuman.applyEffect(false);
            changes++;
        }
        if (!InCollection(player.hairColor1, ImpRace.ImpHairColors)) {
            transformations.HairChangeColor(ImpRace.ImpHairColors).applyEffect(false);
        }
        if (player.antennae.type != Antennae.NONE) {
            transformations.AntennaeNone.applyEffect(false);
            changes++;
        }
        if (player.rearBody.type != RearBody.NONE) {
            transformations.RearBodyNone.applyEffect(false);
            changes++;
        }
        //grow horns!
        transformations.HornsArchImp.applyEffect(false);
        changes++;
        transformations.SkinPatternArchImp.applyEffect(false);
        player.skinColor2 = "midnight black";
        outputText("\n<b>Gained Perk: Imp Nobility!</b> "+PerkLib.ImpNobility.desc());
        player.createPerk(PerkLib.ImpNobility, 0, 0, 0, 0);
        outputText("\n<b>Gained Perk: Soulless!</b> "+PerkLib.Soulless.desc());
        player.createPerk(PerkLib.Soulless, 0, 0, 0, 0);
        outputText("\n<b>Gained Perk: Transformation Immunity!</b> "+ PerkLib.TransformationImmunity2.desc());
        player.createPerk(PerkLib.TransformationImmunity2, 6, 0, 0, 0);
        if (player.hasPerk(PerkLib.RacialParagon)) flags[kFLAGS.APEX_SELECTED_RACE] = Races.IMP;
        IMutationsLib.BlackHeartIM.trueMutation = true;
        IMutationsLib.FiendishMetabolismIM.trueMutation = true;
        IMutationsLib.FiendishBallsIM.trueMutation = true;
		player.npcsThatLeaveSoullessPC();
        player.removeAllRacialMutation();
		saveUpdater.bringBackEncoutersForSouless();
        flags[kFLAGS.TIMES_TRANSFORMED] += changes;
    }
	
	public function sagittariusBowChanges(player:Player):void {
		var changes:Number = 0;
		var changeLimit:Number = 1;
		//Temporary storage
        var temp:Number = 0;
		var temp2:Number = 0;
		var temp3:Number = 0;
		//Chance of horse cock growth if not any yet
		if (!player.hasCock() && changes < changeLimit && rand(3) == 0) {
			transformations.CockHorse(0, 10 + rand(7), 2 + rand(10) / 10).applyEffect();
			player.addCurse("sen", 5, 1);
			player.MutagenBonus("lib", 4);
			changes++;
		}
		//Chance of ball growth if not 3" yet
		if (rand(2) == 0 && changes < changeLimit && player.ballSize <= 3 && player.horseCocks() > 0) {
			if (player.balls == 0) {
				outputText("\n\nA nauseating pressure forms just under the base of your maleness.  With agonizing pain the flesh bulges and distends, pushing out a rounded lump of flesh that you recognize as a testicle!  A moment later relief overwhelms you as the second drops into your newly formed sack.");
				transformations.BallsDuo.applyEffect(false);
				dynStats("lus", 5, "scale", false);
				player.MutagenBonus("lib", 2);
			}
			else {
				player.ballSize++;
				if (player.ballSize <= 2) outputText("\n\nA flash of warmth passes through you and a sudden weight develops in your groin.  You pause to examine the changes and your roving fingers discover your " + Appearance.ballsDescription(false, true, player) + " have grown larger than a human's.");
				if (player.ballSize > 2) outputText("\n\nA sudden onset of heat envelops your groin, focusing on your [sack].  Walking becomes difficult as you discover your " + Appearance.ballsDescription(false, true, player) + " have enlarged again.");
				dynStats("lus", 3, "scale", false);
				player.MutagenBonus("lib", 1);
			}
			changes++;
		}
		if ((player.gender == 1 || player.gender == 3) && rand(3) == 0 && changes < changeLimit) {
			//If cocks that aren't horsified!
			if ((player.horseCocks() + player.demonCocks()) < player.cockTotal()) {
				var temp4:int = player.findFirstCockNotInType([CockTypesEnum.HORSE,CockTypesEnum.DEMON]);
				transformations.CockHorse(temp4).applyEffect();
				temp2 = player.growCock(temp4, rand(4) + 4);
				dynStats("lus", 35, "scale", false);
				player.addCurse("sen", 4, 1);
				player.MutagenBonus("lib", 5);
				//Make cock thicker if not thick already!
				if (player.cocks[temp4].cockThickness <= 2) player.thickenCock(temp4, 1);
				changes++;
			}
			//Players cocks are all horse-type - increase size!
			else {
				//single cock
				if (player.cocks.length == 1) {
					temp2 = player.growCock(0, rand(3) + 1);
					temp = 0;
					dynStats("lus", 10, "scale", false);
					player.addCurse("sen", 1, 1);
				}
				//Multicock
				else {
					//Find smallest cock
					//Temp2 = smallness size
					//temp = current smallest
					temp3 = player.cocks.length;
					temp = 0;
					while (temp3 > 0) {
						temp3--;
						//If current cock is smaller than saved, switch values.
						if (player.cocks[temp].cockLength > player.cocks[temp3].cockLength) {
							temp2 = player.cocks[temp3].cockLength;
							temp = temp3;
						}
					}
					//Grow smallest cock!
					//temp2 changes to growth amount
					temp2 = player.growCock(temp, rand(4) + 1);
					dynStats("lus", 10, "scale", false);
					player.addCurse("sen", 1, 1);
				}
				outputText("\n\n");
				if (temp2 > 2) outputText("Your [cock "+ (temp+1) +"] tightens painfully, inches of taut horse-flesh pouring out from your sheath as it grows longer.  Thick animal-pre forms at the flared tip, drawn out from the pleasure of the change.");
				if (temp2 > 1 && temp2 <= 2) outputText("Aching pressure builds within your sheath, suddenly releasing as an inch or more of extra dick flesh spills out.  A dollop of pre beads on the head of your enlarged " + player.cockDescript(temp) + " from the pleasure of the growth.");
				if (temp2 <= 1) outputText("A slight pressure builds and releases as your [cock " + (temp+1) + "] pushes a bit further out of your sheath.");
				changes++;
			}
			//Chance of thickness + daydream
			if (rand(2) == 0 && changes < changeLimit && player.horseCocks() > 0) {
				temp3 = 0;
				temp2 = player.cocks.length;
				while (temp2 > 0) {
					temp2--;
					if (player.cocks[temp2].cockThickness <= player.cocks[temp3].cockThickness) {
						temp3 = temp2;
					}
				}
				temp = temp3;
				player.thickenCock(temp, .5);
				outputText("\n\nYour " + Appearance.cockNoun(CockTypesEnum.HORSE) + " thickens inside its sheath, growing larger and fatter as your veins thicken, becoming more noticeable.  It feels right");
				if (player.cor + player.lib < 60) outputText(" to have such a splendid tool.  You idly daydream about cunts and pussies, your " + Appearance.cockNoun(CockTypesEnum.HORSE) + " plowing them relentlessly, stuffing them pregnant with cum");
				else if (player.cor + player.lib < 100) outputText(" to be this way... You breath the powerful animalistic scent and fantasize about fucking centaurs night and day until their bellies slosh with your cum");
				else if (player.cor + player.lib <= 175) outputText(" to be a rutting stud.  You ache to find a mare or centaur to breed with.  Longing to spend your evenings plunging a " + Appearance.cockNoun(CockTypesEnum.HORSE) + " deep into their musky passages, dumping load after load of your thick animal-cum into them.  You'd be happy just fucking horsecunts morning, noon, and night.  Maybe somewhere there is a farm needing a breeder..");
				else outputText(" to whinny loudly like a rutting stallion.  Your " + Appearance.cockNoun(CockTypesEnum.HORSE) + " is perfect for fucking centaurs and mares.  You imagine the feel of plowing an equine pussy deeply, bottoming out and unloading sticky jets of horse-jizz into its fertile womb.  Your hand strokes your horsecock of its own accord, musky pre dripping from the flared tip with each stroke.  Your mind wanders to the thought of you with a harem of pregnant centaurs.");
				outputText(".");
				if (player.cor < 30) outputText("  You shudder in revulsion at the strange thoughts and vow to control yourself better.");
				else if (player.cor < 60) outputText("  You wonder why you thought such odd things, but they have a certain appeal.");
				else if (player.cor < 90) outputText("  You relish your twisted fantasies, hoping to dream of them again.");
				else outputText("  You flush hotly and give a twisted smile, resolving to find a fitting subject to rape and relive your fantasies.");
				dynStats("lus", 10, "scale", false);
				player.MutagenBonus("lib", 1);
			}
		}
		if (changes < changeLimit) consumables.CENTARI.centaurTFEffects(true);
		if (!player.inRut) player.goIntoRut(true);
	}

    public function succubisDelight(tainted:Boolean, player:Player):void {
        player.slimeFeed();
        var changes:Number = 0;
        var crit:Number = 1;
        //Determine crit multiplier (x2 or x3)
        if (rand(4) == 0) crit += rand(2) + 1;
        var changeLimit:Number = 1;
        //Chances to up the max number of changes
        if (rand(2) == 0) changeLimit++;
        if (rand(2) == 0) changeLimit++;
        changeLimit += player.additionalTransformationChances;
        //Generic drinking text
        clearOutput();
        outputText("You uncork the bottle and drink down the strange substance, struggling to down the thick liquid.");
        //low corruption thoughts
        if (player.cor < 33) outputText("  This stuff is gross, why are you drinking it?");
        //high corruption
        if (player.cor >= 66) outputText("  You lick your lips, marvelling at how thick and sticky it is.");
        //Corruption increase
        if ((player.cor < 50 || rand(2)) && tainted) {
            outputText("[pg]The drink makes you feel... dirty.");
            var mult:Number = 1;
            //Corrupts the uncorrupted faster
            if (player.cor < 50) mult++;
            if (player.cor < 40) mult++;
            if (player.cor < 30) mult++;
            //Corrupts the very corrupt slower
            if (player.cor >= 90) mult = .5;
            if (tainted) dynStats("cor", mult);
            else dynStats("cor", 0);
            changes++;
        }
        if (player.blockingBodyTransformations()) changeLimit = 0;
        //Makes your balls biggah! (Or cummultiplier higher if futa!)
        if (rand(1.5) == 0 && changes < changeLimit && player.hasBalls()) {
            player.ballSize++;
            //They grow slower as they get bigger...
            if (player.ballSize > 10) player.ballSize -= .5;
            //Texts
            if (player.ballSize <= 2) outputText("[pg]A flash of warmth passes through you and a sudden weight develops in your groin.  You pause to examine the changes and your roving fingers discover your " + simpleBallsDescript() + " have grown larger than a human's.");
            if (player.ballSize > 2) outputText("[pg]A sudden onset of heat envelops your groin, focusing on your [sack].  Walking becomes difficult as you discover your " + simpleBallsDescript() + " have enlarged again.");
            dynStats("lus", 3, "scale", false);
            MutagenBonus("lib", 1);
            changes++;
        }
        //Grow new balls!
        if (player.balls < 2 && changes < changeLimit && rand(4) == 0) {
            if (player.balls == 0) {
                transformations.BallsDuo.applyEffect();
            }
            changes++;
        }
        //Boost cum multiplier
        if (changes < changeLimit && rand(2) == 0 && player.cocks.length > 0) {
            if (player.cumMultiplier < 6 && rand(2) == 0 && changes < changeLimit) {
                var max:int = 3;
                //Lots of cum raises cum multiplier cap to 6 instead of 3
                if (player.hasPerk(PerkLib.MessyOrgasms)) max = 6;
                if (max < player.cumMultiplier + .4 * crit) {
                    changes--;
                } else {
                    player.cumMultiplier += .4 * crit;
                    //Flavor text
                    if (player.balls == 0) outputText("[pg]You feel a churning inside your body as something inside you changes.");
                    if (player.hasBalls()) outputText("[pg]You feel a churning in your [balls].  It quickly settles, leaving them feeling somewhat more dense.");
                    if (crit > 1) outputText("  A bit of milky pre dribbles from your [cocks], pushed out by the change.");
                    MutagenBonus("lib", 1);
                }
                changes++;
            }
        }
        //Fail-safe
        if (changes == 0) {
            outputText("[pg]Your groin tingles, making it feel as if you haven't cum in a long time.");
            player.hoursSinceCum += 100;
            changes++;
        }
        if (player.hasBalls() && rand(3) == 0) {
            outputText(player.modFem(12, 3));
        }
        player.refillHunger(10);
    }

    public function succubusDream(player:Player):void {
        player.slimeFeed();
        var changes:Number = 0;
        var crit:Number = 1;
        //Determine crit multiplier (x2 or x3)
        crit += rand(2) + 1;
        var changeLimit:Number = 1;
        //Chances to up the max number of changes
        if (rand(2) == 0) changeLimit++;
        if (rand(2) == 0) changeLimit++;
        changeLimit += player.additionalTransformationChances;
        //Generic drinking text
        clearOutput();
        outputText("You uncork the bottle and drink down the strange substance, struggling to down the thick liquid.");
        //low corruption thoughts
        if (player.cor < 33) outputText("  This stuff is gross, why are you drinking it?");
        //high corruption
        if (player.cor >= 66) outputText("  You lick your lips, marvelling at how thick and sticky it is.");
        //Corruption increase
        if (player.cor < 50 || rand(2)) {
            outputText("[pg]The drink makes you feel... dirty.");
            var mult:Number = 1;
            //Corrupts the uncorrupted faster
            if (player.cor < 50) mult++;
            if (player.cor < 40) mult++;
            if (player.cor < 30) mult++;
            //Corrupts the very corrupt slower
            if (player.cor >= 90) mult = .5;
            dynStats("cor", mult + 2);
            changes++;
        }
        if (player.blockingBodyTransformations()) changeLimit = 0;
        //NEW BALLZ
        if (player.balls < 4) {
            transformations.BallsQuad().applyEffect();
            changes++;
        }
        //Makes your balls biggah! (Or cummultiplier higher if futa!)
        if (rand(1.5) == 0 && changes < changeLimit && player.hasBalls() && player.cocks.length > 0) {
            player.ballSize++;
            //They grow slower as they get bigger...
            if (player.ballSize > 10) player.ballSize -= .5;
            //Texts
            if (player.ballSize <= 2) outputText("[pg]A flash of warmth passes through you and a sudden weight develops in your groin.  You pause to examine the changes and your roving fingers discover your " + simpleBallsDescript() + " have grown larger than a human's.");
            if (player.ballSize > 2) outputText("[pg]A sudden onset of heat envelops your groin, focusing on your [sack].  Walking becomes difficult as you discover your " + simpleBallsDescript() + " have enlarged again.");
            dynStats("lus", 3, "scale", false);
            MutagenBonus("lib", 1);
        }
        //Boost cum multiplier
        if (changes < changeLimit && rand(2) == 0 && player.cocks.length > 0) {
            if (player.cumMultiplier < 6 && rand(2) == 0 && changes < changeLimit) {
                //Temp is the max it can be raised to
                var max:int = 3;
                //Lots of cum raises cum multiplier cap to 6 instead of 3
                if (player.hasPerk(PerkLib.MessyOrgasms)) max = 6;
                if (max < player.cumMultiplier + .4 * crit) {
                    changes--;
                } else {
                    player.cumMultiplier += .4 * crit;
                    //Flavor text
                    if (player.balls == 0) outputText("[pg]You feel a churning inside your body as something inside you changes.");
                    if (player.hasBalls()) outputText("[pg]You feel a churning in your [balls].  It quickly settles, leaving them feeling somewhat more dense.");
                    if (crit > 1) outputText("  A bit of milky pre dribbles from your [cocks], pushed out by the change.");
                    MutagenBonus("lib", 1);
                }
                changes++;
            }
        }
        //Fail-safe
        if (changes == 0) {
            outputText("[pg]Your groin tingles, making it feel as if you haven't cum in a long time.");
            player.hoursSinceCum += 100;
            changes++;
        }
        if (player.hasBalls() && rand(3) == 0) {
            outputText(player.modFem(12, 5));
        }
        player.refillHunger(15);
    }

    //butt expansion
    public function brownEgg(large:Boolean, player:Player):void {
        clearOutput();
        outputText("You devour the egg, momentarily sating your hunger.[pg]");
        if (!large)player.refillHunger(20);
        else player.refillHunger(60);
        if (player.blockingBodyTransformations()) {
            outputText("[pg]Your butt begins to tingle, but, as you are immunised to transformatives, nothing happens.");
            return;
        }
        if (!large) {
            outputText("You feel a bit of additional weight on your backside as your [butt] gains a bit more padding.");
            player.butt.type++;
        } else {
            outputText("Your [butt] wobbles, nearly throwing you off balance as it grows much bigger!");
            player.butt.type += 2 + rand(3);
        }
        if (rand(3) == 0) {
            if (large) outputText(player.modThickness(player.maxThicknessCap(), 8));
            else outputText(player.modThickness((player.maxThicknessCap() * 0.9), 3));
        }

    }

    //hip expansion
    public function purpleEgg(large:Boolean, player:Player):void {
        clearOutput();
        outputText("You devour the egg, momentarily sating your hunger.[pg]");
        if (!large)player.refillHunger(20);
        else player.refillHunger(60);
        if (player.blockingBodyTransformations()) {
            outputText("[pg]Your hips begin to tingle, but, as you are immunised to transformatives, nothing happens.");
            return;
        }
        if (!large || player.hips.type > 20) {
            outputText("You stumble as you feel your [hips] widen, altering your gait slightly.");
            player.hips.type++;
        } else {
            outputText("You stagger wildly as your hips spread apart, widening by inches.  When the transformation finishes you feel as if you have to learn to walk all over again.");
            player.hips.type += 2 + rand(2);
        }
        if (rand(3) == 0) {
            if (large) outputText(player.modThickness(80, 8));
            else outputText(player.modThickness(80, 3));
        }
    }

    //Femminess
    public function pinkEgg(large:Boolean, player:Player):void {
        clearOutput();
        outputText("You devour the egg, momentarily sating your hunger.[pg]");
        if (!large)player.refillHunger(20);
        else player.refillHunger(60);
        if (player.blockingBodyTransformations()) {
            outputText("[pg]Your groin begins to tingle but as you are immunised to transformatives, nothing happens.");
            return;
        }
        if (!large) {
            //Remove a dick
            if (player.cocks.length > 0) {
                player.killCocks(1);
                outputText("[pg]");
            }
            //remove balls
            if (player.hasBalls()) {
                if (player.ballSize > 15) {
                    player.ballSize -= 8;
                    outputText("Your scrotum slowly shrinks, settling down at a MUCH smaller size.  <b>Your [balls] are much smaller.</b>[pg]");
                } else {
                    player.balls = 0;
                    player.ballSize = 1;
                    outputText("Your scrotum slowly shrinks, eventually disappearing entirely!  <b>You've lost your balls!</b>[pg]");
                }
            }
            //Fertility boost
            if (player.vaginas.length > 0 && player.fertility < 40) {
                outputText("You feel a tingle deep inside your body, just above your [vagina], as if you were becoming more fertile.[pg]");
                player.fertility += 5;
            }
        }
        //LARGE
        else {
            //Remove a dick
            if (player.cocks.length > 0) {
                player.killCocks(-1);
                outputText("[pg]");
            }
            if (player.hasBalls()) {
                player.balls = 0;
                player.ballSize = 1;
                outputText("Your scrotum slowly shrinks, eventually disappearing entirely!  <b>You've lost your balls!</b>[pg]");
            }
            //Fertility boost
            if (player.vaginas.length > 0 && player.fertility < 70) {
                outputText("You feel a powerful tingle deep inside your body, just above your [vagina]. Instinctively you know you have become more fertile.[pg]");
                player.fertility += 10;
            }
        }
        if (rand(3) == 0) {
            if (large) outputText(player.modFem(100, 8));
            else outputText(player.modFem(95, 3));
        }
    }

    //Maleness
    public function blueEgg(large:Boolean, player:Player):void {
        var temp2:Number = 0;
        var temp3:Number = 0;
        clearOutput();
        outputText("You devour the egg, momentarily sating your hunger.");
        if (!large)player.refillHunger(20);
        else player.refillHunger(60);
        if (player.blockingBodyTransformations()) {
            outputText("[pg]Your groin begins to tingle but as you are immunised to transformatives, nothing happens.");
            return;
        }
        if (!large) {
            //Kill pussies!
            if (player.vaginas.length > 0) {
                outputText("[pg]Your vagina clenches in pain, doubling you over.  You slip a hand down to check on it, only to feel the slit growing smaller and smaller until it disappears, taking your clit with it! <b> Your vagina is gone!</b>");
                player.clitLength = .25;
                player.removeVagina(0, 1);
            }
            //Dickz
            if (player.cocks.length > 0) {
                //Multiz
                if (player.cocks.length > 1) {
                    outputText("[pg]Your " + multiCockDescript() + " fill to full-size... and begin growing obscenely.");
                    var cockCount:int = player.cocks.length;
                    while (cockCount > 0) {
                        cockCount--;
                        temp2 = player.growCock(cockCount, rand(3) + 2);
                        temp3 = player.thickenCock(cockCount, 1);
                    }
                    player.lengthChange(temp2, player.cocks.length);
                    //Display the degree of thickness change.
                    if (temp3 >= 1) {
                        if (player.cocks.length == 1) outputText("[pg]Your [cocks] spreads rapidly, swelling an inch or more in girth, making it feel fat and floppy.");
                        else outputText("[pg]Your [cocks] spread rapidly, swelling as they grow an inch or more in girth, making them feel fat and floppy.");
                    }
                    if (temp3 <= .5) {
                        if (player.cocks.length > 1) outputText("[pg]Your [cocks] feel swollen and heavy. With a firm, but gentle, squeeze, you confirm your suspicions. They are definitely thicker.");
                        else outputText("[pg]Your [cocks] feels swollen and heavy. With a firm, but gentle, squeeze, you confirm your suspicions. It is definitely thicker.");
                    }
                    if (temp3 > .5 && temp2 < 1) {
                        if (player.cocks.length == 1) outputText("[pg]Your [cocks] seems to swell up, feeling heavier. You look down and watch it growing fatter as it thickens.");
                        if (player.cocks.length > 1) outputText("[pg]Your [cocks] seem to swell up, feeling heavier. You look down and watch them growing fatter as they thicken.");
                    }
                    dynStats("lus", 20, "scale", false);
                    player.addCurse("sen", 1, 1);
                    MutagenBonus("lib", 1);
                }
                //SINGLEZ
                if (player.cocks.length == 1) {
                    outputText("[pg]Your [cocks] fills to its normal size... and begins growing... ");
                    temp3 = player.thickenCock(0, 1);
                    temp2 = player.growCock(0, rand(3) + 2);
                    player.lengthChange(temp2, 1);
                    //Display the degree of thickness change.
                    if (temp3 >= 1) {
                        if (player.cocks.length == 1) outputText("  Your [cocks] spreads rapidly, swelling an inch or more in girth, making it feel fat and floppy.");
                        else outputText("  Your [cocks] spread rapidly, swelling as they grow an inch or more in girth, making them feel fat and floppy.");
                    }
                    if (temp3 <= .5) {
                        if (player.cocks.length > 1) outputText("  Your [cocks] feel swollen and heavy. With a firm, but gentle, squeeze, you confirm your suspicions. They are definitely thicker.");
                        else outputText("  Your [cocks] feels swollen and heavy. With a firm, but gentle, squeeze, you confirm your suspicions. It is definitely thicker.");
                    }
                    if (temp3 > .5 && temp2 < 1) {
                        if (player.cocks.length == 1) outputText("  Your [cocks] seems to swell up, feeling heavier. You look down and watch it growing fatter as it thickens.");
                        if (player.cocks.length > 1) outputText("  Your [cocks] seem to swell up, feeling heavier. You look down and watch them growing fatter as they thicken.");
                    }
                    dynStats("lus", 20, "scale", false);
                    player.addCurse("sen", 1, 1);
                    MutagenBonus("lib", 1);
                }
            }
        }
        //LARGE
        else {
            //New lines if changes
            if (player.bRows() > 1 || player.butt.type > 5 || player.hips.type > 5 || player.hasVagina()) outputText("[pg]");
            //Kill pussies!
            if (player.vaginas.length > 0) {
                outputText("Your vagina clenches in pain, doubling you over.  You slip a hand down to check on it, only to feel the slit growing smaller and smaller until it disappears, taking your clit with it![pg]");
                if (player.bRows() > 1 || player.butt.type > 5 || player.hips.type > 5) outputText("  ");
                player.clitLength = .25;
                player.removeVagina(0, 1);
            }
            //Kill extra boobages
            if (player.bRows() > 1) {
                outputText("Your back relaxes as extra weight vanishes from your chest.  <b>Your lowest " + breastDescript(player.bRows() - 1) + " have vanished.</b>");
                if (player.butt.type > 5 || player.hips.type > 5) outputText("  ");
                //Remove lowest row.
                player.removeBreastRow((player.bRows() - 1), 1);
            }
            //Ass/hips shrinkage!
            if (player.butt.type > 5) {
                outputText("Muscles firm and tone as you feel your [butt] become smaller and tighter.");
                if (player.hips.type > 5) outputText("  ");
                player.butt.type -= 2;
            }
            if (player.hips.type > 5) {
                outputText("Feeling the sudden burning of lactic acid in your [hips], you realize they have slimmed down and firmed up some.");
                player.hips.type -= 2;
            }
            //Shrink tits!
            if (player.biggestTitSize() > 0) {
                player.shrinkTits();
            }
            if (player.cocks.length > 0) {
                //Multiz
                if (player.cocks.length > 1) {
                    outputText("[pg]Your " + multiCockDescript() + " fill to full-size... and begin growing obscenely.  ");
                    cockCount = player.cocks.length;
                    while (cockCount > 0) {
                        cockCount--;
                        temp2 = player.growCock(cockCount, rand(3) + 5);
                        temp3 = player.thickenCock(cockCount, 1.5);
                    }
                    player.lengthChange(temp2, player.cocks.length);
                    //Display the degree of thickness change.
                    if (temp3 >= 1) {
                        if (player.cocks.length == 1) outputText("[pg]Your [cocks] spreads rapidly, swelling an inch or more in girth, making it feel fat and floppy.");
                        else outputText("[pg]Your [cocks] spread rapidly, swelling as they grow an inch or more in girth, making them feel fat and floppy.");
                    }
                    if (temp3 <= .5) {
                        if (player.cocks.length > 1) outputText("[pg]Your [cocks] feel swollen and heavy. With a firm, but gentle, squeeze, you confirm your suspicions. They are definitely thicker.");
                        else outputText("[pg]Your [cocks] feels swollen and heavy. With a firm, but gentle, squeeze, you confirm your suspicions. It is definitely thicker.");
                    }
                    if (temp3 > .5 && temp2 < 1) {
                        if (player.cocks.length == 1) outputText("[pg]Your [cocks] seems to swell up, feeling heavier. You look down and watch it growing fatter as it thickens.");
                        if (player.cocks.length > 1) outputText("[pg]Your [cocks] seem to swell up, feeling heavier. You look down and watch them growing fatter as they thicken.");
                    }
                    dynStats("lus", 20, "scale", false);
                    player.addCurse("sen", 1, 1);
                    MutagenBonus("lib", 1);
                }
                //SINGLEZ
                if (player.cocks.length == 1) {
                    outputText("[pg]Your [cocks] fills to its normal size... and begins growing...");
                    temp3 = player.thickenCock(0, 1.5);
                    temp2 = player.growCock(0, rand(3) + 5);
                    player.lengthChange(temp2, 1);
                    //Display the degree of thickness change.
                    if (temp3 >= 1) {
                        if (player.cocks.length == 1) outputText("  Your [cocks] spreads rapidly, swelling an inch or more in girth, making it feel fat and floppy.");
                        else outputText("  Your [cocks] spread rapidly, swelling as they grow an inch or more in girth, making them feel fat and floppy.");
                    }
                    if (temp3 <= .5) {
                        if (player.cocks.length > 1) outputText("  Your [cocks] feel swollen and heavy. With a firm, but gentle, squeeze, you confirm your suspicions. They are definitely thicker.");
                        else outputText("  Your [cocks] feels swollen and heavy. With a firm, but gentle, squeeze, you confirm your suspicions. It is definitely thicker.");
                    }
                    if (temp3 > .5 && temp2 < 1) {
                        if (player.cocks.length == 1) outputText("  Your [cocks] seems to swell up, feeling heavier. You look down and watch it growing fatter as it thickens.");
                        if (player.cocks.length > 1) outputText("  Your [cocks] seem to swell up, feeling heavier. You look down and watch them growing fatter as they thicken.");
                    }
                    dynStats("lus", 20, "scale", false);
                    player.addCurse("sen", 1, 1);
                    MutagenBonus("lib", 1);
                }
            }
        }
        if (rand(3) == 0) {
            if (large) outputText(player.modFem(0, 8));
            else outputText(player.modFem(5, 3));
        }
    }

    //Nipplezzzzz
    public function whiteEgg(large:Boolean, player:Player):void {
        clearOutput();
        outputText("You devour the egg, momentarily sating your hunger.");
        if (!large)player.refillHunger(20);
        else player.refillHunger(60);
        if (player.blockingBodyTransformations()) {
            outputText("[pg]Your nipples begin to tingle but as you are immunised to transformatives, nothing happens.");
            return;
        }
        if (!large) {
            //Grow nipples
            if (player.nippleLength < 3 && player.biggestTitSize() > 0) {
				if (player.armor.name == "nothing" && player.upperGarmentName == "nothing") outputText("[pg]Your nipples engorge and abruptly you realize they've gotten almost a quarter inch longer.");
				else outputText("[pg]Your nipples engorge, prodding hard against the inside of your "+(player.armor.name == "nothing" ? player.upperGarmentName : player.armor.name)+".  Abruptly you realize they've gotten almost a quarter inch longer.");
                player.nippleLength += .2;
                dynStats("lus", 15, "scale", false);
            }
        }
        //LARGE
        else {
            //Grow nipples
            if (player.nippleLength < 3 && player.biggestTitSize() > 0) {
                if (player.armor.name == "nothing" && player.upperGarmentName == "nothing") outputText("[pg]Your nipples engorge and abruptly you realize they've grown more than an additional quarter-inch.");
				else outputText("[pg]Your nipples engorge, prodding hard against the inside of your "+(player.armor.name == "nothing" ? player.upperGarmentName : player.armor.name)+".  Abruptly you realize they've grown more than an additional quarter-inch.");
                player.nippleLength += (rand(2) + 3) / 10;
                dynStats("lus", 15, "scale", false);
            }
            //NIPPLECUNTZZZ
            transformations.NipplesFuckable.applyEffect();
        }
    }

    public function blackRubberEgg(large:Boolean, player:Player):void {
        clearOutput();
        outputText("You devour the egg, momentarily sating your hunger.");
        if (!large)player.refillHunger(20);
        else player.refillHunger(60);
        if (player.blockingBodyTransformations()) {
            outputText("[pg]Your skin begins to tingle but as you are immunised to transformatives, nothing happens.");
            return;
        }
        //Small
        if (!large) {
            //Change skin to normal if not flawless!
            if ((player.skinAdj != "smooth" && player.skinAdj != "latex" && player.skinAdj != "rubber") || player.skinDesc != "skin") {
                outputText("[pg]Your [skin.type] tingles delightfully as it ");
                if (player.hasPlainSkinOnly()) outputText(" loses its blemishes, becoming flawless smooth skin.");
                else if (player.isFurCovered()) outputText(" falls out in clumps, revealing smooth skin underneath.");
                else if (player.isScaleCovered()) outputText(" begins dropping to the ground in a pile around you, revealing smooth skin underneath.");
                else outputText(" shifts and changes into flawless smooth skin.");
                player.skin.setBaseOnly({type: Skin.PLAIN, adj: "smooth"});
                if (player.skinColor == "rough gray") player.skinColor = "gray";
            }
            //chance of hair change
            else {
                //If hair isn't rubbery/latex yet
                if (player.hairColor.indexOf("rubbery") == -1 && player.hairColor.indexOf("latex-textured") == -1 && player.hairLength != 0) {
                    //if skin is already one...
                    if (player.skinDesc == "skin" && player.skinAdj == "rubber") {
                        outputText("[pg]Your scalp tingles and your [hair] thickens, the strands merging into ");
                        outputText(" thick rubbery hair.");
                        player.hairColor = "rubbery " + player.hairColor;
                        dynStats("cor", 2);
                    }
                    if (player.skinDesc == "skin" && player.skinAdj == "latex") {
                        outputText("[pg]Your scalp tingles and your [hair] thickens, the strands merging into ");
                        outputText(" shiny latex hair.");
                        player.hairColor = "latex-textured " + player.hairColor;
                        dynStats("cor", 2);
                    }
                }
            }
        }
        //Large
        else {
            //Change skin to latex if smooth.
            if (player.skinDesc == "skin" && player.skinAdj == "smooth") {
                outputText("[pg]Your already flawless smooth skin begins to tingle as it changes again.  It becomes shinier as its texture changes subtly.  You gasp as you touch yourself and realize your skin has become ");
                if (rand(2) == 0) {
                    player.skinDesc = "skin";
                    player.skinAdj = "latex";
                    outputText("a layer of pure latex.  ");
                } else {
                    player.skinDesc = "skin";
                    player.skinAdj = "rubber";
                    outputText("a layer of sensitive rubber.  ");
                }
                flags[kFLAGS.PC_KNOWS_ABOUT_BLACK_EGGS] = 1;
                if (player.cor < 66) outputText("You feel like some kind of freak.");
                else outputText("You feel like some kind of sexy [skin.type] love-doll.");
                dynStats("lus", 10, "cor", 2);
                player.addCurse("spe", 3, 1);
                player.addCurse("sen", 8, 1);
            }
            //Change skin to normal if not flawless!
            if (!InCollection(player.skinAdj, "smooth", "latex", "rubber") || player.skinDesc != "skin") {
                outputText("[pg]Your [skin.type] tingles delightfully as it ");
                if (player.hasPlainSkinOnly()) outputText(" loses its blemishes, becoming flawless smooth skin.");
                else if (player.isFurCovered()) outputText(" falls out in clumps, revealing smooth skin underneath.");
                else if (player.isScaleCovered()) outputText(" begins dropping to the ground in a pile around you, revealing smooth skin underneath.");
                else outputText(" shifts and changes into flawless smooth skin.");
                player.skin.setBaseOnly({type: Skin.PLAIN, adj: "smooth"});
                if (player.skinColor == "rough gray") player.skinColor = "gray";
            }
            //chance of hair change
            else {
                //If hair isn't rubbery/latex yet
                if (player.hairColor.indexOf("rubbery") == -1 && player.hairColor.indexOf("latex-textured") && player.hairLength != 0) {
                    //if skin is already one...
                    if (player.skinAdj == "rubber" && player.skinDesc == "skin") {
                        outputText("[pg]Your scalp tingles and your [hair] thickens, the strands merging into ");
                        outputText(" thick rubbery hair.");
                        player.hairColor = "rubbery " + player.hairColor;
                        dynStats("cor", 2);
                    }
                    if (player.skinAdj == "latex" && player.skinDesc == "skin") {
                        outputText("[pg]Your scalp tingles and your [hair] thickens, the strands merging into ");
                        outputText(" shiny latex hair.");
                        player.hairColor = "latex-textured " + player.hairColor;
                        dynStats("cor", 2);
                    }
                }
            }
        }
    }

    public function useMarbleMilk(player:Player):void {
        player.slimeFeed();
        //Bottle of Marble's milk - item
        //Description: "A clear bottle of milk from Marble's breasts.  It smells delicious.  "
        clearOutput();
        //Text for when the player uses the bottle:
        //[before the player is addicted, Addiction < 30]
        if (player.statusEffectv2(StatusEffects.Marble) < 30 && player.statusEffectv3(StatusEffects.Marble) == 0) outputText("You gulp down the bottle's contents; Marble makes some good tasting milk.[pg]");
        //[before the player is addicted, Addiction < 50]
        else if (player.statusEffectv3(StatusEffects.Marble) <= 0) outputText("You gulp down the bottle's contents; Marble makes some really good tasting milk.[pg]");
        else if (player.statusEffectv3(StatusEffects.Marble) > 0) {
            //[player is completely addicted]
            if (player.hasPerk(PerkLib.MarblesMilk)) outputText("You gulp down the bottle's contents; it's no substitute for the real thing, but it's a nice pick me up.[pg]");
            else {
                //[player is no longer addicted]
                if (player.hasPerk(PerkLib.MarbleResistant) || player.fiendishMetabolismNFER()) outputText("You gulp down the bottle's contents; you're careful not to get too attached to the taste.[pg]");
                //[player is addicted]
                else outputText("You gulp down the bottle's contents; you really needed that.[pg]");
            }
        }
        //Increases addiction by 5, up to a max of 50 before the player becomes addicted, no max after the player is addicted.
        SceneLib.marbleScene.marbleStatusChange(0, 5);
        //Does not apply the 'Marble's Milk' effect
        //Purge withdrawal
        if (player.hasStatusEffect(StatusEffects.MarbleWithdrawl)) {
            player.removeStatusEffect(StatusEffects.MarbleWithdrawl);
            MutagenBonus("tou", 5);
            MutagenBonus("int", 5);
            outputText("You no longer feel the symptoms of withdrawal.[pg]");
        }
        //Heals the player 70-100 health
        HPChange((70 + rand(31) * (1 + player.newGamePlusMod()) * player.postConsumptionMlt()), true);
        //Restores a portion of fatigue (once implemented)
        EngineCore.changeFatigue(-Math.round(25*player.postConsumptionMlt()));
        //If the player is addicted, this item negates the withdrawal effects for a few hours (suggest 6), there will need to be a check here to make sure the withdrawal effect doesn't reactivate while the player is under the effect of 'Marble's Milk'.
        if (player.hasStatusEffect(StatusEffects.BottledMilk)) {
            player.addStatusValue(StatusEffects.BottledMilk, 1, (6 + rand(6)));
        } else player.createStatusEffect(StatusEffects.BottledMilk, 12, 0, 0, 0);
		if (player.perkv1(IMutationsLib.DisplacerMetabolismIM) >= 1) player.displacerFeedFromBottle();
        player.refillHunger(20);
    }

    /*Purified LaBova:
     This will be one of the items that the player will have to give Marble to purify her, but there is a limit on how much she can be purified in this way.
     Effects on the player:
     Mostly the same, but without animal transforms, corruption, and lower limits on body changes
     Hips and ass cap at half the value for LaBova
     Nipple growth caps at 1 inch
     Breasts cap at E or DD cup
     Raises lactation to a relatively low level, reduces high levels: \"Your breasts suddenly feel less full, it seems you aren't lactating at quite the level you where.\"  OR  \"The insides of your breasts suddenly feel bloated.  There is a spray of milk from them, and they settle closer to a more natural level of lactation.\"
     Does not apply the addictive quality
     If the player has the addictive quality, this item can remove that effect

     Enhanced LaBova:
     Something that the player can either make or find later; put it in whenever you want, or make your own item.  This is just a possible suggestion.  If it is given to Marble, she only gains the quad nipples.
     Effects on the player
     Mostly the same, but some of the effects can be more pronounced.  Ie, more str gain from one dose, or more breast growth.
     If the player's nipples are larger than 1 inch in length, this item is guaranteed to give them quad nipples.  This applies to all their breasts; seems like it ould be a good compromise on whether or not cowgirls should have 4 breasts.
     Very small chance to increase fertility (normally this increase would only happen when the player forces a creature to drink their milk).
     */
    public function laBova(tainted:Boolean, enhanced:Boolean, player:Player):void {
        player.slimeFeed();
        //Changes done
        var changes:Number = 0;
        //Change limit
        var changeLimit:Number = 2;
        if (rand(2) == 0) changeLimit++;
        if (rand(2) == 0) changeLimit++;
        if (rand(2) == 0) changeLimit++;
        changeLimit += player.additionalTransformationChances;
        if (enhanced) changeLimit += 2;
        //Temporary storage
        var temp:Number = 0;
        var temp2:Number = 0;
        var temp3:Number = 0;
        //LaBova:
        //ItemDesc: "A bottle containing a misty fluid with a grainy texture, it has a long neck and a ball-like base.  The label has a stylized picture of a well endowed cowgirl nursing two guys while they jerk themselves off.  "
        //ItemUseText:
        clearOutput();
        outputText("You drink the ");
        if (enhanced) outputText("Pro Bova");
        else outputText("La Bova");
        outputText(".  The drink has an odd texture, but is very sweet.  It has a slight aftertaste of milk.");
        //Possible Item Effects:
        //STATS
        //Increase player str:
        if (changes < changeLimit && rand(3) == 0 && MutagenBonus("str", 2)) {
            if (rand(2) == 0) outputText("[pg]There is a slight pain as you feel your muscles shift somewhat.  Their appearance does not change much, but you feel much stronger.");
            else outputText("[pg]You feel your muscles tighten and clench as they become slightly more pronounced.");
            changes++;
        }
        //Increase player tou:
        if (changes < changeLimit && rand(3) == 0 && MutagenBonus("tou", 3)) {
            if (rand(2) == 0) outputText("[pg]You feel your insides toughening up; it feels like you could stand up to almost any blow.");
            else outputText("[pg]Your bones and joints feel sore for a moment, and before long you realize they've gotten more durable.");
            changes++;
        }
        //Decrease player spd if it is over 30:
        if (changes < changeLimit && rand(3) == 0 && MutagenBonus("spe", 3)) {
            outputText("[pg]The body mass you've gained is making your movements more sluggish.");
            changes++;
        }
        //Increase Corr, up to a max of 50.
        if (tainted && player.cor < 50)
            dynStats("cor", (50 - player.cor) / 10);
        if (player.blockingBodyTransformations()) changeLimit = 0;
        //Sex bits - Duderiffic
        if (changes < changeLimit && player.cocks.length > 0 && rand(2) == 0 && !flags[kFLAGS.HYPER_HAPPY]) {
            //If the player has at least one dick, decrease the size of each slightly,
            outputText("[pg]");
            temp = 0;
            temp2 = player.cocks.length;
            temp3 = 0;
            //Find biggest cock
            while (temp2 > 0) {
                temp2--;
                if (player.cocks[temp].cockLength <= player.cocks[temp2].cockLength) temp = temp2;
            }
            //Shrink said cock
            if (player.cocks[temp].cockLength < 6 && player.cocks[temp].cockLength >= 2.9) {
                player.cocks[temp].cockLength -= .5;
                temp3 -= .5;
            }
            temp3 += player.growCock(temp, (rand(3) + 1) * -1);
            player.lengthChange(temp3, 1);
            if (player.cocks[temp].cockLength < 2) {
                transformations.CockToVagina().applyEffect();
            }
            //if the last of the player's dicks are eliminated this way, they gain a virgin vagina;
            if (player.cocks.length == 0 && !player.hasVagina()) {
                transformations.VaginaHuman().applyEffect();
                changes++;
                dynStats("lus", 10, "scale", false);
            }
        }
        //Sex bits - girly
        var boobsGrew:Boolean = false;
        //Increase player's breast size, if they are HH or bigger
        //do not increase size, but do the other actions:
        if (((tainted? player.biggestTitSize() <= 11 : player.biggestTitSize() <= 5)) && changes < changeLimit && (rand(3) == 0 || enhanced)) {
            if (rand(2) == 0) outputText("[pg]Your [breasts] tingle for a moment before becoming larger.");
            else outputText("[pg]You feel a little weight added to your chest as your [breasts] seem to inflate and settle in a larger size.");
            player.growTits(1 + rand(3), 1, false, 3);
            changes++;
            player.addCurse("sen", 1, 1);
            boobsGrew = true;
        }

        //Remove special hairs
        if (changes < changeLimit && player.hairType != Hair.NORMAL && rand(3) == 0) {
		    outputText("[pg]");
		    transformations.HairHuman.applyEffect();
            changes++;
        }

        //If breasts are D or bigger and are not lactating, they also start lactating:
        if (player.biggestTitSize() >= 4 && !player.isLactating() && changes < changeLimit && (rand(3) == 0 || boobsGrew || enhanced)) {
            outputText("[pg]You gasp as your [breasts] feel like they are filling up with something.  Within moments, a drop of milk leaks from your [breasts]; <b> you are now lactating</b>.");
            player.breastRows[0].lactationMultiplier = 1.25;
            changes++;
            player.addCurse("sen", 1, 1);
        }
        //Quad nipples and other 'special enhanced things.
        if (changes < changeLimit && enhanced) {
            //QUAD DAMAGE!
            if (transformations.NipplesPerBreastFour.isPossible()) {
                changes++;
                transformations.NipplesPerBreastFour.applyEffect();
            } else if (player.isLactating()) {
                if (rand(2) == 0) outputText("[pg]A wave of pleasure passes through your chest as your [breasts] start leaking milk from a massive jump in production.");
                else outputText("[pg]Something shifts inside your [breasts] and they feel MUCH fuller and riper.  You know that you've started producing much more milk.");
                player.boostLactation(2.5);
                if (tainted? player.nippleLength < 1.5 : player.nippleLength < 1) {
                    outputText("  Your [nipples] swell up, growing larger to accommodate your increased milk flow.");
                    player.nippleLength += .25;
                    player.addCurse("sen", 1, 1);
                }
                changes++;
            }
        }
        //If breasts are already lactating and the player is not lactating beyond a reasonable level, they start lactating more:
        else {
            if (tainted && player.breastRows[0].lactationMultiplier > 1 && player.breastRows[0].lactationMultiplier < 5 && changes < changeLimit && (rand(3) == 0 || enhanced)) {
                if (rand(2) == 0) outputText("[pg]A wave of pleasure passes through your chest as your [breasts] start producing more milk.");
                else outputText("[pg]Something shifts inside your [breasts] and they feel fuller and riper.  You know that you've started producing more milk.");
                player.boostLactation(0.75);
                if ((player.nippleLength < 1.5 && tainted) || (!tainted && player.nippleLength < 1)) {
                    outputText("  Your " + nippleDescript(0) + "s swell up, growing larger to accommodate your increased milk flow.");
                    player.nippleLength += .25;
                    player.addCurse("sen", 1, 1);
                }
                changes++;
            }
            if (!tainted) {
                if (player.breastRows[0].lactationMultiplier > 1 && player.breastRows[0].lactationMultiplier < 3.2 && changes < changeLimit && rand(3) == 0) {
                    if (rand(2) == 0) outputText("[pg]A wave of pleasure passes through your chest as your [breasts] start producing more milk.");
                    else outputText("[pg]Something shifts inside your [breasts] and they feel fuller and riper.  You know that you've started producing more milk.");
                    player.boostLactation(0.75);
                    if ((player.nippleLength < 1.5 && tainted) || (!tainted && player.nippleLength < 1)) {
                        outputText("  Your " + nippleDescript(0) + "s swell up, growing larger to accommodate your increased milk flow.");
                        player.nippleLength += .25;
                        player.addCurse("sen", 1, 1);
                    }
                    changes++;
                }
                if ((player.breastRows[0].lactationMultiplier > 2 && player.hasStatusEffect(StatusEffects.Feeder)) || player.breastRows[0].lactationMultiplier > 5) {
                    if (rand(2) == 0) outputText("[pg]Your breasts suddenly feel less full, it seems you aren't lactating at quite the level you were.");
                    else outputText("[pg]The insides of your breasts suddenly feel bloated.  There is a spray of milk from them, and they settle closer to a more natural level of lactation.");
                    changes++;
                    player.addCurse("sen", 1, 1);
                    player.boostLactation(-1);
                }
            }
        }
        //If breasts are lactating at a fair level
        //and the player has not received this status,
        //apply an effect where the player really wants
        //to give their milk to other creatures
        //(capable of getting them addicted):
        if (changes < changeLimit && !player.hasStatusEffect(StatusEffects.Feeder) && player.biggestLactation() >= 3 && rand(2) == 0 && player.biggestTitSize() >= 5 && player.cor >= (35-player.corruptionTolerance)) {
            outputText("[pg]You start to feel a strange desire to give your milk to other creatures.  For some reason, you know it will be very satisfying.[pg]<b>(You have gained the 'Feeder' perk!)</b>");
            player.createStatusEffect(StatusEffects.Feeder, 0, 0, 0, 0);
            player.createPerk(PerkLib.Feeder, 0, 0, 0, 0);
            changes++;
        }
        //TODO:UNFINISHED
        //If player has addictive quality and drinks pure version, removes addictive quality.
        //if the player has a vagina and it is tight, it loosens.
        if (player.hasVagina()) {
            if (player.vaginas[0].vaginalLooseness < VaginaClass.LOOSENESS_LOOSE && changes < changeLimit && rand(2) == 0) {
                outputText("[pg]You feel a relaxing sensation in your groin.  On further inspection you discover your [vagina] has somehow relaxed, permanently loosening.");
                player.vaginas[0].vaginalLooseness++;
                //Cunt Stretched used to determine how long since last enlargement
                if (!player.hasStatusEffect(StatusEffects.CuntStretched)) player.createStatusEffect(StatusEffects.CuntStretched, 0, 0, 0, 0);
                //Reset the timer on it to 0 when restretched.
                else player.changeStatusValue(StatusEffects.CuntStretched, 1, 0);
                player.vaginas[0].vaginalLooseness++;
                changes++;
                dynStats("lus", 10, "scale", false);
            }
        }
        //General Appearance (Tail -> Ears -> Paws(fur stripper) -> Face -> Horns
        //Give the player a bovine tail, same as the minotaur
        if (tainted && player.tailType != Tail.COW && changes < changeLimit && rand(3) == 0) {
            outputText("[pg]");
            transformations.TailCow.applyEffect();
            changes++;
        }
        //Give the player bovine ears, same as the minotaur
        if (tainted && player.ears.type != Ears.COW && changes < changeLimit && rand(4) == 0 && player.tailType == Tail.COW) {
            outputText("[pg]");
			transformations.EarsCow.applyEffect();
            changes++;
        }
        //If the player is under 7 feet in height, increase their height, similar to the minotaur
        if (((enhanced && player.tallness < 96) || player.tallness < 84) && changes < changeLimit && rand(2) == 0) {
            temp = rand(5) + 3;
            //Slow rate of growth near ceiling
            if (player.tallness > 74) temp = Math.floor(temp / 2);
            //Never 0
            if (temp == 0) temp = 1;
            //Flavor texts.  Flavored like 1950's cigarettes. Yum.
            if (temp < 5) outputText("[pg]You shift uncomfortably as you realize you feel off balance.  Gazing down, you realize you have grown SLIGHTLY taller.");
            if (temp >= 5 && temp < 7) outputText("[pg]You feel dizzy and slightly off, but quickly realize it's due to a sudden increase in height.");
            if (temp == 7) outputText("[pg]Staggering forwards, you clutch at your head dizzily.  You spend a moment getting your balance, and stand up, feeling noticeably taller.");
            player.tallness += temp;
            changes++;
        }
        //Give the player hoofs, if the player already has hoofs STRIP FUR
        if (tainted && player.lowerBody != LowerBody.CLOVEN_HOOFED && player.ears.type == Ears.COW) {
            if (changes < changeLimit && rand(3) == 0) {
                outputText("[pg]");
                transformations.LowerBodyClovenHoofed().applyEffect();
                dynStats("cor", 0);
                changes++;
            }
        }
        //Give the player bovine horns, or increase their size, same as the minotaur
        //New horns or expanding mino horns
        if (tainted && changes < changeLimit && rand(3) == 0 && player.lowerBody == LowerBody.HOOFED) {
            //Get bigger or change horns
            if (player.horns.type == Horns.COW_MINOTAUR || player.horns.type == Horns.NONE) {
                //Get bigger if player has horns
                if (player.horns.type == Horns.COW_MINOTAUR) {
                    if (player.horns.count < 5) {
                        //Fems horns don't get bigger.
                        outputText("[pg]Your small horns get a bit bigger, stopping as medium-sized nubs.");
                        player.horns.count += 1 + rand(2);
                        changes++;
                    }
                }
                //If no horns yet..
                if (player.horns.type == Horns.NONE || player.horns.count == 0) {
                    outputText("[pg]");
                    transformations.HornsCowMinotaur.applyEffect();
                    changes++;
                }
                //TF other horns
                if (player.horns.type != Horns.NONE && player.horns.type != Horns.COW_MINOTAUR && player.horns.type != Horns.ORCHID && player.horns.count > 0) {
                    outputText("[pg]");
                    transformations.HornsCowMinotaur.applyEffect();
                }
            }
            //Not mino horns, change to cow-horns
            if ((player.horns.type == Horns.DEMON || player.horns.type > Horns.COW_MINOTAUR) && player.horns.type != Horns.ORCHID) {
                outputText("[pg]");
                transformations.HornsCowMinotaur.applyEffect();
                changes++;
            }
        }
        if (changes < changeLimit && !InCollection(player.arms.type, Arms.HUMAN) && rand(4) == 0) {
            outputText("[pg]");
            transformations.ArmsHuman.applyEffect();
            changes++;
        }
        //If the player's face is non-human, they gain a human face
        if (!enhanced && player.horns.type != Horns.COW_MINOTAUR && player.faceType != Face.HUMAN && changes < changeLimit && rand(4) == 0) {
            //Remove face before fur!
            outputText("[pg]");
            transformations.FaceHuman.applyEffect();
            changes++;
        }
        //Cow hair oh my!
        if (changes < changeLimit && enhanced && (player.hairColor != "snow white")) {
            outputText("[pg]");
            transformations.HairChangeColor(["snow white"]).applyEffect();
            transformations.HairCow.applyEffect();
            outputText("[pg]");
        }
        //enhanced get shitty fur
        if (changes < changeLimit && enhanced && (player.skinDesc != "fur" || player.furColor != "black and white spotted") && player.horns.type != Horns.COW_MINOTAUR) {
            outputText("[pg]");
            transformations.HairChangeColor(["White"]).applyEffect();
            transformations.HairCow.applyEffect();
            outputText("[pg]");
            transformations.SkinFur(Skin.COVERAGE_COMPLETE, {color: "black", color2: "white", pattern: Skin.PATTERN_SPOTTED}).applyEffect();
        }
        //if enhanced to probova give a shitty cow face
        else if (changes < changeLimit && enhanced && player.faceType != Face.COW_MINOTAUR) {
            outputText("[pg]");
            transformations.FaceCowMinotaur.applyEffect();
            changes++;
        }
        //Increase the size of the player's hips, if they are not already childbearing or larger
        if (rand(2) == 0 && player.hips.type < 15 && changes < changeLimit) {
            if (!tainted && player.hips.type < 8 || tainted) {
                outputText("[pg]You stumble as you feel the bones in your hips grinding, expanding your hips noticeably.");
                player.hips.type += 1 + rand(4);
                changes++;
            }
        }
        // Remove gills
        if (rand(4) == 0 && player.hasGills() && changes < changeLimit) {
            outputText("[pg]");
            transformations.GillsNone.applyEffect();
            changes++;
        }

        //Increase the size of the player's ass (less likely then hips), if it is not already somewhat big
        if (rand(2) == 0 && player.butt.type < 13 && changes < changeLimit) {
            if (!tainted && player.butt.type < 8 || tainted) {
                outputText("[pg]A sensation of being unbalanced makes it difficult to walk.  You pause, paying careful attention to your new center of gravity before understanding dawns on you - your ass has grown!");
                player.butt.type += 1 + rand(2);
                changes++;
            }
        }
        //Nipples Turn Back:
        if (player.hasStatusEffect(StatusEffects.BlackNipples) && changes < changeLimit && rand(3) == 0) {
            transformations.NipplesNoColor.applyEffect();
            changes++;
        }
        //Debugcunt
        if (changes < changeLimit && rand(3) == 0 && (player.vaginaType() == 5 || player.vaginaType() == 6) && player.hasVagina()) {
            transformations.VaginaHuman().applyEffect();
            changes++;
        }
        if (changes < changeLimit && rand(2) == 0) outputText(player.modFem(79, 3));
        if (changes < changeLimit && rand(2) == 0) outputText(player.modThickness(70, 4));
        if (changes < changeLimit && rand(2) == 0) outputText(player.modTone(10, 5));
        player.refillHunger(20);
    }

    public function blackPolarMidnight(player:Player):void {
        clearOutput();
        outputText("You open the small scroll, and discover it to be an instructional scroll on the use of grey magic.  Most of it is filled with generic information about grey magic - how it is drawn from both mental focus and emotions (typically lust), is difficult to use when tired and too little or too much aroused, and is used to at the same time create or control energy and affect bodies or emotions to create final effect.  In no time at all, you've read the whole thing, but it disappears into thin air before you can put it away.");
        outputText("[pg]You blink in surprise, assaulted by the knowledge of a <b>new spell: Polar Midnight.</b>");
        player.createStatusEffect(StatusEffects.KnowsPolarMidnight, 0, 0, 0, 0);
    }

    public function whiteMeteorShower(player:Player):void {
        clearOutput();
        outputText("You open the small tome, and discover it to be an instructional tome on the use of grey magic.  Most of it is filled with generic information about grey magic - how it is drawn from both mental focus and emotions (typically lust), is difficult to use when tired and too little or too much aroused, and is used to at the same time create or control energy and affect bodies or emotions to create final effect.  In no time at all, you've read the whole thing, but it disappears into thin air before you can put it away.");
        outputText("[pg]You blink in surprise, assaulted by the knowledge of a <b>new spell: Meteor Shower.</b>");
        player.createStatusEffect(StatusEffects.KnowsMeteorShower, 0, 0, 0, 0);
    }

    public function lustDraft(fuck:Boolean, player:Player):void {
        player.slimeFeed();
        clearOutput();
        outputText("You drink the ");
        if (fuck) outputText("red");
        else outputText("pink");
        outputText(" potion, and its unnatural warmth immediately flows to your groin.");
        dynStats("lus", Math.round((30 + rand(player.lib / 10))*player.postConsumptionMlt()), "scale", false);
        //Heat/Rut for those that can have them if "fuck draft"
        if (fuck) {
            var choices:Array = [];
            //effects: heat, rut, anal, vag looseness
            if (player.hasVagina() && !player.isPregnant()) choices.push(1);
            if (player.hasCock()) choices.push(2);
            if (player.hasVagina() && player.vaginas[0].vaginalLooseness < VaginaClass.LOOSENESS_LEVEL_CLOWN_CAR) choices.push(3);
            if (player.ass.analLooseness < AssClass.LOOSENESS_GAPING) choices.push(4);
            if (choices.length == 0 || rand(4) < choices.length) choices.push(0); //no effects
            switch(choices[rand(choices.length)]) {
                case 1:
                    player.goIntoHeat(true, 2);
                    break;
                case 2:
                    player.goIntoRut(true);
                    break;
                case 3:
                    outputText("\n\nThe feeling concentrates inside your [vagina], and you moan quietly as you feel the ever-increasing warmth. You want to insert something in it, and you're sure that you can take much bigger cocks than before.  <b>Your pussy is now a bit looser!</b>"); //MOAR
                    ++player.vaginas[0].vaginalLooseness;
                    break;
                case 4:
                    outputText("\n\nThe moment you start to think the feeling is finally receding from your genitals, you suddenly feel the heat inside your [butt]. After touching it with your hand, you have a feeling that the [asshole] has grown slightly wider than before. Seems like you'll be better at anal sex now, whether you want it or not.  <b>Your ass is now a bit looser!</b>"); //MOAR
                    ++player.ass.analLooseness;
                    break;
                default:
                    outputText("\n\nTrying to hold back your arousal, you don't notice anything else... Perhaps the fluid hasn't affected you too much this time. But it feels even better, isn't it?"); //MOAR
                    dynStats("lus", Math.round(30*player.postConsumptionMlt()), "scale", true); //MOAR
                    break;
            }
        }
        //ORGAZMO
        if (player.lust >= player.maxOverLust() && !CoC.instance.inCombat) {
            outputText("[pg]The arousal from the potion overwhelms your senses and causes you to spontaneously orgasm.  You rip off your [armor] and look down as your ");
            if (player.cocks.length > 0) {
                outputText(multiCockDescriptLight() + " erupts in front of you, liberally spraying the ground around you");
            }
            if (player.cocks.length > 0 && player.vaginas.length > 0) {
                outputText(". At the same time your ");
            }
            if (player.vaginas.length > 0) {
                outputText(vaginaDescript() + " soaks your thighs");
            }
            if (player.gender == 0) outputText("body begins to quiver with orgasmic bliss");
            if (player.hasPerk(PerkLib.ElectrifiedDesire) || player.hasStatusEffect(StatusEffects.RaijuLightningStatus)) outputText(" with charged, glowing, plasma");
            outputText(".  Once you've had a chance to calm down, you notice that the explosion of pleasure you just experienced has rocked you to your core.  You are a little hornier than you were before.");
            //increase player libido, and maybe sensitivity too?
            player.orgasm();
            player.addCurse("sen", 1, 1);
            MutagenBonus("lib", 2);
            if (player.hasStatusEffect(StatusEffects.RaijuLightningStatus)) player.addStatusValue(StatusEffects.RaijuLightningStatus, 1, 24);
        }
        if (player.lust > player.maxOverLust()) player.lust = player.maxOverLust();
        outputText("[pg]");
        player.refillHunger(5);
    }

	public function numbCandies(player:Player):void {
		clearOutput();
        outputText("You pop open the package of numb candies and dump it into your waiting mouth.  The strange candies fizzes and pops, leaving the nerves on your tongue feeling a bit deadened as you swallow the sweet mess.");
		if (player.lust >= 33) {
			outputText("\n\nThe numbness spreads through your body, bringing with it a sense of calm that seems to muffle your sexual urges.");
			player.lust -= 10 + rand(20);
		}
		if (player.inHeat || player.inRut) {
			outputText("\n\nAs the fizzing of the candy slowly dissipates, you can feel the effects of your carnal desires begin to fade as well.");
			if (player.hasStatusEffect(StatusEffects.Heat)) {
				if (player.statusEffectv3(StatusEffects.Heat) > 24) player.addStatusValue(StatusEffects.Heat, 3, -24);
				else {
					var heatR:Number = player.statusEffectv3(StatusEffects.Heat);
					player.addStatusValue(StatusEffects.Heat, 3, -(heatR-1));
				}
			}
			if (player.hasStatusEffect(StatusEffects.Rut)) {
				if (player.statusEffectv3(StatusEffects.Rut) > 24) player.addStatusValue(StatusEffects.Rut, 3, -24);
				else {
					var rutR:Number = player.statusEffectv3(StatusEffects.Rut);
					player.addStatusValue(StatusEffects.Rut, 3, -(rutR-1));
				}
			}
		}
	}

    public function gremlinBeer(player:Player):void {
        player.slimeFeed();
        var changes:Number = 0;
        var changeLimit:Number = 2;
        if (rand(2) == 0) changeLimit++;
        if (rand(2) == 0) changeLimit++;
        if (rand(2) == 0) changeLimit++;
        if (rand(2) == 0) changeLimit++;
        changeLimit += player.additionalTransformationChances;
        //Temporary storage
		var temp:Number = 0;
		var temp2:Number = 0;
		clearOutput();
        outputText("Whoa, it definitely tasted as bad as it smelled, but hey, it's not like you're drinking this disgusting concoction for fun right? Or maybe you are?");
		DrunkenPowerEmpowerIfPossible();
		AelfwineEmpowerIfPossible();
        dynStats("lus", Math.round(15*player.postConsumptionMlt()), "scale", false);
        dynStats("cor", 2);
        //Less strong
        if (player.str > 50 && rand(3) == 0 && changes < changeLimit) {
            player.addCurse("str", 1, 1);
            if (player.str > 70) player.addCurse("str", 1, 1);
            if (player.str > 90) player.addCurse("str", 2, 1);
            outputText("[pg]You feel a little weaker, but maybe it's just the alcohol.");
            changes++;
        }
        ///Less tough
        if (player.tou > 50 && rand(3) == 0 && changes < changeLimit) {
            outputText("[pg]Giggling, you poke yourself, which only makes you giggle harder when you realize how much softer you feel.");
            player.addCurse("tou", 1, 1);
            if (player.tou > 70) player.addCurse("tou", 1, 1);
            if (player.tou > 90) player.addCurse("tou", 2, 1);
            changes++;
        }
        //Speed boost
        if (rand(3) == 0 && changes < changeLimit && MutagenBonus("spe", 1 + rand(2))) {
            outputText("[pg]You feel like dancing, and stumble as your legs react more quickly than you'd think.  Is the alcohol slowing you down or are you really faster?  You take a step and nearly faceplant as you go off balance.  It's definitely both.");
            changes++;
        }
        if (player.blockingBodyTransformations()) changeLimit = 0;
        //Shrink
        if (rand(2) == 0 && player.tallness > 42) {
            changes++;
            outputText("[pg]The world spins, and not just from the strength of the drink!  Your viewpoint is closer to the ground.  How fun!");
            player.tallness -= (1 + rand(5));
        }
        //Nipples Turn Back:
        if (player.hasStatusEffect(StatusEffects.BlackNipples) && changes < changeLimit && rand(3) == 0) {
            transformations.NipplesNoColor.applyEffect();
            changes++;
        }
        //SEXYTIEMS
        //Multidick killa!
        if (player.cocks.length > 1 && rand(3) == 0 && changes < changeLimit) {
            outputText("[pg]");
            player.killCocks(1);
            changes++;
        }
        //Shrink primary dick to no longer than 12 inches
        else if (player.cocks.length == 1 && rand(2) == 0 && changes < changeLimit && !flags[kFLAGS.HYPER_HAPPY]) {
            if (player.cocks[0].cockLength > 12) {
                changes++;
                var temp3:Number = 0;
                outputText("[pg]");
                //Shrink said cock
                if (player.cocks[0].cockLength < 6 && player.cocks[0].cockLength >= 2.9) {
                    player.cocks[0].cockLength -= .5;
                    temp3 -= .5;
                }
                temp3 += player.growCock(0, (rand(3) + 1) * -1);
                player.lengthChange(temp3, 1);
            }
        }
        //Debugcunt
        if (changes < changeLimit && rand(3) == 0 && (player.vaginaType() == 5 || player.vaginaType() == 6) && player.hasVagina()) {
            transformations.VaginaHuman().applyEffect();
            changes++;
        }
        if (changes < changeLimit && rand(4) == 0 && ((player.ass.analWetness > 0 && !player.hasPerk(PerkLib.MaraesGiftButtslut)) || player.ass.analWetness > 1)) {
            outputText("[pg]You feel a tightening up in your colon and your [asshole] sucks into itself.  You feel sharp pain at first but that thankfully fades.  Your ass seems to have dried and tightened up.");
            player.ass.analWetness--;
            if (player.ass.analLooseness > 1) player.ass.analLooseness--;
            changes++;
        }
        //Boost vaginal capacity without gaping
        if (changes < changeLimit && rand(3) == 0 && player.hasVagina() && player.statusEffectv1(StatusEffects.BonusVCapacity) < 40) {
            if (!player.hasStatusEffect(StatusEffects.BonusVCapacity)) player.createStatusEffect(StatusEffects.BonusVCapacity, 0, 0, 0, 0);
            player.addStatusValue(StatusEffects.BonusVCapacity, 1, 5);
            outputText("[pg]There is a sudden... emptiness within your [vagina].  Somehow you know you could accommodate even larger... insertions.");
            changes++;
        }
        //Boost fertility
        if (changes < changeLimit && rand(4) == 0 && player.fertility < 40 && player.hasVagina()) {
            player.fertility += 2 + rand(5);
            changes++;
            outputText("[pg]You feel strange.  Fertile... somehow.  You don't know how else to think of it, but you're ready to be a mother.");
        }
		//Shrink boobages till they are normal
		if (rand(2) == 0 && changes < changeLimit && player.breastRows.length > 0) {
			//Single row
			if (player.breastRows.length == 1) {
				//Shrink if bigger than B cups
				if (player.breastRows[0].breastRating > 1) {
					temp = 1;
					player.breastRows[0].breastRating--;
					//Shrink again if huuuuge
					if (player.breastRows[0].breastRating > 8) {
						temp++;
						player.breastRows[0].breastRating--;
					}
					//Talk about shrinkage
					outputText("\n\nTo your surprise you feel like your relative view increased. That's when you realise your breast has deflated sightly. Measuring them you conclude they are now " + player.breastCup(0) + "s.");
					changes++;
				}
			}
			//multiple
			else {
				//temp2 = amount changed
				//temp3 = counter
				temp = 0;
				temp2 = 0;
				temp3 = 0;
				if (player.biggestTitSize() >= 1) outputText("\n");
				while (temp3 < player.breastRows.length) {
					if (player.breastRows[temp3].breastRating >= 1) {
						player.breastRows[temp3].breastRating--;
						temp2++;
						outputText("\n");
						//If this isn't the first change...
						if (temp2 > 1) outputText("...and y");
						else outputText("Y");
						outputText("our " + player.breastDescript(temp3) + " shrink, dropping to " + player.breastCup(temp3) + "s.");
					}
					temp3++;
				}
				outputText("\n\nTo your surprise you feel like your relative view increased. That's when you realise your breast has deflated sightly. Measuring them you conclude they are now " + player.breastCup(0) + "s.");
				if (temp2 > 0) changes++;
			}
		}
		if (player.cor < 50) dynStats("cor", 1);
        else if (player.cor < 75) dynStats("cor", .5);
        else dynStats("cor", .25);
        //GENERAL APPEARANCE STUFF BELOW
        //ADDING GOBLINOID BLOOD IF PC QUALIFY
        if ((player.isGoblinoid()) && !player.hasPerk(PerkLib.GoblinoidBlood)) {
            outputText("\nDue to your body becoming closer to that of a gremlin chemicals and drugs have started to affect you with way more potency then before. It would seem you have gained the goblinoid blood quality.\n");
            outputText("\n(<b>Gained Perk: Goblinoid blood</b>)\n");
            player.createPerk(PerkLib.GoblinoidBlood, 0, 0, 0, 0);
        }
        //antianemone corollary:
        if (changes < changeLimit && player.hairType == Hair.ANEMONE && rand(2) == 0) {
            //-insert anemone hair removal into them under whatever criteria you like, though hair removal should precede abdomen growth; here's some sample text:
            outputText("[pg]As you down the potent ale, your head begins to feel heavier - and not just from the alcohol!  Reaching up, you notice your tentacles becoming soft and somewhat fibrous.  Pulling one down reveals that it feels smooth, silky, and fibrous; you watch as it dissolves into many thin, hair-like strands.  <b>Your hair is now back to normal!</b>");
		    outputText("[pg]");
		    transformations.HairHuman.applyEffect(false);
            changes++;
        }
        //-Remove feather-arms (copy this for goblin ale, mino blood, equinum, centaurinum, canine pepps, demon items)
        if (changes < changeLimit && !InCollection(player.arms.type, Arms.HUMAN) && rand(4) == 0) {
            outputText("[pg]");
            transformations.ArmsHuman.applyEffect();
            changes++;
        }
        //Removes wings!
        if ((player.wings.type == Wings.BEE_SMALL || player.wings.type == Wings.BEE_LARGE || player.wings.type >= Wings.HARPY) && changes < changeLimit && rand(4) == 0) {
            outputText("[pg]");
            transformations.WingsNone.applyEffect();
            changes++;
        }
        //Removes antennaes!
        if (player.antennae.type > Antennae.NONE && changes < changeLimit && rand(3) == 0) {
            outputText("[pg]Your [hair] itches so you give it a scratch, only to have your [antennae] fall to the ground.  What a relief.  <b>You've lost your [antennae]!</b>");
            changes++;
            player.antennae.type = Antennae.NONE;
        }
        //Revert rear body to normal
        if (player.rearBody.type != RearBody.NONE && changes < changeLimit && rand(3) == 0) {
            outputText("[pg]");
            transformations.RearBodyNone.applyEffect();
            changes++;
        }
        //Fix Legs!
        if (player.lowerBody != LowerBody.HUMAN) {
            outputText("[pg]");
            transformations.LowerBodyHuman.applyEffect();
            changes++;
        }
        //Eye colors
        if (player.eyes.type == Eyes.HUMAN && transformations.EyesGremlinColors.isPossible() && changes < changeLimit && rand(3) == 0) {
            transformations.EyesGremlinColors.applyEffect();
            changes++;
        }
        //Remove odd eyes
        if (changes < changeLimit && rand(5) == 0 && player.eyes.type != Eyes.HUMAN && player.eyes.type != Eyes.GREMLIN) {
            outputText("[pg]");
            transformations.EyesHuman.applyEffect();
            changes++;
        }
        //Add gremlin eyes
        if (changes < changeLimit && rand(5) == 0 && player.eyes.type == Eyes.HUMAN) {
            outputText("[pg]");
            transformations.EyesGremlin.applyEffect();
            changes++;
        }
        //Omg Crazy hairs
        if (transformations.HairCrazy.isPossible() && changes < changeLimit && rand(3) == 0) {
            outputText("[pg]");
            transformations.HairCrazy.applyEffect();
            changes++;
        }
        //Dye those hairs
        if (player.hairType == Hair.CRAZY && !InCollection(player.hairColor, GremlinRace.GremlinHairColors) && changes < changeLimit && rand(3) == 0) {
            player.hairColor = randomChoice(GremlinRace.GremlinHairColors);
            outputText("[pg]Gosh just while you were getting used to that new fucked up haircut of yours,  they began changing again. The strands glow for a moment before turning all " + player.hairColor + "! <b>Guess you won’t need to dye your hair color for it to match your weird haircut, you definitely look like what could pass for some crazy midget right now.</b>");
            changes++;
        }
        //-Remove extra breast rows
        if (changes < changeLimit && player.bRows() > 1 && rand(3) == 0) {
            changes++;
            transformations.BreastRowsRemoveToOne.applyEffect();
        }
        //Skin/fur
        if (!player.hasPlainSkinOnly() && changes < changeLimit && rand(4) == 0 && player.faceType == Face.HUMAN) {
            outputText("[pg]");
            transformations.SkinPlain.applyEffect();
            changes++;
        }
        //skin tone
        if (!InCollection(player.skinColor, GremlinRace.GremlinSkinColors) && changes < changeLimit && rand(2) == 0) {
            player.skinColor = randomChoice(GremlinRace.GremlinSkinColors);
            outputText("[pg]Whoah, that was weird.  You just hallucinated that your ");
            if (player.isFurCovered()) outputText("skin");
            else outputText(player.skinDesc);
            outputText(" turned " + player.skinColor + ".  No way!  It's staying, it really changed color!");
            changes++;
        }
        //Face!
        if ((player.faceType != Face.CRAZY) && changes < changeLimit && rand(4) == 0 && player.ears.type == Ears.GREMLIN && player.tallness < 55) {
            if (player.faceType != Face.HUMAN) {
                outputText("[pg]Another violent sneeze escapes you.  It hurt!  You feel your nose and discover your face has changed back into a more normal look.  <b>You have a human looking face again!</b>");
                outputText("[pg]");
                transformations.FaceHuman.applyEffect(false);
            } else {
                outputText("[pg]");
                transformations.FaceCrazy.applyEffect();
            }
            changes++;
        }
        //Ears!
        if (player.ears.type != Ears.GREMLIN && changes < changeLimit && rand(3) == 0) {
            outputText("[pg]");
            transformations.EarsGremlin.applyEffect();
            changes++;
        }
        // Remove gills
        if (rand(4) == 0 && player.hasGills() && changes < changeLimit) {
            outputText("[pg]");
            transformations.GillsNone.applyEffect();
            changes++;
        }
        if (changes < changeLimit && rand(3) == 0) {
            if (rand(2) == 0) player.modFem(85, 3);
            if (rand(2) == 0) player.modThickness(20, 3);
            if (rand(2) == 0) player.modTone(15, 5);
        }
        player.refillHunger(15);
        flags[kFLAGS.TIMES_TRANSFORMED] += changes;
    }

    public function goblinAle(player:Player):void {
        player.slimeFeed();
        var changes:Number = 0;
        var changeLimit:Number = 2;
        if (rand(2) == 0) changeLimit++;
        if (rand(2) == 0) changeLimit++;
        if (rand(2) == 0) changeLimit++;
        if (rand(2) == 0) changeLimit++;
        changeLimit += player.additionalTransformationChances;
        clearOutput();
        outputText("You drink the ale, finding it to have a remarkably smooth yet potent taste.  You lick your lips and sneeze, feeling slightly tipsy.");
        //STAT CHANGES
		DrunkenPowerEmpowerIfPossible();
		AelfwineEmpowerIfPossible();
        dynStats("lus", Math.round(15*player.postConsumptionMlt()), "scale", false);
        //Stronger
        if (player.str > 50 && rand(3) == 0 && changes < changeLimit) {
            player.addCurse("str", 1, 1);
            if (player.str > 70) player.addCurse("str", 2, 1);
            if (player.str > 90) player.addCurse("str", 2, 1);
            outputText("[pg]You feel a little weaker, but maybe it's just the alcohol.");
            changes++;
        }
        ///Less tough
        if (player.tou > 50 && rand(3) == 0 && changes < changeLimit) {
            outputText("[pg]Giggling, you poke yourself, which only makes you giggle harder when you realize how much softer you feel.");
            player.addCurse("tou", 1, 1);
            if (player.tou > 70) player.addCurse("tou", 1, 1);
            if (player.tou > 90) player.addCurse("tou", 2, 1);
            changes++;
        }
        //Speed boost
        if (rand(3) == 0 && changes < changeLimit && MutagenBonus("spe", 1 + rand(2))) {
            outputText("[pg]You feel like dancing, and stumble as your legs react more quickly than you'd think.  Is the alcohol slowing you down or are you really faster?  You take a step and nearly faceplant as you go off balance.  It's definitely both.");
            changes++;
        }
        if (player.blockingBodyTransformations()) changeLimit = 0;
        //Shrink
        if (rand(2) == 0 && player.tallness > 42) {
            changes++;
            outputText("[pg]The world spins, and not just from the strength of the drink!  Your viewpoint is closer to the ground.  How fun!");
            player.tallness -= (1 + rand(5));
        }
        //Nipples Turn Back:
        if (player.hasStatusEffect(StatusEffects.BlackNipples) && changes < changeLimit && rand(3) == 0) {
            transformations.NipplesNoColor.applyEffect();
            changes++;
        }
        //SEXYTIEMS
        //Multidick killa!
        if (player.cocks.length > 1 && rand(3) == 0 && changes < changeLimit && !flags[kFLAGS.HYPER_HAPPY]) {
            outputText("[pg]");
            player.killCocks(1);
            changes++;
        }
        //Shrink primary dick to no longer than 12 inches
        else if (player.cocks.length == 1 && rand(2) == 0 && changes < changeLimit && !flags[kFLAGS.HYPER_HAPPY]) {
            if (player.cocks[0].cockLength > 12) {
                changes++;
                var temp3:Number = 0;
                outputText("[pg]");
                //Shrink said cock
                if (player.cocks[0].cockLength < 6 && player.cocks[0].cockLength >= 2.9) {
                    player.cocks[0].cockLength -= .5;
                    temp3 -= .5;
                }
                temp3 += player.growCock(0, (rand(3) + 1) * -1);
                player.lengthChange(temp3, 1);
            }
        }
        //Debugcunt
        if (changes < changeLimit && rand(3) == 0 && (player.vaginaType() == 5 || player.vaginaType() == 6) && player.hasVagina()) {
            transformations.VaginaHuman().applyEffect();
            changes++;
        }
        if (changes < changeLimit && rand(4) == 0 && ((player.ass.analWetness > 0 && !player.hasPerk(PerkLib.MaraesGiftButtslut)) || player.ass.analWetness > 1)) {
            outputText("[pg]You feel a tightening up in your colon and your [asshole] sucks into itself.  You feel sharp pain at first but that thankfully fades.  Your ass seems to have dried and tightened up.");
            player.ass.analWetness--;
            if (player.ass.analLooseness > 1) player.ass.analLooseness--;
            changes++;
        }
        //Boost vaginal capacity without gaping
        if (changes < changeLimit && rand(3) == 0 && player.hasVagina() && player.statusEffectv1(StatusEffects.BonusVCapacity) < 40) {
            if (!player.hasStatusEffect(StatusEffects.BonusVCapacity)) player.createStatusEffect(StatusEffects.BonusVCapacity, 0, 0, 0, 0);
            player.addStatusValue(StatusEffects.BonusVCapacity, 1, 5);
            outputText("[pg]There is a sudden... emptiness within your [vagina].  Somehow you know you could accommodate even larger... insertions.");
            changes++;
        }
        //Boost fertility
        if (changes < changeLimit && rand(4) == 0 && player.fertility < 40 && player.hasVagina()) {
            player.fertility += 2 + rand(5);
            changes++;
            outputText("[pg]You feel strange.  Fertile... somehow.  You don't know how else to think of it, but you're ready to be a mother.");
        }
        //GENERAL APPEARANCE STUFF BELOW
        //ADDING GOBLINOID BLOOD IF PC QUALIFY
        if ((player.isGoblinoid()) && !player.hasPerk(PerkLib.GoblinoidBlood)) {
            outputText("\nDue to your body becoming closer to that of a goblin chemicals and drugs have started to affect you with way more potency then before. It would seem you have gained the goblinoid blood quality.\n");
            outputText("\n(<b>Gained Perk: Goblinoid blood</b>)\n");
            player.createPerk(PerkLib.GoblinoidBlood, 0, 0, 0, 0);
        }
        //antianemone corollary:
        if (changes < changeLimit && player.hairType == Hair.ANEMONE && rand(2) == 0) {
            //-insert anemone hair removal into them under whatever criteria you like, though hair removal should precede abdomen growth; here's some sample text:
            outputText("[pg]As you down the potent ale, your head begins to feel heavier - and not just from the alcohol!  Reaching up, you notice your tentacles becoming soft and somewhat fibrous.  Pulling one down reveals that it feels smooth, silky, and fibrous; you watch as it dissolves into many thin, hair-like strands.  <b>Your hair is now back to normal!</b>");
		    outputText("[pg]");
		    transformations.HairHuman.applyEffect(false);
            changes++;
        }
        //-Remove feather-arms (copy this for goblin ale, mino blood, equinum, centaurinum, canine pepps, demon items)
        if (changes < changeLimit && !InCollection(player.arms.type, Arms.HUMAN) && rand(4) == 0) {
            outputText("[pg]");
            transformations.ArmsHuman.applyEffect();
            changes++;
        }
        //Removes wings!
        if ((player.wings.type == Wings.BEE_SMALL || player.wings.type == Wings.BEE_LARGE || player.wings.type >= Wings.HARPY) && changes < changeLimit && rand(4) == 0) {
            outputText("[pg]");
            transformations.WingsNone.applyEffect();
            changes++;
        }
        //Removes antennaes!
        if (player.antennae.type > Antennae.NONE && changes < changeLimit && rand(3) == 0) {
            outputText("[pg]Your [hair] itches so you give it a scratch, only to have your [antennae] fall to the ground.  What a relief.  <b>You've lost your [antennae]!</b>");
            changes++;
            player.antennae.type = Antennae.NONE;
        }
        //Fix Legs!
        if (player.lowerBody != LowerBody.HUMAN && changes < changeLimit) {
            outputText("[pg]");
            transformations.LowerBodyHuman.applyEffect();
            changes++;
        }
        if (player.eyes.type == Eyes.HUMAN && transformations.EyesGoblinColors.isPossible() && changes < changeLimit && rand(3) == 0) {
            transformations.EyesGoblinColors.applyEffect();
            changes++;
        }
        if (!InCollection(player.hairColor, GoblinRace.GoblinHairColors) && changes < changeLimit && rand(3) == 0) {
            player.hairColor = randomChoice(GoblinRace.GoblinHairColors);
            outputText("[pg]Your scalp tingles and when you check yourself in nearby steam it seems your <b>[hair] become " + player.hairColor + ".</b>");
            changes++;
        }
        //Remove odd eyes
        if (changes < changeLimit && rand(5) == 0 && player.eyes.type > Eyes.HUMAN) {
            outputText("[pg]");
            transformations.EyesHuman.applyEffect();
            changes++;
        }
        //-Remove extra breast rows
        if (changes < changeLimit && player.bRows() > 1 && rand(3) == 0) {
            changes++;
            transformations.BreastRowsRemoveToOne.applyEffect();
        }
        //Skin/fur
        if (!player.hasPlainSkinOnly() && changes < changeLimit && rand(4) == 0 && player.faceType == Face.HUMAN) {
            outputText("[pg]");
            transformations.SkinPlain.applyEffect();
            changes++;
        }
        //skin tone
        if (!InCollection(player.skinColor, GoblinRace.GoblinSkinColors, GoblinRace.GoblinRareSkinColors) && changes < changeLimit && rand(2) == 0) {
            player.skinColor = weightedRandom(
                    [17, "dark green"],
                    [6, "emerald"],
                    [7, "green"],
                    [4, "pale yellow"],
                    [4, "grayish-blue"],
                    [2, "red"],
                    [1, "orange"],
                    [1, "pale purple"],
                    [1, "royal purple"],
                    [1, "light purple"]
            );
            changes++;
            outputText("[pg]Whoah, that was weird.  You just hallucinated that your ");
            if (player.isFurCovered()) outputText("skin");
            else outputText(player.skinDesc);
            outputText(" turned " + player.skinColor + ".  No way!  It's staying, it really changed color!");
        }
        //Face!
        if ((player.faceType != Face.HUMAN || player.faceType != Face.ANIMAL_TOOTHS) && changes < changeLimit && rand(3) == 0 && player.ears.type == Ears.BIG) {
            if (player.faceType != Face.ANIMAL_TOOTHS) {
                outputText("[pg]");
                transformations.FaceAnimalTeeth.applyEffect();
            } else {
                outputText("[pg]Another violent sneeze escapes you.  It hurt!  You feel your nose and discover your face has changed back into a more normal look.  <b>You have a human looking face again!</b>");
                outputText("[pg]");
                transformations.FaceHuman.applyEffect(false);
            }
            changes++;
        }
        //Ears!
        if ((player.ears.type != Ears.BIG || player.ears.type != Ears.ELFIN) && changes < changeLimit && rand(3) == 0) {
            outputText("[pg]");
			if (rand(4) == 0) transformations.EarsElfin.applyEffect();
			else transformations.EarsBig.applyEffect();
            changes++;
        }
        //Removes tail
        if (player.tailType > Tail.NONE && rand(3) == 0 && changes < changeLimit) {
            outputText("[pg]");
            transformations.TailNone.applyEffect();
            changes++;
        }
        // Remove gills
        if (rand(4) == 0 && player.hasGills() && changes < changeLimit) {
            outputText("[pg]");
            transformations.GillsNone.applyEffect();
            changes++;
        }
        if (changes < changeLimit && rand(3) == 0) {
            if (rand(2) == 0) player.modFem(85, 3);
            if (rand(2) == 0) player.modThickness(20, 3);
            if (rand(2) == 0) player.modTone(15, 5);
        }
        player.refillHunger(15);
        flags[kFLAGS.TIMES_TRANSFORMED] += changes;
    }

    public function gooGasmic(type:Number, player:Player):void {
        //'type' refers to the variety of slime TF's.
        //0 == normal slime
        //1 == magma slime
        //2 == dark slime
        //3 == ??? slime
        player.slimeFeed();
        var changes:Number = 0;
        var changeLimit:Number = 2;
        if (rand(2) == 0) changeLimit++;
        if (rand(2) == 0) changeLimit++;
        if (rand(2) == 0) changeLimit++;
        if (rand(2) == 0) changeLimit++;
        changeLimit += player.additionalTransformationChances;
        clearOutput();
        if (type == 0) outputText("You take the wet cloth in hand and rub it over your body, smearing the strange slime over your [skin.type] slowly.");
        if (type == 2) outputText("Well here goes nothing, you gulp down the thing and sure enough, you begin to feel strange as you ingest the jelly. Well, at least it tastes like grapes.");
        //Stat changes
        //libido up to 80
        if (changes < changeLimit && MutagenBonus("lib", 3)) {
            outputText("[pg]Blushing and feeling horny, you make sure to rub it over your chest and erect nipples, letting the strange slimy fluid soak into you.");
            dynStats("lus", player.lib / 2, "scale", false);
            changes++;
        }
        //sensitivity moves towards 50
        if (player.sens < 50 && changes < changeLimit) {
            outputText("[pg]The slippery slime soaks into your [skin.type], making it tingle with warmth, sensitive to every touch.");
            player.addCurse("sen",1, 1);
            changes++;
        } else if (player.sens > 50 && changes < changeLimit) {
            outputText("[pg]The slippery slime numbs your [skin.type] slightly, leaving behind only gentle warmth.");
            dynStats("sen", -1);
            changes++;
        }
		if (player.blockingBodyTransformations()) changeLimit = 0;
        /*Calculate goopiness
         var goopiness:Number = 0;
         if(player.skinType == GOO) goopiness+=2;
         if(player.hair.indexOf("gooey") != -1) goopiness++;
         if(player.hasVagina()) {
         if(player.vaginalCapacity() >= 9000) goopiness++;
         }*/
        //Cosmetic changes based on 'goopyness'
        //Remove wings
        if (player.wings.type > Wings.NONE && rand(2) == 0 && changes < changeLimit) {
            outputText("[pg]");
            transformations.WingsNone.applyEffect();
            changes++;
        }
        //Human face
        if (player.faceType != Face.HUMAN && rand(2) == 0 && changes < changeLimit) {
            outputText("[pg]Another violent sneeze escapes you.  It hurt!  You feel your nose and discover your face has changed back into a more normal look.  <b>You have a human looking face again!</b>");
            outputText("[pg]");
            transformations.FaceHuman.applyEffect(false);
            changes++;
        }
        //1.Goopy arms
        if (player.arms.type != Arms.GOO && rand(3) == 0 && changes < changeLimit) {
            outputText("[pg]");
            transformations.ArmsGoo.applyEffect();
            changes++;
        }
        //2.Goopy skin
        if ((!player.isGooSkin() || player.isGooSkin() && !colourmatch()) && rand(3) == 0 && changes < changeLimit) {
            transformations.SkinGoo(Skin.COVERAGE_COMPLETE, type).applyEffect();
            changes++;
        }
        ////2a.Make alterations to dick/vaginal/nippular descriptors to match
        //3.Goopy hair
        if (player.isGooSkin() && transformations.HairGoo.isPossible() && rand(2) == 0 && changes < changeLimit) {
		    outputText("[pg]");
		    transformations.HairGoo.applyEffect();
            dynStats("lus", 10, "scale", false);
            changes++;
        }
        //DONE EXCEPT FOR TITS & MULTIDICKS TODO(UNFINISHED KINDA)
        //4.Goo legs
        if (transformations.LowerBodyGoo.isPossible() && rand(3) == 0 && changes < changeLimit) {
            outputText("[pg]");
            transformations.LowerBodyGoo.applyEffect();
            changes++;
        }
        //5 Goopy rear body
        if (transformations.RearBodyMetamorphicGoo.isPossible() && changes < changeLimit && rand(3) == 0) {
            outputText("[pg]");
            transformations.RearBodyMetamorphicGoo.applyEffect();
            changes++;
        }
        //6a. Grow vagina if none
        if (!player.hasVagina() && rand(3) == 0 && changes < changeLimit) {
            outputText("[pg]A wet warmth spreads through your slimey groin as a narrow gash appears on the surface of your groin.  <b>You have grown a vagina.</b>");
            transformations.VaginaHuman().applyEffect(false);
            player.vaginas[0].vaginalWetness = VaginaClass.WETNESS_DROOLING;
            player.vaginas[0].vaginalLooseness = VaginaClass.LOOSENESS_GAPING;
            player.clitLength = .4;
            changes++;
        }
        //6b.Infinite Vagina
        if (player.tallness < 100 && rand(3) == 0 && changes < changeLimit) {
            outputText("[pg]Your gel-like body swells up from the intake of additional slime.  If you had to guess, you'd bet you were about two inches taller.");
            player.tallness += 2;
            MutagenBonus("str", 1);
            MutagenBonus("tou", 1);
            changes++;
        }
        //Big slime girl
        else if (transformations.RearBodyMetamorphicGoo.isPresent() && transformations.arms.ArmsGoo.isPresent() && LowerBody.isGoo(player)) {
            if (!player.hasStatusEffect(StatusEffects.SlimeCraving)) {
                outputText("[pg]You feel a growing gnawing in your gut.  You feel... hungry, but not for food.  No, you need something wet and goopy pumped into you.  You NEED it.  You can feel it in your bones.  <b>If you don't feed that need... you'll get weaker and maybe die.</b>");
                player.createStatusEffect(StatusEffects.SlimeCraving, 0, 0, 0, 1); //Value four indicates this tracks strength and speed separately
            } else {
                outputText("[pg]You feel full for a moment, but you know it's just a temporary respite from your constant need to be 'injected' with fluid.");
                player.changeStatusValue(StatusEffects.SlimeCraving, 1, 0);
            }
        }
        if (rand(2) == 0) outputText(player.modFem(85, 3));
        if (rand(2) == 0) outputText(player.modThickness(20, 3));
        if (rand(2) == 0) outputText(player.modTone(15, 5));
        flags[kFLAGS.TIMES_TRANSFORMED] += changes;

        function colourmatch():Boolean{
            var check:Boolean = false;
            switch (type){
                case 0:
                    check = (InCollection(player.skinColor, SlimeRace.SlimeSkinColors));
                    break;
                case 1:
                    check = (InCollection(player.skinColor, MagmaSlimeRace.MagmaSlimeSkinColors));
                    break;
                case 2:
                    check = (InCollection(player.skinColor, DarkSlimeRace.DarkSlimeSkinColors));
                    break;
            }
            return check;
        }
    }

    public function sharkTooth(type:Number, player:Player):void {
        var changes:Number = 0;
        var changeLimit:Number = 2;
        if (rand(2) == 0) changeLimit++;
        if (rand(2) == 0) changeLimit++;
        changeLimit += player.additionalTransformationChances;
        if (type == 0) {
            clearOutput();
            outputText("You have no idea why, but you decide to eat the pointed tooth. To your surprise, it's actually quite brittle, turning into a fishy-tasting dust. You figure it must just be a tablet made to look like a shark's tooth.");
        } else if (type == 1) {
            clearOutput();
            outputText("You have no idea why, but you decide to eat the pointed, glowing tooth. To your surprise, it's actually quite brittle, crumbling into a fishy-tasting dust. Maybe it's just a tablet made to look like a shark's tooth.");
        } else if (type == 2) {
            clearOutput();
            outputText("You have no idea why, but you decide to eat the pointed, gloomy tooth. To your surprise, it's actually quite brittle, crumbling into a fishy-tasting dust. Maybe it's just a tablet made to look like a shark's tooth.");
        }
        //STATS
        //Increase strength 1-2 points (Up to 50) (60 for tiger)
        if (rand(3) == 0 && MutagenBonus("str", 1 + rand(2))) {
            outputText("[pg]A painful ripple passes through the muscles of your body.  It takes you a few moments, but you quickly realize you're a little bit stronger now.");
            changes++;
        }
        //Increase Speed 1-3 points (Up to 75) (100 for tigers)
        if (rand(3) == 0 && MutagenBonus("spe", 1 + rand(3))) {
            changes++;
            outputText("[pg]Shivering without warning, you nearly trip over yourself as you walk.  A few tries later you realize your muscles have become faster.");
        }
        //Reduce sensitivity 1-3 Points (Down to 25 points)
        if (type != 2 && player.sens > 25 && rand(1.5) == 0 && changes < changeLimit) {
            dynStats("sen", (-1 - rand(3)));
            changes++;
            outputText("[pg]It takes a while, but you eventually realize your body has become less sensitive.");
        }
        //Increase Libido 2-4 points (Up to 75 points) (100 for tigers)
        if (type != 2 && rand(3) == 0 && changes < changeLimit && MutagenBonus("lib", 1 + rand(3))) {
            changes++;
            outputText("[pg]A blush of red works its way across your skin as your sex drive kicks up a notch.");
        }
        //Decrease intellect 1-3 points (Down to 40 points)
        if (type != 2 && player.inte > 40 && rand(3) == 0 && changes < changeLimit) {
            player.addCurse("int", (1 + rand(3)), 1);
            changes++;
            outputText("[pg]You shake your head and struggle to gather your thoughts, feeling a bit slow.");
        }
		//Increase Wis and Sensitivity
		if (type == 2 && changes < changeLimit && rand(3) == 0) {
            outputText("[pg]You close your eyes, smirking mischievously, as you suddenly think of several new tricks to try on your opponents; you feel quite a bit more cunning.  The mental picture of them helpless before your cleverness makes you shudder a bit, and you lick your lips.");
            if (MutagenBonus("wis", 2)) changes++;
            if (player.sens < 200) player.addCurse("sen", 1, 1);
        }
        if (!player.blockingBodyTransformations()) {
            //Smexual stuff!
            //-TIGERSHARK ONLY: Grow a cunt (guaranteed if no gender)
            if (type == 1 && (player.gender == 0 || (!player.hasVagina() && changes < changeLimit && rand(3) == 0))) {
                changes++;
                transformations.VaginaHuman().applyEffect();
                player.addCurse("sen", 10, 1);
            }
            //Shark Cunt
            if (changes < changeLimit && rand(3) == 0 && player.vaginaType() != VaginaClass.SHARK && player.hasVagina()) {
                transformations.VaginaShark().applyEffect();
                changes++;
            }
            //WANG GROWTH - TIGGERSHARK ONLY
            if (type == 1 && (!player.hasCock()) && changes < changeLimit && rand(3) == 0) {
                //Genderless:
                transformations.CockHuman(0, 7, 1.4).applyEffect();
                if (player.balls == 0) {
                    outputText(" And a new pair of balls!");
                    transformations.BallsDuo.applyEffect(false);
                    player.ballSize = 2;
                }
                dynStats("lus", 20, "scale", false);
                player.addCurse("sen", 5, 1);
                MutagenBonus("lib", 4);
                changes++;
            }
            //(Requires the player having two testicles)
            if (type == 1 && player.balls <4 && player.hasCock() && changes < changeLimit && rand(3) == 0) {
                transformations.BallsQuad(2).applyEffect();
                dynStats("lus", 10, "scale", false);
                player.addCurse("sen", 3, 1);
                MutagenBonus("lib", 2);
                changes++;
            }
			//Cock gets bigger!
			if (type == 2 && (player.gender == 1 || player.gender == 3) && player.cocks.length > 0 && player.biggestCockLength() < 30 && changes < changeLimit && rand(3) == 0) {
				var selectedCock:int = -1;
				for (var i:int = 0; i < player.cocks.length; i++) {
					if (player.cocks[i].cockLength < 21 || player.cocks[i].cockThickness < 4) {
						selectedCock = i;
						break;
					}
				}
				if (selectedCock != -1) {
					if (player.cocks[selectedCock].cockThickness < 4) {
						player.growCock(selectedCock, 2 + rand(4));
						player.thickenCock(selectedCock, 1);
						outputText("[pg]You moan as your cock suddenly becomes erect, dripping precum as it increases in thickness and length.");
						if (player.biggestCockLength() > 21) outputText(" It has became so big you could likely fuck a horse or a small whale with it if you wanted.");
					} else {
						player.growCock(selectedCock, 2 + rand(4));
						outputText("[pg]You moan as your cock suddenly becomes erect, dripping precum as it increases in length.");
						if (player.biggestCockLength() > 21) outputText(" It has became so big you could likely fuck a horse or a small whale with it if you wanted.");
						outputText(" The pleasure of the change cause you to orgasm, a big load of cum splattering the ground below you.");
					}
					changes++;
				}
			}
			//Change cock back to normal
			if (type == 2 && player.hasCock() && changes < changeLimit) {
				if (rand(3) == 0 && player.cocks[0].cockType != CockTypesEnum.HUMAN) {
					transformations.CockHuman().applyEffect();
					changes++;
				}
			}
            //Transformations:
            //Mouth TF
            if (type != 2 && player.faceType != Face.SHARK_TEETH && rand(3) == 0 && changes < changeLimit) {
                outputText("[pg]");
                transformations.FaceSharkTeeth.applyEffect();
                changes++;
            }
			//-Human tongue
			if (player.tongue.type != Tongue.HUMAN && changes < changeLimit && rand(3) == 0) {
				outputText("[pg]");
				transformations.TongueHuman.applyEffect();
				changes++;
			}
            //Ear tf
            if (player.faceType == Face.SHARK_TEETH && player.ears.type != Ears.SHARK && changes < changeLimit && rand(3) == 0) {
                outputText("[pg]");
                transformations.EarsShark.applyEffect();
                changes++;
            }
            //Remove odd eyes
            if (changes < changeLimit && rand(3) == 0 && ((type != 2 && player.eyes.type != Eyes.HUMAN) || !InCollection(player.eyes.type, Eyes.HUMAN, Eyes.DEVIL))) {
                outputText("[pg]");
                transformations.EyesHuman.applyEffect();
                changes++;
            }
            //Tail TF
            if (type != 2 && player.tailType != Tail.SHARK && rand(3) == 0 && changes < changeLimit) {
                outputText("[pg]");
                transformations.TailShark.applyEffect();
                changes++;
            }
            //Gills TF
            if (player.gills.type != Gills.FISH && changes < changeLimit && rand(3) == 0) {
                outputText("[pg]");
                transformations.GillsFish.applyEffect();
                changes++;
            }
            //Hair
            if (player.hairType != Hair.NORMAL && rand(3) == 0 && changes < changeLimit) {
                outputText("\n\n");
                transformations.HairHuman.applyEffect();
                changes++;
            }
            if (type != 2 && player.hairColor != "silver" && rand(3) == 0 && changes < changeLimit) {
                changes++;
                outputText("[pg]You feel a tingling in your scalp and reach up to your head to investigate. To your surprise, your hair color has changed into a silvery color, just like that of a shark girl!");
                player.hairColor = "silver";
            }
			if (type == 2 && !InCollection(player.hairColor, AbyssalSharkRace.AbyssalSharkHairColors) && changes < changeLimit && rand(3) == 0) {
				player.hairColor = randomChoice(AbyssalSharkRace.AbyssalSharkHairColors);
				outputText("[pg]Your scalp begins to tingle, and you gently grasp a strand of hair, pulling it out to check it.  Your hair has become [haircolor]!");
				changes++;
			}
            //Skin
            if (type != 2 && (!InCollection(player.scaleColor, SharkRace.SharkScaleColors, "orange") || !player.isScaleCovered()) && rand(3) == 0 && changes < changeLimit) {
                outputText("[pg]");
                if (type == 0) {
                    var color:String;
                    if (!InCollection(player.scaleColor, SharkRace.SharkScaleColors))
                        color = (rand(9) == 0)? "rough gray" : randomChoice(SharkRace.SharkScaleColors);
                    transformations.SkinAquaScales(Skin.COVERAGE_HIGH, {color:color}).applyEffect();
                    outputText("[pg]A tingling sensation runs across your skin in waves, growing stronger as <b>your skin's tone slowly shifts, darkening to become " + color + " in color.</b>");
                    outputText("It feels oddly rough too, comparable to that of a marine mammal. You smile and run your hands across your new shark skin.");
                    changes++;
                } else {
                    transformations.SkinPatternTigerSharkStripes.applyEffect();
                    changes++;
                }
            }
            //Legs
            if (type != 2 && player.lowerBody == LowerBody.HUMAN && player.lowerBody != LowerBody.SHARK && changes < changeLimit && rand(3) == 0) {
                outputText("[pg]");
                transformations.LowerBodyShark(2).applyEffect();
                changes++;
            }
            if ((type != 2 && !InCollection(player.lowerBody, LowerBody.HUMAN, LowerBody.SHARK) || type == 2 && !InCollection(player.lowerBody, LowerBody.HUMAN, LowerBody.ABYSSAL_SHARK)) && changes < changeLimit && rand(3) == 0) {
                outputText("[pg]");
                transformations.LowerBodyHuman.applyEffect();
                changes++;
            }
            //Arms
            if ((player.lowerBody == LowerBody.SHARK || player.lowerBody == LowerBody.ABYSSAL_SHARK) && !InCollection(player.arms.type, Arms.SHARK, Arms.ABYSSAL_SHARK) && changes < changeLimit && rand(3) == 0) {
                outputText("[pg]");
                transformations.ArmsShark.applyEffect();
                changes++;
            }
            //FINZ
            if (type != 2 && player.rearBody.type != RearBody.SHARK_FIN && changes < changeLimit && rand(3) == 0) {
                outputText("[pg]");
                transformations.RearBodySharkFin.applyEffect();
                changes++;
            }
			if (type == 2 && player.hasPerk(PerkLib.DantianPhylactery)) {
				if (player.faceType != Face.ABYSSAL_SHARK && changes < changeLimit && rand(3) == 0) {
					outputText("[pg]");
					transformations.FaceAbyssalShark.applyEffect();
					changes++;
				}
				if (player.eyes.type == Eyes.HUMAN && player.eyes.type != Eyes.DEVIL && changes < changeLimit && rand(3) == 0) {
					outputText("[pg]");
					transformations.EyesDevil.applyEffect();
					changes++;
				}
				if (player.lowerBody == LowerBody.HUMAN && player.lowerBody != LowerBody.ABYSSAL_SHARK && changes < changeLimit && rand(3) == 0) {
					outputText("[pg]");
					transformations.LowerBodyAbyssalShark.applyEffect();
					changes++;
				}
				if (player.rearBody.type != RearBody.ABYSSAL_SHARK_FIN && changes < changeLimit && rand(3) == 0) {
					outputText("[pg]");
					transformations.RearBodyAbyssalSharkFin.applyEffect();
					changes++;
				}
				if (player.arms.type != Arms.ABYSSAL_SHARK && changes < changeLimit && rand(3) == 0) {
					outputText("[pg]");
					transformations.ArmsAbyssalShark.applyEffect();
					changes++;
				}
				if (player.tailType != Tail.ABYSSAL_SHARK && changes < changeLimit && rand(3) == 0) {
					outputText("[pg]");
					transformations.TailAbyssalShark.applyEffect();
					changes++;
				}
				if ((!InCollection(player.scaleColor, AbyssalSharkRace.AbyssalSharkScaleColors) || !player.isScaleCovered()) && changes < changeLimit && rand(3) == 0) {
					outputText("[pg]");
					var acolor:String;
					if (!InCollection(player.scaleColor, AbyssalSharkRace.AbyssalSharkScaleColors)) acolor = randomChoice(AbyssalSharkRace.AbyssalSharkScaleColors);
					transformations.SkinAquaScales(Skin.COVERAGE_HIGH, {color:acolor}).applyEffect();
					outputText("[pg]A tingling sensation runs across your skin in waves, growing stronger as <b>your skin's tone slowly shifts, darkening to become " + color + " in color.</b>");
					outputText("It feels oddly rough too, comparable to that of a marine mammal. You smile and run your hands across your new shark skin.");
					changes++;
				}
				if (!player.skin.hasBioluminescence() && changes < changeLimit && rand(3) == 0) {
					outputText("[pg]");
					transformations.SkinPatternBioluminescence.applyEffect();
					changes++;
				}
				if (player.basetallness < 132 && changes < changeLimit && rand(3) == 0) {
					var heightGain:int = rand(15) + 5;
					if (heightGain < 10) outputText("[pg]You shift uncomfortably as you realize you feel off balance.  Gazing down, you realize you have grown SLIGHTLY taller.");
					else if (heightGain >= 10 && heightGain < 20) outputText("[pg]You feel dizzy and slightly off, but quickly realize it's due to a sudden increase in height.");
					else if (heightGain == 20) outputText("[pg]Staggering forwards, you clutch at your head dizzily.  You spend a moment getting your balance, and stand up, feeling noticeably taller.");
					player.tallness += heightGain;
					changes++;
				}
			}
            if (changes == 0) {
                outputText("[pg]Nothing happened.  Weird.");
            }
            player.refillHunger(5);
            flags[kFLAGS.TIMES_TRANSFORMED] += changes;
        }
    }

    //9)  Transformation Item - Snake Oil (S. Oil)
    /*Effects:
      Boosts Speed stat
      Ass reduction
      Testicles return inside your body (could be reverted by the use of succubi delight)
      Can change penis into reptilian form  (since there's a lot of commentary here not knowing where to go, let me lay it out.)
     the change will select one cock (randomly if you have multiple)
     said cock will become two reptilian cocks
     these can then be affected separately, so if someone wants to go through the effort of removing one and leaving themselves with one reptile penis, they have the ability to do that
     This also means that someone who's already reached the maximum numbers of dicks cannot get a reptilian penis unless they remove one first
     "Your reptilian penis is X.X inches long and X.X inches thick.  The sheath extends halfway up the shaft, thick and veiny, while the smooth shaft extends out of the sheath coming to a pointed tip at the head. "
      Grow poisonous fangs (grants Poison Bite ability to player, incompatible with the sting ability, as it uses the same poison-meter)
      Causes your tongue to fork
      Legs fuse together and dissolve into snake tail  (grants Constrict ability to player, said tail can only be covered in scales, independently from the rest of the body)
      If snake tail exists:
        Make it longer, possibly larger (tail length is considered independently of your height, so it doesn't enable you to use the axe, for instance.
        Change tail's color according to location
          [Smooth] Beige and Tan (Desert), [Rough] Brown and Rust (Mountains), [Lush]  Forest Green and Yellow (Forest), [Cold] Blue and White (ice land?), [Fresh] Meadow Green [#57D53B - #7FFF00] and Dark Teal [#008080] (lake) , [Menacing] Black and Red (Demon realm, outside encounters), [Distinguished] Ivory (#FFFFF0) and Royal Purple/Amethyst (#702963) (Factory), [Mossy] Emerald and Chestnut (Swamp), [Arid] Orange and Olive pattern (Tel' Adre)

     9a) Item Description
     "A vial the size of your fist made of dark brown glass. It contains what appears to be an oily, yellowish liquid. The odor is abominable."
     */
    public function snakeOil(type:Number, player:Player):void {
        player.slimeFeed();
        clearOutput();
        var changes:Number = 0;
        var changeLimit:Number = 2;
        var temp:Number = 0;
        var temp2:Number = 0;
        var color:String;
        if (rand(2) == 0) changeLimit++;
        if (rand(2) == 0) changeLimit++;
        changeLimit += player.additionalTransformationChances;
        //b) Description while used
        if (type == 0) {
            outputText("Pinching your nose, you quickly uncork the vial and bring it to your mouth, determined to see what effects it might have on your body. Pouring in as much as you can take, you painfully swallow before going for another shot, emptying the bottle.");
            //(if outside combat)
            if (!CoC.instance.inCombat) outputText("  Minutes pass as you start wishing you had water with you, to get rid of the aftertaste.");
        } else if (type == 1) {
            outputText("Pinching your nose, you quickly uncork the vial and bring it to your mouth, determined to see what effects it might have on your body. Pouring in as much as you can take, you painfully swallow before going for another shot, emptying the bottle. The thing taste absolutely horrible.");
            //(if outside combat)
            if (!CoC.instance.inCombat) outputText("  Minutes pass as you start wishing you had water with you, to get rid of the aftertaste.");
        }
        //STAT CHANGES
        //+ speed to 70!
        if (rand(2) == 0 && MutagenBonus("spe", 2)) {
            outputText("[pg]Your muscles quiver, feeling ready to strike as fast as a snake!");
            if (player.spe < 40) outputText("  Of course, you're nowhere near as fast as that.");
            changes++;
        }
        //Corruption thoughts
        if (rand(2) == 0 && type == 1) {
            if (player.cor < 33) outputText("  This stuff is gross, why are you drinking it?");
            //Corruption increase
            if ((player.cor < 100 || rand(2))) {
                outputText("[pg]The drink makes you feel... dirty.");
                var mult:Number = 1;
                //Corrupts the uncorrupted faster
                if (player.cor < 50) mult++;
                if (player.cor < 40) mult++;
                if (player.cor < 30) mult++;
                dynStats("cor", mult);
                changes++;
            }
        }
        if (player.blockingBodyTransformations()) changeLimit = 0;
        //Removes wings
        if (!InCollection(player.wings.type, Wings.NONE) && rand(3) == 0 && changes < changeLimit) {
            outputText("[pg]");
            transformations.WingsNone.applyEffect();
            changes++;
        }

        //Snek Penis and Gina
        if (player.lizardCocks() == 0 && player.cockTotal() > 0 && changes < changeLimit && rand(4) == 0) {
            //Find the first non-lizzy dick
            for (temp2 = 0; temp2 < player.cocks.length && player.cocks[temp2].cockType == CockTypesEnum.LIZARD; temp2++) { }
            transformations.CockLizard(temp2).applyEffect();
            dynStats("lus", 10, "scale", false);
            MutagenBonus("lib", 3);
            changes++;
        }
        //(CHANGE OTHER DICK)
        //Requires 1 lizard cock, multiple cocks
        if (player.lizardCocks() > 0 && player.cockTotal() > player.lizardCocks() && rand(4) == 0 && changes < changeLimit) {
            transformations.CockLizard(player.findFirstCockNotInType([CockTypesEnum.LIZARD])).applyEffect();
            dynStats("lus", 10, "scale", false);
            MutagenBonus("lib", 3);
            changes++;
        }
        //-Grows second lizard dick if only 1 dick
        if (player.lizardCocks() == 1 && player.cocks.length == 1 && rand(4) == 0 && changes < changeLimit) {
            transformations.CockLizard(1, player.cocks[0].cockLength, player.cocks[0].cockThickness).applyEffect();
            dynStats("lus", 10, "scale", false);
            MutagenBonus("lib", 3);
            changes++;
        }
        //--Worms leave if 100% lizard dicks?
        //Require mammals?
        if (player.lizardCocks() == player.cockTotal() && changes < changeLimit && player.hasStatusEffect(StatusEffects.Infested)) {
            outputText("[pg]Like rats from a sinking ship, worms escape from your body in a steady stream.  Surprisingly, the sensation is remarkably pleasant, similar to the pleasure of sexual release in a way.  Though they seem inexhaustible, the tiny, cum-slimed invertebrates slow to a trickle.  The larger worm-kin inside you stirs as if disturbed from a nap, coming loose from whatever moorings it had attached itself to in the interior of your form.  It slowly works its way up your urethra, stretching to an almost painful degree with every lurching motion.  Your dick bloats out around the base, stretched like the ovipositor on a bee-girl in order to handle the parasitic creature, but thankfully, the ordeal is a brief one.");
            if (player.balls > 1) outputText("  The remaining " + num2Text(player.balls - 1) + " slither out the pre-stretched holes with ease, though the last one hangs from your tip for a moment before dropping to the ground.");
            outputText("  The white creature joins its kin on the ground and slowly slithers away.  Perhaps they prefer mammals? In any event, <b>you are no longer infected with worms</b>.");
            player.removeStatusEffect(StatusEffects.Infested);
            player.buff("Infested").remove();
            changes++;
        }

        //[Increase Vaginal Capacity] - requires vagina, of course
        if (player.hasVagina() && player.statusEffectv1(StatusEffects.BonusVCapacity) < 200 && changes < changeLimit && rand(3) == 0) {
            outputText("[pg]A gurgling sound issues from your abdomen, and you double over as a trembling ripple passes through your womb.  The flesh of your stomach roils as your internal organs begin to shift, and when the sensation finally passes, you are instinctively aware that your [vagina] is a bit deeper than it was before.");
            if (!player.hasStatusEffect(StatusEffects.BonusVCapacity)) {
                player.createStatusEffect(StatusEffects.BonusVCapacity, 0, 0, 0, 0);
            }
            player.addStatusValue(StatusEffects.BonusVCapacity, 1, 5 + rand(10));
            changes++
        }

        if (player.vaginas.length == 1 && changes < changeLimit && rand(3) == 0) {
            if (player.vaginas[0].vaginalWetness <= VaginaClass.WETNESS_DROOLING && changes < changeLimit && rand(2) == 0) {
                temp = player.vaginas.length;
                while (temp > 0) {
                    temp--;
                    if (player.vaginas[0].vaginalWetness < VaginaClass.WETNESS_DROOLING) player.vaginas[temp].vaginalWetness++;
                    changes++;
                }
                if (player.vaginas[0].vaginalWetness == VaginaClass.WETNESS_DROOLING) {
                    outputText("[pg]Your pussy feels hot and juicy, aroused and tender.  You cannot resist as your hands dive into your [vagina].  You quickly orgasm, squirting fluids everywhere.  <b>You are now a squirter</b>.");
                    player.orgasm();
                }
                if (player.vaginas[0].vaginalWetness < VaginaClass.WETNESS_DROOLING) {
                    outputText("[pg]Wow your wet down there just what on going on. When you put your hand to your " + vaginaDescript(temp) + ". Surprised you discover it's twice as more lubricated then before.");
                }
            }
            if (player.vaginas[0].vaginalLooseness <= VaginaClass.LOOSENESS_GAPING && changes < changeLimit && rand(3) == 0) {
                outputText("[pg]You grip your gut in pain as you feel your organs shift slightly.  When the pressure passes, you realize your [vagina] has grown larger, in depth AND size.");
                player.vaginas[0].vaginalLooseness++;
                changes++;
            }
            if (transformations.VaginaNaga().isPossible() && player.vaginas[0].vaginalLooseness == VaginaClass.LOOSENESS_GAPING_WIDE) {
                transformations.VaginaNaga().applyEffect();
                changes++;
            }
        }

        //Removes antennae
        if (player.antennae.type > Antennae.NONE && rand(3) == 0 && changes < changeLimit) {
            outputText("[pg]The muscles in your brow clench tightly, and you feel a tremendous pressure on your upper forehead.  When it passes, you touch yourself and discover your [antennae] have vanished!");
            player.antennae.type = Antennae.NONE;
            changes++;
        }
        //9c) I The tongue (sensitivity bonus, stored as a perk?)
        if (player.tongue.type != Tongue.SNAKE && rand(3) == 0 && changes < changeLimit) {
            outputText("[pg]");
            transformations.TongueSnake.applyEffect();
            player.addCurse("sen", 5, 1);
            changes++;
        }
        //9c) II The fangs
        if (player.tongue.type == Tongue.SNAKE && player.faceType != Face.SNAKE_FANGS && rand(3) == 0 && changes < changeLimit) {
            outputText("[pg]");
            transformations.FaceSnakeFangs.applyEffect();
            if (player.tailRecharge < 5) player.tailRecharge = 5;
            changes++;
        }
        //9c) III The tail ( http://tvtropes.org/pmwiki/pmwiki.php/Main/TransformationIsAFreeAction ) (Shouldn't we try to avert this? -Ace)
        //Should the enemy "kill" you during the transformation, it skips the scene and immediately goes to the rape scene. (Now that I'm thinking about it, we should add some sort of appendix where the player realizes how much he's/she's changed. -Ace)
        if (transformations.LowerBodySnake.isPossible() && rand(4) == 0 && changes < changeLimit) {
            outputText("[pg]");
            transformations.LowerBodySnake.applyEffect();
            changes++;
        }
        //Partial scales with color changes to red, green, white, blue, or black.  Rarely: purple or silver.
        if (!player.hasPartialCoat(Skin.SCALES) && player.lowerBody == LowerBody.NAGA && changes < changeLimit && rand(5) == 0) {
            //(fur)
            var colors: Array;
            if (rand(10) == 0) {
                colors = ["purple", "silver"];
            } else {
                colors = ["red", "green", "white", "blue", "black"];
            }
            outputText("[pg]");
            transformations.SkinScales(Skin.COVERAGE_LOW, {colors: colors}).applyEffect();
            changes++;
        }
        //Snake eyes
        if (type == 0 && player.hasPartialCoat(Skin.SCALES) && player.eyes.type != Eyes.SNAKE && rand(4) == 0 && changes < changeLimit) {
            outputText("[pg]");
            transformations.EyesSnake.applyEffect();
            changes++;
        }
        //Fiendish Snake eyes
        if (type == 1 && player.hasPartialCoat(Skin.SCALES) && player.eyes.type != Eyes.SNAKEFIENDISH && rand(4) == 0 && changes < changeLimit) {
            outputText("[pg]");
            transformations.EyesSnakeFiendish.applyEffect();
            changes++;
        }
        //Ears!
        if (player.ears.type != Ears.SNAKE && (player.eyes.type == Eyes.SNAKE || player.eyes.type == Eyes.SNAKEFIENDISH) && changes < changeLimit && rand(3) == 0) {
            outputText("[pg]");
			transformations.EarsSnake.applyEffect();
            changes++;
        }
        // Remove gills
        if (rand(4) == 0 && player.hasGills() && changes < changeLimit) {
            outputText("[pg]");
            transformations.GillsNone.applyEffect();
            changes++;
        }

        // Remove wings
        if (type == 1 && rand(4) == 0 && player.wings.type != Wings.NONE && changes < changeLimit) {
            outputText("[pg]");
            transformations.WingsNone.applyEffect();
            changes++;
        }

        // Scale color
        if (type == 1 && rand(4) == 0 && !InCollection(player.scaleColor, NagaRace.SnakeScaleColors) && changes < changeLimit) {
            outputText("[pg]");
            color = randomChoice(NagaRace.SnakeScaleColors);
            transformations.SkinScales(Skin.COVERAGE_LOW, {color: color}).applyEffect();
            changes++;
        }

        // Hair color
        if (type == 1 && rand(4) == 0 && !InCollection(player.hairColor, NagaRace.SnakeScaleColors) && changes < changeLimit) {
            outputText("[pg]");
            color = randomChoice(NagaRace.SnakeScaleColors);
            outputText("[pg]Your hair suddenly tingles as "+color+" strands begins to cover your entire skalp and before long all of them are of same dark color.");
            player.hairColor = color;
            changes++;
        }

        //Skin color
        if (type == 1 && player.skinColor != "light purple" && changes < changeLimit && rand(3) == 0) {
            changes++;
            outputText("[pg]It takes a while for you to notice, but <b>");
            if (player.hasCoat()) outputText("the skin under your [fur color] " + player.skinDesc);
            else outputText("your " + player.skinDesc);
            outputText(" has changed to become ");
            player.skinColor = "light purple";
            outputText("[skin color] colored.</b>");
        }

        //Gain hood
        if (type == 1 && rand(4) == 0 && player.rearBody.type != RearBody.COBRA_HOOD && changes < changeLimit) {
            outputText("[pg]");
            transformations.RearBodyCobraHood.applyEffect();
            changes++;
        }

        //Default change - blah
        if (changes == 0) outputText("[pg]Remakarbly, the snake-oil has no effect.  Should you really be surprised at snake-oil NOT doing anything?");
        player.refillHunger(5);
    }

    public function evolvedNagaOil(type:Number, player:Player):void {
        //'type' refers to the variety of oil.
        //0 == gorgon oil
        //1 == vouivre oil
        //2 == couatl oil
        //3 == hydra scale
        player.slimeFeed();
        clearOutput();
        var changes:Number = 0;
        var changeLimit:Number = 2;
        var temp:Number = 0;
        var temp2:Number = 0;
        if (rand(2) == 0) changeLimit++;
        if (rand(2) == 0) changeLimit++;
        changeLimit += player.additionalTransformationChances;
        var colors: Array;
        if (type != 3) {
            outputText("Pinching your nose, you quickly uncork the vial and bring it to your mouth, determined to see what effects it might have on your body. Pouring in as much as you can take, you painfully swallow before going for another shot, emptying the bottle.  Minutes pass as you start wishing you had water with you, to get rid of the ");
            if (type == 0) outputText("aftertaste.");
            else outputText("strange mixed taste.");
        }
        else outputText("You apply the hydra scale against your chest, unsure of what will happen. It suddenly adheres and begins to merge into your body, vanishing beneath your skin.");
        //STAT CHANGES
        //Speed up to 80!
        if (rand(2) == 0 && MutagenBonus("spe", 3)) {
            outputText("[pg]Your muscles quiver, feeling ready to strike as fast as a snake!");
            if (player.spe < 40) outputText("  Of course, you're nowhere near as fast as that.");
            changes++;
        }
        //Toughness up to 70!
        if (rand(2) == 0 && MutagenBonus("tou", 2)) {
            outputText("[pg]Your body and skin both thicken noticeably.  You pinch your [skin.type] experimentally and marvel at how much tougher it has gotten.");
            changes++;
        }
        //Tallness
        if (player.tallness < 144 && rand(3) == 0 && changes < changeLimit) {
            player.tallness += (1 + rand(3));
            outputText("[pg]You don't know if its the food or just you gaining a spontaneous push of growth but looking down it feels like you might have gained some height.");
            if (player.tallness > 84 && player.lowerBody == LowerBody.HYDRA) outputText(" Woah, being this size most people looks almost like they're small toys before your massive body now. You've definitely grown to one hell of a size!");
            changes++;
        }
        if (player.blockingBodyTransformations()) changeLimit = 0;

        //Snek Penis and Gina
        if (player.lizardCocks() == 0 && player.cockTotal() > 0 && changes < changeLimit && rand(3) == 0) {
            //Find the first non-lizzy dick
            for (temp2 = 0; temp2 < player.cocks.length && player.cocks[temp2].cockType == CockTypesEnum.LIZARD; temp2++) { }
            transformations.CockLizard(temp2).applyEffect();
            changes++;
            dynStats("lus", 10, "scale", false);
            MutagenBonus("lib", 3);
        }
        //(CHANGE OTHER DICK)
        //Requires 1 lizard cock, multiple cocks
        if (player.lizardCocks() > 0 && player.cockTotal() > player.lizardCocks() && rand(4) == 0 && changes < changeLimit) {
            transformations.CockLizard(player.findFirstCockNotInType([CockTypesEnum.LIZARD])).applyEffect();
            changes++;
            dynStats("lus", 10, "scale", false);
            MutagenBonus("lib", 3);
        }
        //-Grows second lizard dick if only 1 dick
        if (player.lizardCocks() == 1 && player.cocks.length == 1 && rand(4) == 0 && changes < changeLimit) {
            transformations.CockLizard(1, player.cocks[0].cockLength).applyEffect();
            player.cocks[1].cockThickness = player.cocks[0].cockThickness;
            changes++;
            dynStats("lus", 10, "scale", false);
            MutagenBonus("lib", 3);
        }
        //--Worms leave if 100% lizard dicks?
        //Require mammals?
        if (player.lizardCocks() == player.cockTotal() && changes < changeLimit && player.hasStatusEffect(StatusEffects.Infested)) {
            outputText("[pg]Like rats from a sinking ship, worms escape from your body in a steady stream.  Surprisingly, the sensation is remarkably pleasant, similar to the pleasure of sexual release in a way.  Though they seem inexhaustible, the tiny, cum-slimed invertebrates slow to a trickle.  The larger worm-kin inside you stirs as if disturbed from a nap, coming loose from whatever moorings it had attached itself to in the interior of your form.  It slowly works its way up your urethra, stretching to an almost painful degree with every lurching motion.  Your dick bloats out around the base, stretched like the ovipositor on a bee-girl in order to handle the parasitic creature, but thankfully, the ordeal is a brief one.");
            if (player.balls > 1) outputText("  The remaining " + num2Text(player.balls - 1) + " slither out the pre-stretched holes with ease, though the last one hangs from your tip for a moment before dropping to the ground.");
            outputText("  The white creature joins its kin on the ground and slowly slithers away.  Perhaps they prefer mammals? In any event, <b>you are no longer infected with worms</b>.");
            player.removeStatusEffect(StatusEffects.Infested);
            player.buff("Infested").remove();
            changes++;
        }

        //[Increase Vaginal Capacity] - requires vagina, of course
        if (player.hasVagina() && player.statusEffectv1(StatusEffects.BonusVCapacity) < 200) {
            outputText("[pg]A gurgling sound issues from your abdomen, and you double over as a trembling ripple passes through your womb.  The flesh of your stomach roils as your internal organs begin to shift, and when the sensation finally passes, you are instinctively aware that your [vagina] is a bit deeper than it was before.");
            if (!player.hasStatusEffect(StatusEffects.BonusVCapacity)) {
                player.createStatusEffect(StatusEffects.BonusVCapacity, 0, 0, 0, 0);
            }
            player.addStatusValue(StatusEffects.BonusVCapacity, 1, 5 + rand(10));
        }

        if (player.vaginas.length == 1) {
            if (player.vaginas[0].vaginalWetness <= VaginaClass.WETNESS_DROOLING && changes < changeLimit && rand(2) == 0) {
                temp = player.vaginas.length;
                while (temp > 0) {
                    temp--;
                    if (player.vaginas[0].vaginalWetness < VaginaClass.WETNESS_DROOLING) player.vaginas[temp].vaginalWetness++;
                    changes++;
                }
                if (player.vaginas[0].vaginalWetness == VaginaClass.WETNESS_DROOLING) {
                    outputText("[pg]Your pussy feels hot and juicy, aroused and tender.  You cannot resist as your hands dive into your [vagina].  You quickly orgasm, squirting fluids everywhere.  <b>You are now a squirter</b>.");
                    player.orgasm();
                }
                if (player.vaginas[0].vaginalWetness < VaginaClass.WETNESS_DROOLING) {
                    outputText("[pg]Wow your wet down there just what on going on. When you put your hand to your " + vaginaDescript(temp) + ". Surprised you discover it's twice as more lubricated then before.");
                }
            }
            if (player.vaginas[0].vaginalLooseness <= VaginaClass.LOOSENESS_GAPING && changes < changeLimit && rand(3) == 0) {
                outputText("[pg]You grip your gut in pain as you feel your organs shift slightly.  When the pressure passes, you realize your [vagina] has grown larger, in depth AND size.");
                player.vaginas[0].vaginalLooseness++;
                changes++;
            }
            if ((player.lowerBody == LowerBody.NAGA || player.lowerBody == LowerBody.HYDRA) && player.vaginas[0].vaginalLooseness == VaginaClass.LOOSENESS_GAPING_WIDE && changes < changeLimit && rand(3) == 0) {
                transformations.VaginaNaga().applyEffect();
                changes++;
            }
        }

        //Snake tounge
        if (player.tongue.type != Tongue.SNAKE && rand(3) == 0 && changes < changeLimit) {
            outputText("[pg]");
            transformations.TongueSnake.applyEffect();
            player.addCurse("sen", 5, 1);
            changes++;
        }
        //Dragon tongue
        if (type == 1 && player.tongue.type != Tongue.DRACONIC && rand(3) == 0 && changes < changeLimit) {
            outputText("[pg]");
            transformations.TongueDraconic.applyEffect();
            changes++;
        }
        //Face with snake fangs
        if (player.tongue.type == Tongue.SNAKE && player.faceType != Face.SNAKE_FANGS && rand(3) == 0 && changes < changeLimit) {
            outputText("[pg]");
            transformations.FaceSnakeFangs.applyEffect();
            if (player.tailRecharge < 5) player.tailRecharge = 5;
            changes++;
        }
        //Snake lower body
        if (transformations.LowerBodySnake.isPossible() && rand(3) == 0 && changes < changeLimit) {
            outputText("[pg]");
            transformations.LowerBodySnake.applyEffect();
            changes++;
        }
        if (transformations.TailHydra.isPossible() && rand(3) == 0 && changes < changeLimit && type == 3) {
            transformations.TailHydra.applyEffect();
            changes++;
        }
        if (player.lowerBody == LowerBody.NAGA && player.lowerBody != LowerBody.HYDRA && rand(3) == 0 && changes < changeLimit && type == 3) {
            outputText("[pg]");
            transformations.LowerBodyHydra.applyEffect();
            changes++;
        }
        //Partial scales with color changes to red, green, white, blue, or black.  Rarely: purple or silver.
        if (!player.hasPartialCoat(Skin.SCALES) && (player.lowerBody == LowerBody.NAGA || player.lowerBody == LowerBody.HYDRA) && changes < changeLimit && rand(3) == 0) {
            if (rand(10) == 0) {
                colors = ["purple", "silver"];
            } else {
                colors = ["red", "green", "white", "blue", "black"];
            }
            outputText("[pg]");
            transformations.SkinScales(Skin.COVERAGE_LOW, {colors: colors}).applyEffect();
            changes++;
        }
        //Snake eyes
        if (player.hasPartialCoat(Skin.SCALES) && player.eyes.type != Eyes.SNAKE && player.eyes.type != Eyes.GORGON && rand(3) == 0 && changes < changeLimit) {
            outputText("[pg]");
            transformations.EyesSnake.applyEffect();
            changes++;
        }
        //Ears!
        if (player.ears.type != Ears.SNAKE && changes < changeLimit && rand(3) == 0 && type != 1) {
            outputText("[pg]");
			transformations.EarsSnake.applyEffect();
            changes++;
        }
        //Gorgon hair
        if (type == 0 && player.ears.type == Ears.SNAKE && transformations.HairGorgon.isPossible() && changes < changeLimit && rand(4) == 0) {
		    outputText("[pg]");
		    transformations.HairGorgon.applyEffect();
            changes++;
        }
        //Gorgon eyes
        if (type == 0 && player.hairType == Hair.GORGON && player.eyes.type == Eyes.SNAKE && player.eyes.type != Eyes.GORGON && rand(4) == 0 && changes < changeLimit) {
            outputText("[pg]");
            transformations.EyesGorgon.applyEffect();
            changes++;
        }
        //-Existing horns become draconic, max of 4, max length of 1'
        if (type == 1 && player.horns.type != Horns.DRACONIC_X4_12_INCH_LONG && player.eyes.type == Eyes.SNAKE && changes < changeLimit && rand(5) == 0) {
            //No dragon horns yet.
            if (player.horns.type != Horns.DRACONIC_X2 && player.horns.type != Horns.DRACONIC_X4_12_INCH_LONG && player.horns.type != Horns.ORCHID) {
                //Already have horns
                if (player.horns.count > 0) {
                    //High quantity demon horns
                    if (player.horns.type == Horns.DEMON && player.horns.count > 4) {
                        outputText("[pg]");
                        transformations.HornsDraconicQuadruple.applyEffect();
                    } else {
                        outputText("[pg]");
                        transformations.HornsDraconicDual.applyEffect();
                    }
                    changes++;
                }
                //No horns
                else {
                    //-If no horns, grow a pair
                    outputText("[pg]");
                    transformations.HornsDraconicDual.applyEffect();
                    changes++;
                }
            }
            //ALREADY DRAGON
            else {
                if (player.horns.type == Horns.DRACONIC_X2) {
                    if (player.horns.count < 12) {
                        outputText("[pg]");
                        transformations.HornsDraconicDual.applyEffect();
                        changes++;
                    }
                    //maxxed out, new row
                    else {
                        //--Next horns growth adds second row and brings length up to 12\"
                        outputText("[pg]");
                        transformations.HornsDraconicQuadruple.applyEffect();
                        changes++;
                    }
                }
            }
        }
        //Gain Dragon Ears
        if (type == 1 && changes < changeLimit && rand(3) == 0 && player.eyes.type == Eyes.SNAKE && player.ears.type != Ears.DRAGON) {
            outputText("[pg]");
			transformations.EarsDraconic.applyEffect();
            changes++;
        }
        //Grow Dragon Wings
        if (type == 1 && player.wings.type != Wings.DRACONIC_HUGE && player.ears.type == Ears.DRAGON && changes < changeLimit && rand(3) == 0) {
            if (player.wings.type == Wings.NONE) {
                outputText("[pg]");
			    transformations.WingsDraconicSmall.applyEffect();
            }
            //(If Small Dragon Wings Present)
            else if (player.wings.type == Wings.DRACONIC_SMALL) {
                outputText("[pg]");
			    transformations.WingsDraconicLarge.applyEffect();
            }
            //even larger dragon wings ^^
            else if (player.wings.type == Wings.DRACONIC_LARGE) {
                outputText("[pg]");
			    transformations.WingsDraconicHuge.applyEffect();
            }
            //(If other wings present)
            else {
                outputText("[pg]");
			    transformations.WingsDraconicSmall.applyEffect();
            }
            changes++;
        }
        if (type == 1 && player.racialScore(Races.DRAGON, false) >= 4 && changes < changeLimit && !player.hasPerk(PerkLib.DragonFireBreath)) {
            outputText("[pg]You feel something awakening within you... then a sudden sensation of choking grabs hold of your throat, sending you to your knees as you clutch and gasp for breath.  It feels like there's something trapped inside your windpipe, clawing and crawling its way up.  You retch and splutter and then, with a feeling of almost painful relief, you expel a bellowing roar from deep inside of yourself... with enough force that clods of dirt and shattered gravel are sent flying all around.  You look at the small crater you have literally blasted into the landscape with a mixture of awe and surprise.");
            outputText("[pg]It seems vouivre oil has awoken some kind of power within you... your throat and chest feel very sore. However, you doubt you'll be able to force out more than one such blast before resting.  (<b>Gained Perk: Dragon fire breath!</b>)");
            player.createPerk(PerkLib.DragonFireBreath, 0, 0, 0, 0);
            changes++;
        }
        if (type == 3 && player.isRace(Races.HYDRA, 1, false) && changes < changeLimit && !player.hasPerk(PerkLib.HydraAcidBreath)) {
            outputText("[pg]You feel sick, like very sick as if your stomach was bubbling up. You spontaneously vomit from all the heads below your waist but what comes out is not vomit. Your hydra heads retches out on the ground in front of you which is doused with smoking green fluids which begins to smoke right away as your powerful acid begin to dissolve whatever is beneath it. <b>It would seem you have developed the ability to use the hydra's infamous breath weapon.</b>  (<b>Gained Perk: Hydra acid breath!</b>)");
            player.createPerk(PerkLib.HydraAcidBreath, 0, 0, 0, 0);
            changes++;
        }
        //Propah Wings
        if (type == 2 && player.wings.type == Wings.NONE && player.lowerBody == LowerBody.NAGA && changes < changeLimit && (type == 1 || player.arms.type == Arms.HARPY) && rand(3) == 0) {
            outputText("[pg]");
			transformations.WingsCouatl.applyEffect();
            changes++;
        }
        //Remove old wings
        if (type == 2 && player.wings.type != Wings.COUATL && player.wings.type > Wings.NONE && changes < changeLimit && rand(3) == 0) {
            outputText("[pg]");
            transformations.WingsNone.applyEffect();
            changes++;
        }
        if (type == 3 && player.wings.type > Wings.NONE && changes < changeLimit && rand(3) == 0) {
            outputText("[pg]");
            transformations.WingsNone.applyEffect();
            changes++;
        }
        //Dragon Arms
        if (type == 1 && player.wings.type == Wings.DRACONIC_HUGE && player.arms.type != Arms.DRACONIC && changes < changeLimit && rand(3) == 0) {
            outputText("[pg]");
            transformations.ArmsDraconic.applyEffect();
            changes++;
        }
        //Feathery Arms
        if (type == 2 && !InCollection(player.arms.type, Arms.HARPY) && player.ears.type == Ears.SNAKE && changes < changeLimit && rand(3) == 0) {
            outputText("[pg]When you go to wipe your mouth form remains of the oil, instead of the usual texture of your [skin.type] on your lips, you feel feathers! ");
            transformations.ArmsHarpy.applyEffect();
            changes++;
        }
        //Hydra Arms
        if (type == 3 && !InCollection(player.arms.type, Arms.HYDRA) && player.ears.type == Ears.SNAKE && changes < changeLimit && rand(3) == 0) {
            outputText("[pg]");
            transformations.ArmsHydra.applyEffect();
            changes++;
        }

        //Feathery Hair
        if (type == 2 && transformations.HairFeather.isPossible() && player.wings.type == Wings.COUATL && changes < changeLimit && rand(3) == 0) {
            outputText("[pg]");
            transformations.HairFeather.applyEffect();
            changes++;
        }
        //Scales with color changes to red, green, white, blue, or black.  Rarely: purple or silver.
        if (!player.hasFullCoatOfType(Skin.SCALES) && ((type == 0 && player.eyes.type == Eyes.GORGON) || (type == 2 && player.hairType == 1)) && type != 1 && changes < changeLimit && rand(3) == 0) {
            if (rand(10) == 0) {
                colors = ["purple", "silver"];
            } else {
                colors = ["red", "green", "white", "blue", "black"];
            }
            outputText("[pg]");
            transformations.SkinScales(Skin.COVERAGE_COMPLETE, {colors: colors}).applyEffect();
            changes++;
        }
        if (type == 1 && player.wings.type == Wings.DRACONIC_LARGE && player.hasPartialCoat(Skin.DRAGON_SCALES) && changes < changeLimit && rand(3) == 0) {
            outputText("[pg]");
            transformations.SkinDragonScales().applyEffect();
            changes++;
        }
        if (type == 1 && player.wings.type == Wings.DRACONIC_LARGE && !player.isDagonScaleCovered() && changes < changeLimit && rand(3) == 0) {
            outputText("[pg]");
            transformations.SkinDragonScales(Skin.COVERAGE_LOW).applyEffect();
            changes++;
        }
        if (changes == 0) {
            outputText("[pg]Remakarbly, the ");
            if (type == 0) outputText("gorgon-oil");
            if (type == 1) outputText("vouivre-oil");
            if (type == 2) outputText("couatl-oil");
            if (type == 3) outputText("hydra scale");
            outputText(" has no effect.  Should you really be surprised at ");
            if (type == 0) outputText("gorgon-oil");
            if (type == 1) outputText("vouivre-oil");
            if (type == 2) outputText("couatl-oil");
            if (type == 3) outputText("hydra scale");
            outputText(" NOT doing anything?");
        }
        player.refillHunger(5);
    }

    public function superHummus(player:Player):void {
        clearOutput();
        if (debug) {
            outputText("You're about to eat the humus when you see it has bugs in it. Not wanting to eat bugged humus or try to debug it you throw it into the portal and find something else to eat.");
            player.destroyItems(consumables.HUMMUS2, 1);
            return;
        }
        outputText("You shovel the stuff into your face, not sure WHY you're eating it, but once you start, you just can't stop.  It tastes incredibly bland, and with a slight hint of cheese.");
        player.refillHunger(100);
        outputText("[pg]");
        transformations.HairHuman.applyEffect(false);
        if (player.isRace(Races.HUMAN, 1, false)) {
            outputText("[pg]You blink and the world twists around you.  You feel more like yourself than you have in a while, but exactly how isn't immediately apparent.  Maybe you should take a look at yourself?");
        } else {
            outputText("[pg]You cry out as the world spins around you.  You're aware of your entire body sliding and slipping, changing and morphing, but in the sea of sensation you have no idea exactly what's changing.  You nearly black out, and then it's over.  Maybe you had best have a look at yourself and see what changed?");
        }
        player.arms.type = Arms.HUMAN;
        player.eyes.type = Eyes.HUMAN;
        player.antennae.type = Antennae.NONE;
        transformations.FaceHuman.applyEffect(false);
        player.lowerBody = LowerBody.HUMAN;
        player.legCount = 2;
        player.wings.type = Wings.NONE;
        player.tailType = Tail.NONE;
        player.tailRecharge = 0;
        player.horns.count = 0;
        player.horns.type = Horns.NONE;
        player.ears.type = Ears.HUMAN;
        player.skin.setBaseOnly();
        player.skinAdj = "";
        player.tongue.type = Tongue.HUMAN;
        if (player.fertility > 15) player.fertility = 15;
        if (player.cumMultiplier > 50) player.cumMultiplier = 50;
        var virgin:Boolean = false;
        //Clear cocks
        while (player.cocks.length > 0) {
            player.removeCock(0, 1);
            trace("1 cock purged.");
        }
        //Reset dongs!
        if (player.gender == 1 || player.gender == 3) {
            player.createCock();
            player.cocks[0].cockLength = 6;
            player.cocks[0].cockThickness = 1;
            player.ballSize = 2;
            if (player.balls > 2) player.balls = 2;
        }
        //Non duders lose any nuts
        else {
            player.balls = 0;
            player.ballSize = 2;
        }
        //Clear vaginas
        while (player.vaginas.length > 0) {
            virgin = player.vaginas[0].virgin;
            player.removeVagina(0, 1);
            trace("1 vagina purged.");
        }
        //Reset vaginal virginity to correct state
        if (player.gender >= 2) {
            transformations.VaginaHuman().applyEffect(false);
            player.clitLength = .25;
        }
        //Tighten butt!
        player.butt.type = 2;
        player.hips.type = 2;
        if (player.ass.analLooseness > 1) player.ass.analLooseness = 1;
        if (player.ass.analWetness > 1) player.ass.analWetness = 1;
        //Clear breasts
        player.breastRows = [];
        player.createBreastRow();
        player.nippleLength = .25;
        //Girls and herms get bewbs back
        if (player.gender > 2) {

            player.breastRows[0].breastRating = 2;
        } else player.breastRows[0].breastRating = 0;
        player.gills.type = Gills.NONE;
        player.rearBody.type = RearBody.NONE;
        player.removeStatusEffect(StatusEffects.Uniball);
        player.removeStatusEffect(StatusEffects.BlackNipples);
        player.removeStatusEffect(StatusEffects.GlowingAsshole);
        player.removeStatusEffect(StatusEffects.GlowingNipples);
        player.vaginaType(0);
    }

    //Normal hummus
    public function regularHummus(player:Player):void {
        player.slimeFeed();
        clearOutput();
        var heightGain:int;
        var changes:Number = 0;
        var changeLimit:Number = 2;
        if (rand(2) == 0) changeLimit++;
        if (rand(2) == 0) changeLimit++;
        changeLimit += player.additionalTransformationChances;
        clearOutput();
        outputText("You shovel the stuff into your face, not sure WHY you're eating it, but once you start, you just can't stop.  It tastes incredibly bland, and with a slight hint of cheese.");
        player.refillHunger(5);
        if (player.blockingBodyTransformations()) changeLimit = 0;
        if (player.isRace(Races.HUMAN, 1, false)) {
            outputText("[pg]You blink and the world twists around you.  You feel more like yourself than you have in a while, but exactly how isn't immediately apparent.  Maybe you should take a look at yourself?");
        } else {
            outputText("[pg]You cry out as the world spins around you.  You're aware of your entire body sliding and slipping, changing and morphing, but in the sea of sensation you have no idea exactly what's changing.  You nearly black out, and then it's over.  Maybe you had best have a look at yourself and see what changed?");
        }
        //-----------------------
        // MAJOR TRANSFORMATIONS
        //-----------------------
        //1st priority: Change lower body to bipedal.
        if (player.lowerBody != LowerBody.HUMAN && changes < changeLimit && rand(3) == 0) {
            outputText("[pg]");
            transformations.LowerBodyHuman.applyEffect();
            changes++;
        }
        //Remove Incorporeality Perk
        if (player.hasPerk(PerkLib.Incorporeality) && changes < changeLimit && rand(3) == 0) {
            outputText("[pg]You feel a strange sensation in your [legs] as they start to feel more solid. They become more opaque until finally, you can no longer see through your [legs]. \n<b>(Perk Lost: Incorporeality!)</b>");
            player.removePerk(PerkLib.Incorporeality);
            changes++;
        }
        //-Skin color change – tan, olive, dark, light
        if (!InCollection(player.skinColor, HumanRace.HumanSkinColors) && changes < changeLimit && rand(3) == 0) {
            changes++;
            outputText("[pg]It takes a while for you to notice, but <b>");
            if (player.isFurCovered()) outputText("the skin under your [fur color] " + player.skinDesc);
            else outputText("your " + player.skinDesc);
            outputText(" has changed to become ");
            player.skinColor = randomChoice(HumanRace.HumanSkinColors)
            outputText(player.skinColor + " colored.</b>");
        }
        //Change skin to normal
        if (!player.hasPlainSkinOnly() && rand(3) == 0 && changes < changeLimit) {
            if (player.skinAdj != "") player.skinAdj = "";
            outputText("[pg]");
            transformations.SkinPlain.applyEffect();
            changes++;
        }
        //Raiju / Other skin pattern removal
        if (player.skin.base.pattern != Skin.PATTERN_NONE) {
            outputText("[pg]");
            transformations.SkinPatternNone.applyEffect();
            changes++;
        }
        //-----------------------
        // MINOR TRANSFORMATIONS
        //-----------------------
        //-Human arms (copy this for goblin ale, mino blood, equinum, centaurinum, canine pepps, demon items)
        if (changes < changeLimit && !InCollection(player.arms.type, Arms.HUMAN) && rand(3) == 0) {
            outputText("[pg]");
            transformations.ArmsHuman.applyEffect();
            changes++;
        }
        //-Human face
        if (player.faceType != Face.HUMAN && changes < changeLimit && rand(3) == 0) {
            outputText("[pg]");
            transformations.FaceHuman.applyEffect();
            changes++;
        }
        //-Human tongue
        if (player.tongue.type != Tongue.HUMAN && changes < changeLimit && rand(3) == 0) {
            outputText("[pg]");
            transformations.TongueHuman.applyEffect();
            changes++;
        }
        //Remove odd eyes
        if (changes < changeLimit && rand(3) == 0 && player.eyes.type > Eyes.HUMAN) {
            outputText("[pg]");
            transformations.EyesHuman.applyEffect();
            changes++;
        }
        //-Gain human ears (If you have human face)
        if ((player.ears.type != Ears.HUMAN && player.faceType == Face.HUMAN) && changes < changeLimit && rand(3) == 0) {
            outputText("[pg]");
            transformations.EarsHuman.applyEffect();
            changes++;
        }
        // Remove gills
        if (rand(4) == 0 && player.hasGills() && changes < changeLimit) {
            outputText("[pg]");
            transformations.GillsNone.applyEffect();
            changes++;
        }
        //Black Nipples Turn Back:
        if (player.hasStatusEffect(StatusEffects.BlackNipples) && changes < changeLimit && rand(3) == 0) {
            transformations.NipplesNoColor.applyEffect();
            changes++;
        }
        //Glowing Nipples Turn Back:
        if (player.hasStatusEffect(StatusEffects.GlowingNipples) && changes < changeLimit && rand(3) == 0) {
            outputText("[pg]Your nipple tingle before their coloration turns back to normal.");
            changes++;
            player.removeStatusEffect(StatusEffects.GlowingNipples);
        }

        //Remove special hairs
        if (changes < changeLimit && player.hairType != Hair.NORMAL && rand(3) == 0) {
		    outputText("[pg]");
		    transformations.HairHuman.applyEffect();
            changes++;
        }

        //Restart hair growth
        if (flags[kFLAGS.HAIR_GROWTH_STOPPED_BECAUSE_LIZARD] > 0 && changes < changeLimit && rand(3) == 0) {
            outputText("[pg]You feel an itching sensation in your scalp as you realize the change. <b>Your hair is growing normally again!</b>");
            //Turn hair growth on.
            flags[kFLAGS.HAIR_GROWTH_STOPPED_BECAUSE_LIZARD] = 0;
            changes++;
        }
        //-----------------------
        // EXTRA PARTS REMOVAL
        //-----------------------
        //Removes antennae
        if (player.antennae.type > Antennae.NONE && rand(3) == 0 && changes < changeLimit) {
            outputText("[pg]The muscles in your brow clench tightly, and you feel a tremendous pressure on your upper forehead.  When it passes, you touch yourself and discover your [antennae] have vanished!");
            player.antennae.type = Antennae.NONE;
            changes++;
        }
        //Removes horns
        if (changes < changeLimit && player.horns.count > 0 && rand(3) == 0) {
            outputText("[pg]");
            transformations.HornsNone.applyEffect();
            changes++;
        }
        //Removes wings
        if (!InCollection(player.wings.type, Wings.NONE) && rand(3) == 0 && changes < changeLimit) {
            outputText("[pg]");
            transformations.WingsNone.applyEffect();
            changes++;
        }
        //Removes tail
        if (player.tailType > Tail.NONE && rand(3) == 0 && changes < changeLimit) {
            outputText("[pg]");
            transformations.TailNone.applyEffect();
            changes++;
        }
        //Revert rear body to normal
        if (player.rearBody.type != RearBody.NONE && changes < changeLimit && rand(3) == 0) {
            outputText("[pg]");
            transformations.RearBodyNone.applyEffect();
            changes++;
        }
        //Increase height up to 5 feet.
        if (rand(2) == 0 && changes < changeLimit && player.tallness < 60) {
            heightGain = rand(5) + 3;
            //Slow rate of growth near ceiling
            if (player.tallness > 90) heightGain = Math.floor(heightGain / 2);
            //Never 0
            if (heightGain == 0) heightGain = 1;
            //Flavor texts.  Flavored like 1950's cigarettes. Yum.
            if (heightGain < 5) outputText("[pg]You shift uncomfortably as you realize you feel off balance.  Gazing down, you realize you have grown SLIGHTLY taller.");
            if (heightGain >= 5 && heightGain < 7) outputText("[pg]You feel dizzy and slightly off, but quickly realize it's due to a sudden increase in height.");
            if (heightGain == 7) outputText("[pg]Staggering forwards, you clutch at your head dizzily.  You spend a moment getting your balance, and stand up, feeling noticeably taller.");
            player.tallness += heightGain;
            changes++;
        }
        //Decrease height down to a minimum of 7 feet.
        if (rand(2) == 0 && changes < changeLimit && player.tallness > 84) {
            outputText("[pg]Your skin crawls, making you close your eyes and shiver.  When you open them again the world seems... different.  After a bit of investigation, you realize you've become shorter!\n");
            player.tallness -= 1 + rand(3);
            changes++;
        }
        //-----------------------
        // SEXUAL TRANSFORMATIONS
        //-----------------------
        //Remove additional cocks
        if (player.cocks.length > 1 && rand(3) == 0 && changes < changeLimit) {
            player.killCocks(1);
            outputText("[pg]You have a strange feeling as your crotch tingles.  Opening your [armor], <b>you realize that one of your cocks have vanished completely!</b>");
            changes++;
        }
        //Remove additional balls
        if (player.balls > 2 && rand(3) == 0 && changes < changeLimit) {
            if (player.ballSize > 2) {
                if (player.ballSize > 5) player.ballSize -= 1 + rand(3);
                player.ballSize -= 1;
                outputText("[pg]Your scrotum slowly shrinks, settling down at a smaller size.  <b>Your [balls] are smaller now.</b>[pg]");
            } else {
                transformations.BallsDuo.applyEffect();
            }
            changes++;
        }
        //Change cock back to normal
        if (player.hasCock() && changes < changeLimit) {
            if (rand(3) == 0 && player.cocks[0].cockType != CockTypesEnum.HUMAN) {
                transformations.CockHuman().applyEffect();
                changes++;
            }
        }
        //Shrink oversized cocks
        if (player.hasCock() && player.biggestCockLength() > 12 && rand(3) == 0 && changes < changeLimit) {
            var idx:int = player.biggestCockIndex();
            if (player.cocks.length == 1) outputText("[pg]You feel a tingling sensation as your cock shrinks to a smaller size!");
            else outputText("[pg]You feel a tingling sensation as the largest of your cocks shrinks to a smaller size!");
            player.cocks[idx].cockLength -= (rand(10) + 2) / 10;
            if (player.cocks[idx].cockThickness > 1.5) {
                outputText(" Your " + cockDescript(idx) + " definitely got a bit thinner as well.");
                player.cocks[idx].cockThickness -= (rand(4) + 1) / 10;
            }
            changes++;
        }
        //Remove additional breasts
        if (changes < changeLimit && player.breastRows.length > 1 && rand(3) == 0 && !flags[kFLAGS.HYPER_HAPPY]) {
            changes++;
            outputText("[pg]You stumble back when your center of balance shifts, and though you adjust before you can fall over, you're left to watch in awe as your bottom-most " + breastDescript(player.breastRows.length - 1) + " shrink down, disappearing completely into your ");
            if (player.breastRows.length >= 3) outputText("abdomen");
            else outputText("chest");
            outputText(". The " + nippleDescript(player.breastRows.length - 1) + "s even fade until nothing but ");
            if (player.isFurCovered()) outputText(player.furColor + " " + player.skinDesc);
            else outputText(player.skinColor + " " + player.skinDesc);
            outputText(" remains. <b>You've lost a row of breasts!</b>");
            dynStats("sen", -5);
            player.removeBreastRow(player.breastRows.length - 1, 1);
            changes++;
        }
        //Remove extra nipples
        if (player.averageNipplesPerBreast() > 1 && rand(3) == 0 && changes < changeLimit) {
            transformations.NipplesPerBreastOne.applyEffect();
            changes++;
        }
        //Shrink tits!
        if (changes < changeLimit && rand(3) == 0 && player.biggestTitSize() > 6) {
            player.shrinkTits();
            changes++;
        }
        //Change vagina back to normal
        if (changes < changeLimit && rand(3) == 0 && (player.vaginaType() == 5 || player.vaginaType() == 6) && player.hasVagina()) {
            transformations.VaginaHuman().applyEffect();
            changes++;
        } else if (changes < changeLimit && rand(3) == 0 && (player.vaginaType() != 5 || player.vaginaType() != 6) && player.vaginaType() != VaginaClass.HUMAN && player.hasVagina()) {
            outputText("[pg]Something invisible brushes against your sex, making you twinge.  Undoing your clothes, you take a look at your vagina and find that it has turned back to its old human qualities.");
            player.vaginaType(0);
            changes++;
        }
        //Fertility Decrease:
        if (player.hasVagina() && rand(3) == 0 && changes < changeLimit) {
            outputText("[pg]The vague numbness in your skin sinks slowly downwards, and you put a hand on your lower stomach as the sensation centers itself there.  ");
            dynStats("sen", -2);
            //High fertility:
            if (player.fertility >= 30) outputText("It feels like your overcharged reproductive organs have simmered down a bit.");
            //Average fertility:
            else if (player.fertility >= 10) outputText("You feel like you have dried up a bit inside; you are left feeling oddly tranquil.");
            //[Low/No fertility:
            else {
                outputText("Although the numbness makes you feel serene, the hummus has no effect upon your ");
                if (player.fertility > 0) outputText("mostly ");
                outputText("sterile system.");
                if (player.cor > 70) outputText("  For some reason the fact that you cannot function as nature intended makes you feel helpless and submissive.  Perhaps the only way to be a useful creature now is to find a dominant, fertile being willing to plow you full of eggs? You shake the alien, yet oddly alluring thought away.");
            }
            player.fertility -= 1 + rand(3);
            if (player.fertility < 10 && player.gender >= 2) player.fertility = 10;
            if (player.fertility < 5) player.fertility = 5;
            changes++;
        }
        //Cum Multiplier Decrease:
        if (player.hasCock() && player.cumMultiplier > 5 && rand(3) == 0 && changes < changeLimit) {
            outputText("[pg]You feel a strange tingling sensation in your ");
            if (player.hasBalls()) outputText("balls");
            else outputText("groin");
            outputText(" as you can feel the density reducing. You have a feeling you're going to produce less cum now.");
            player.cumMultiplier -= (1 + (rand(20) / 10));
            if (player.cumMultiplier < 1) player.cumMultiplier = 1;
            changes++;
        }
        flags[kFLAGS.TIMES_TRANSFORMED] += changes;
    }

    public function whiskerFruit(player:Player):void {
        var choice:int;
        var changes:Number = 0;
        var changeLimit:Number = 2;
		var crit:Number = int(Math.random() * 20) / 10 + 2;
        var temp2:Number = 0;
        var temp3:Number = 0;
        if (rand(2) == 0) changeLimit++;
        if (rand(2) == 0) changeLimit++;
        if (rand(2) == 0) changeLimit++;
        changeLimit += player.additionalTransformationChances;
        //Text go!
        clearOutput();
        outputText("You take a bite of the fruit and gulp it down. It's thick and juicy and has an almost overpowering sweetness. Nevertheless, it is delicious and you certainly could use a meal.  You devour the fruit, stopping only when the hard, nubby pit is left; which you toss aside.");
        //STAT CHANGES
        //Speed raises up to 75
        if (rand(3) == 0 && changes < changeLimit && transformations.MutagenSpdCat.isPossible()) {
            outputText("[pg]");
            transformations.MutagenSpdCat.applyEffect();
            changes++;
        }
        //Strength raises to 40
        if (rand(3) == 0 && changes < changeLimit && transformations.MutagenStrCat.isPossible()) {
            outputText("[pg]");
            transformations.MutagenStrCat.applyEffect();
            changes++;
        }
        //Toughness drops if over 50
        //Does not add to change total
        if (rand(3) == 0 && transformations.MutagenCurseTouCat.isPossible()) {
            outputText("[pg]");
            transformations.MutagenCurseTouCat.applyEffect();
        }
        //Intelliloss
        if (rand(3) == 0 && changes < changeLimit) {
            //low intelligence
            if (player.inte < 15) outputText("[pg]You feel like something is slipping away from you but can't figure out exactly what's happening.  You scrunch up your [face], trying to understand the situation.  Before you can reach any kind of conclusion, something glitters in the distance, distracting your feeble mind long enough for you to forget the problem entirely.");
            //medium intelligence
            else if (player.inte < 50) {
                outputText("[pg]Your mind feels somewhat sluggish, and you wonder if you should just lie down ");
                if (rand(2) == 0) {
                    outputText("somewhere and ");
                    switch (rand(3)) {
                        case 0:
                            outputText("toss a ball around or something");
                            break;
                        case 1:
                            outputText("play with some yarn");
                            break;
                        case 2:
                            outputText("take a nap and stop worrying");
                            break;
                    }
                } else outputText("in the sun and let your troubles slip away");
                outputText(".");
            }
            //High intelligence
            else outputText("[pg]You start to feel a bit dizzy, but the sensation quickly passes.  Thinking hard on it, you mentally brush away the fuzziness that seems to permeate your brain and determine that this fruit may have actually made you dumber.  It would be best not to eat too much of it.");
            player.addCurse("int", 1, 1);
            changes++;
        }
        //Libido gain
        if (changes < changeLimit && rand(3) == 0) {
            if (transformations.MutagenLibSensCat.isPossible())
                changes++; //compromise for "fantasy". And you still get your debuff. Sounds fair.
            transformations.MutagenLibSensCat.applyEffect();
        }
        if (player.blockingBodyTransformations()) changeLimit = 0;
        //Sexual changes would go here if I wasn't a tard.
        //Heat
        if (rand(4) == 0 && changes < changeLimit) {
            var intensified:Boolean = player.inHeat;
            if (player.goIntoHeat(false)) {
                if (intensified) {
                    if (rand(2) == 0) outputText("[pg]The itch inside your [vagina] is growing stronger, and you desperately want to find a nice cock to massage the inside.");
                    else outputText("[pg]The need inside your [vagina] grows even stronger.  You desperately need to find a mate to 'scratch your itch' and fill your womb with kittens.  It's difficult NOT to think about a cock slipping inside your moist fuck-tunnel, and at this point you'll have a hard time resisting ANY male who approaches.");
                } else {
                    outputText("[pg]The interior of your [vagina] clenches tightly, squeezing with reflexive, aching need.  Your skin flushes hot ");
                    if (player.isFurCovered()) outputText("underneath your fur ");
                    outputText("as images and fantasies ");
                    if (player.cor < 50) outputText("assault ");
                    else outputText("fill ");
                    outputText(" your mind.  Lithe cat-boys with their perfect, spine-covered cocks line up behind you, and you bend over to present your needy pussy to them.  You tremble with the desire to feel the exotic texture of their soft barbs rubbing your inner walls, smearing your [vagina] with their cum as you're impregnated.  Shivering, you recover from the fantasy and pull your fingers from your aroused sex.  <b>It would seem you've gone into heat!</b>");
                }
                changes++;
            }
        }

        //Shrink the boobalies down to A for men or C for girls.
        if (changes < changeLimit && rand(4) == 0 && !flags[kFLAGS.HYPER_HAPPY]) {
            temp2 = 0;
            temp3 = 0;
            //Determine if shrinkage is required
            //and set temp2 to threshold
            if (!player.hasVagina() && player.biggestTitSize() > 2) temp2 = 2;
            else if (player.biggestTitSize() > 4) temp2 = 4;
            //IT IS!
            if (temp2 > 0) {
                //temp3 stores how many rows are changed
                temp3 = 0;
                for (var k:Number = 0; k < player.breastRows.length; k++) {
                    //If this row is over threshold
                    if (player.breastRows[k].breastRating > temp2) {
                        //Big change
                        if (player.breastRows[k].breastRating > 10) {
                            player.breastRows[k].breastRating -= 2 + rand(3);
                            if (temp3 == 0) outputText("[pg]The [breasts] on your chest wobble for a second, then tighten up, losing several cup-sizes in the process!");
                            else outputText("  The change moves down to your " + num2Text2(k + 1) + " row of [breasts]. They shrink greatly, losing a couple cup-sizes.");
                        }
                        //Small change
                        else {
                            player.breastRows[k].breastRating -= 1;
                            if (temp3 == 0) outputText("[pg]All at once, your sense of gravity shifts.  Your back feels a sense of relief, and it takes you a moment to realize your " + breastDescript(k) + " have shrunk!");
                            else outputText("  Your " + num2Text2(k + 1) + " row of " + breastDescript(k) + " gives a tiny jiggle as it shrinks, losing some off its mass.");
                        }
                        //Increment changed rows
                        temp3++;
                    }
                }
            }
            //Count that tits were shrunk
            if (temp3 > 0) changes++;
        }
        //Multiboobages
        if (changes < changeLimit && player.breastRows.length > 0) {
            //if bigger than A cup
            if (player.breastRows[0].breastRating > 0 && player.vaginas.length > 0) {
                //Catto only get 3 rows of tits! ORMAEL HAS SPOKEN
                if (player.breastRows.length < 3 && rand(2) == 0 && changes < changeLimit) {
                    //Store choice to the index of the newest row
                    choice = player.breastRows.length - 1;
                    //Breasts are too small to grow a new row, so they get bigger first
                    //But ONLY if player has a vagina (dont want dudes weirded out)
                    if (player.vaginas.length > 0 && player.breastRows[0].breastRating <= player.breastRows.length-1) {
                        outputText("[pg]Your [breasts] feel constrained and painful against your top as they grow larger by the moment, finally stopping as they reach ");
                        player.breastRows[0].breastRating += 2;
                        outputText(player.breastCup(0) + " size.  But it doesn't stop there, you feel a tightness beginning lower on your torso...");
                        changes++;
                    }
                    //Had 1 row to start
                    if (player.breastRows.length == 1) {
                        //1 size below primary breast row!
                        transformations.CopyBreastRow().applyEffect();
                        dynStats("lus", 5, "scale", false);
                        player.addCurse("sen", 6, 1);
                        changes++;
                    }
                    //Many breast Rows - requires larger primary tits...
                    if (player.breastRows.length > 1 && player.breastRows[0].breastRating > player.breastRows.length+1) {
                        dynStats("lus", 5, "scale", false);
                        player.addCurse("sen", 6, 1);
                        //New row's size = the size of the row above -1
                        transformations.CreateBreastRow(player.breastRows[choice].breastRating - 1).applyEffect();
                        changes++;
                    }
                    //Extra sensitive if crit
                    if (crit > 1) {
                        if (crit > 2) {
                            outputText("[pg]You heft your new chest experimentally, exploring the new flesh with tender touches.  Your eyes nearly roll back in your head from the intense feelings.");
                            dynStats("lus", 15)
                            player.addCurse("sen", 6, 1);
                        } else {
                            outputText("  You touch your new nipples with a mixture of awe and desire, the experience arousing beyond measure.  You squeal in delight, nearly orgasming, but in time finding the willpower to stop yourself.");
                            dynStats("lus", 10, "scale", false);
                            player.addCurse("sen", 3, 1);
                        }
                    }
                }
                //If already has max catto breasts!
                else if (rand(2) == 0) {
                    //Check for size mismatches, and move closer to spec!
                    choice = player.breastRows.length;
                    temp2 = 0;
                    var evened:Boolean = false;
                    //Check each row, and if the row above or below it is
                    while (choice > 1 && temp2 == 0) {
                        choice--;
                        //Gimme a sec
                        if (player.breastRows[choice].breastRating + 1 < player.breastRows[choice - 1].breastRating) {
                            if (!evened) {
                                evened = true;
                                outputText("\n");
                            }
                            outputText("\nYour ");
                            if (choice > 4) outputText("");
                            else outputText(num2Text2(choice));
                            outputText("row of " + breastDescript(choice) + " grows larger, as if jealous of the jiggling flesh above.");
                            temp2 = (player.breastRows[choice - 1].breastRating) - player.breastRows[choice].breastRating - 1;
                            if (temp2 > 5) temp2 = 5;
                            if (temp2 < 1) temp2 = 1;
                            player.breastRows[choice].breastRating += temp2;
                        }
                    }
                }
            }
        }
        //Cat dangly-doo.
        if (player.cockTotal() > 0 && player.catCocks() < player.cockTotal() && (player.ears.type == Ears.CAT || rand(3) > 0) && (player.tailType == Tail.CAT || rand(3) > 0) && changes < changeLimit && rand(4) == 0) {
            //loop through and find a non-cat wang.
            for (var i:Number = 0; i < player.cockTotal() && player.cocks[i].cockType == CockTypesEnum.CAT; i++) {
            }
            if (player.cocks[i].cockType != CockTypesEnum.CAT) {
                transformations.CockCat(i).applyEffect();
                changes++;
            }
        }
        //Cat penorz shrink
        if (player.catCocks() > 0 && rand(4) == 0 && changes < changeLimit && !flags[kFLAGS.HYPER_HAPPY]) {
            //loop through and find a cat wang.
            choice = 0;
            for (var j:Number = 0; j < (player.cockTotal()); j++) {
                if (player.cocks[j].cockType == CockTypesEnum.CAT && player.cocks[j].cockLength > 6) {
                    choice = 1;
                    break;
                }
            }
            if (choice == 1) {
                //lose 33% size until under 10, then lose 2" at a time
                if (player.cocks[j].cockLength > 16) {
                    outputText("[pg]Your " + cockDescript(j) + " tingles, making your sheath feel a little less tight.  It dwindles in size, losing a full third of its length and a bit of girth before the change finally stops.");
                    player.cocks[j].cockLength *= .66;
                } else if (player.cocks[j].cockLength > 6) {
                    outputText("[pg]Your " + cockDescript(j) + " tingles and withdraws further into your sheath.  If you had to guess, you'd say you've lost about two inches of total length and perhaps some girth.");
                    player.cocks[j].cockLength -= 2;
                }
                if (player.cocks[j].cockLength / 5 < player.cocks[j].cockThickness && player.cocks[j].cockThickness > 1.25) player.cocks[j].cockThickness = player.cocks[j].cockLength / 6;
                //Check for any more!
                temp2 = 0;
                j++;
                for (j; j < player.cocks.length; j++) {
                    //Found another cat wang!
                    if (player.cocks[j].cockType == CockTypesEnum.CAT) {
                        //Long enough - change it
                        if (player.cocks[j].cockLength > 6) {
                            if (player.cocks[j].cockLength > 16)
                                player.cocks[j].cockLength *= .66;
                            else if (player.cocks[j].cockLength > 6)
                                player.cocks[j].cockLength -= 2;
                            //Thickness adjustments
                            if (player.cocks[j].cockLength / 5 < player.cocks[j].cockThickness && player.cocks[j].cockThickness > 1.25) player.cocks[j].cockThickness = player.cocks[j].cockLength / 6;
                            temp2 = 1;
                        }
                    }
                }
                //(big sensitivity boost)
                outputText("  Although the package is smaller, it feels even more sensitive – as if it retained all sensation of its larger size in its smaller form.");
                player.addCurse("sen", 5, 1);
                //Make note of other dicks changing
                if (temp2 == 1) outputText("  Upon further inspection, all your " + Appearance.cockNoun(CockTypesEnum.CAT) + "s have shrunk!");
                changes++;
            }
        }
        //Body type changes
        //DA EARZ
        if (player.ears.type != Ears.CAT && rand(3) == 0 && changes < changeLimit) {
            outputText("[pg]");
			transformations.EarsCat.applyEffect();
            changes++;
        }

        //DA TAIL (IF ALREADY HAZ URZ)
        if (!InCollection(player.tailType, Tail.CAT, Tail.BURNING, Tail.TWINKASHA) && (player.ears.type == Ears.CAT || player.ears.type == Ears.DISPLACER) && rand(3) == 0 && changes < changeLimit) {
            outputText("[pg]");
            transformations.TailCat.applyEffect();
            changes++;
        }

        //Da paws (if already haz tail)
        if (InCollection(player.tailType, Tail.CAT, Tail.NEKOMATA_FORKED_1_3, Tail.NEKOMATA_FORKED_2_3) && rand(3) == 0 && changes < changeLimit && player.lowerBody != LowerBody.CAT) {
            outputText("[pg]");
            transformations.LowerBodyCat(2).applyEffect();
            changes++;
        }

        //Da cat arm
        if (player.lowerBody == LowerBody.CAT && rand(3) == 0 && changes < changeLimit && player.arms.type != Arms.CAT) {
            outputText("[pg]");
            transformations.ArmsCat.applyEffect();
            changes++;
        }


        //CAT-FACE!

        // Prevents player with cat face from switching to cat canines then back to cat face and wasting changes
        var startedWithCatFace: Boolean = player.faceType == Face.CAT;

        if (rand(3) == 0 && changes < changeLimit && player.faceType != Face.CAT_CANINES) {
            //This scenario exist only for cat tf that have no furry version!
            outputText("[pg]");
            transformations.FaceCatCanines.applyEffect();
            changes++;
        }

        if (rand(3) == 0 && changes < changeLimit && player.faceType != Face.CAT && !startedWithCatFace) {
            outputText("[pg]");
            transformations.FaceCat.applyEffect();
            changes++;
        }

        //CAT TOUNGE CUZ WHY NOT?
        if (transformations.TongueCat.isPossible() && rand(3) == 0 && changes < changeLimit) {
            outputText("[pg]");
            transformations.TongueCat.applyEffect();
            changes++;
        }
        //DAT EYES
        if (rand(3) == 0 && changes < changeLimit && player.tongue.type == Tongue.CAT && player.eyes.type != Eyes.CAT && player.eyes.type != Eyes.INFERNAL) {
            outputText("[pg]");
            transformations.EyesCat.applyEffect();
            changes++;
        }

        //switching between low and high coverage of fur
        if (player.isFurCovered() && rand(3) == 0 && changes < changeLimit) {
            if (player.skin.coverage == Skin.COVERAGE_COMPLETE || player.skin.coverage == Skin.COVERAGE_HIGH) {
                outputText("[pg]What used to be a dense coat of fur begins to fall in patches on the ground leaving you with just enough fur to cover some area of your body.  <b>Some area of your body are now partially covered with fur!</b>");
                player.skin.coverage = Skin.COVERAGE_LOW;
                changes++;
            } else {
                outputText("[pg]You feel your skin tickle as more fur grows to cover the areas you did not already had fur at. Guess you have truly joined the furry club now.  <b>Your skin is now entirely coated with fur.</b>");
                player.skin.coverage = Skin.COVERAGE_COMPLETE;
                changes++;
            }
        }

        //TURN INTO A FURRAH!  OH SHIT
        if ((player.eyes.type == Eyes.CAT || player.eyes.type == Eyes.DISPLACER) && rand(3) == 0 && changes < changeLimit && !player.hasCoatOfType(Skin.FUR)) {
            if (!player.hasCoatOfType(Skin.FUR)) {
                outputText("[pg]");
                transformations.SkinPlain.applyEffect();
            }

            outputText("[pg]Your [skin.type] begins to tingle, then itch. ");
            transformations.SkinFur(Skin.COVERAGE_COMPLETE, {colors: CatRace.catFurColors }).applyEffect();

            changes++;
        }
        // Remove gills
        if (rand(4) == 0 && player.hasGills() && changes < changeLimit) {
            outputText("[pg]");
            transformations.GillsNone.applyEffect();
            changes++;
        }
        if (changes < changeLimit) {
            if (rand(2) == 0) outputText(player.modThickness(5, 2));
            if (rand(2) == 0) outputText(player.modTone(76, 2));
            if (player.gender < 2) if (rand(2) == 0) outputText(player.modFem(65, 1));
            else outputText(player.modFem(85, 2));
        }
        //FAILSAFE CHANGE
        if (changes == 0) {
            outputText("[pg]Inhuman vitality spreads through your body, invigorating you!\n");
            HPChange(50*player.postConsumptionMlt(), true);
            dynStats("lus", Math.round(3*player.postConsumptionMlt()), "scale", false);
        }
        player.refillHunger(20);
        flags[kFLAGS.TIMES_TRANSFORMED] += changes;
    }

    public function ghastlyFruit(player:Player):void {
        var choice:int;
        var changes:Number = 0;
        var changeLimit:Number = 2;
        var temp2:Number = 0;
        var temp3:Number = 0;
        if (rand(2) == 0) changeLimit++;
        if (rand(2) == 0) changeLimit++;
        if (rand(2) == 0) changeLimit++;
        changeLimit += player.additionalTransformationChances;
        //Text go!
        clearOutput();
        outputText("You take a bite of the fruit and gulp it down. It's thick and juicy and has an almost overpowering sweetness. Nevertheless, it is delicious and you certainly could use a meal.  You devour the fruit, stopping only when the hard, nubby pit is left; which you toss aside.");
        //STAT CHANGES
        //Speed raises up to 75
        if (rand(3) == 0 && changes < changeLimit && transformations.MutagenSpdCat.isPossible()) {
            outputText("[pg]");
            transformations.MutagenSpdCat.applyEffect();
            changes++;
        }
        //Strength raises to 40
        if (rand(3) == 0 && changes < changeLimit && transformations.MutagenStrCat.isPossible()) {
            outputText("[pg]");
            transformations.MutagenStrCat.applyEffect();
            changes++;
        }
        //Toughness drops if over 50
        //Does not add to change total
        if (rand(3) == 0 && transformations.MutagenCurseTouCat.isPossible()) {
            outputText("[pg]");
            transformations.MutagenCurseTouCat.applyEffect();
        }

        if (rand(3) == 0 && changes < changeLimit && transformations.MutagenIntCat.isPossible()) {
            outputText("[pg]");
            transformations.MutagenIntCat.applyEffect();
            changes++;
        }

        //Libido gain
        if (changes < changeLimit && rand(3) == 0) {
            if (transformations.MutagenLibSensCat.isPossible())
                changes++; //compromise for "fantasy". And you still get your debuff. Sounds fair.
            transformations.MutagenLibSensCat.applyEffect();
        }
        if (player.blockingBodyTransformations()) changeLimit = 0;
        //Sexual changes would go here if I wasn't a tard.
        //Heat
        if (rand(4) == 0 && changes < changeLimit) {
            var intensified:Boolean = player.inHeat;
            if (player.goIntoHeat(false)) {
                if (intensified) {
                    if (rand(2) == 0) outputText("[pg]The itch inside your [vagina] is growing stronger, and you desperately want to find a nice cock to massage the inside.");
                    else outputText("[pg]The need inside your [vagina] grows even stronger.  You desperately need to find a mate to 'scratch your itch' and fill your womb with kittens.  It's difficult NOT to think about a cock slipping inside your moist fuck-tunnel, and at this point you'll have a hard time resisting ANY male who approaches.");
                } else {
                    outputText("[pg]The interior of your [vagina] clenches tightly, squeezing with reflexive, aching need.  Your skin flushes hot ");
                    if (player.isFurCovered()) outputText("underneath your fur ");
                    outputText("as images and fantasies ");
                    if (player.cor < 50) outputText("assault ");
                    else outputText("fill ");
                    outputText(" your mind.  Lithe cat-boys with their perfect, spine-covered cocks line up behind you, and you bend over to present your needy pussy to them.  You tremble with the desire to feel the exotic texture of their soft barbs rubbing your inner walls, smearing your [vagina] with their cum as you're impregnated.  Shivering, you recover from the fantasy and pull your fingers from your aroused sex.  <b>It would seem you've gone into heat!</b>");
                }
                changes++;
            }
        }

        //Shrink the boobalies down to A for men or C for girls.
        if (changes < changeLimit && rand(4) == 0 && !flags[kFLAGS.HYPER_HAPPY]) {
            temp2 = 0;
            temp3 = 0;
            //Determine if shrinkage is required
            //and set temp2 to threshold
            if (!player.hasVagina() && player.biggestTitSize() > 2) temp2 = 2;
            else if (player.biggestTitSize() > 4) temp2 = 4;
            //IT IS!
            if (temp2 > 0) {
                //temp3 stores how many rows are changed
                temp3 = 0;
                for (var k:Number = 0; k < player.breastRows.length; k++) {
                    //If this row is over threshold
                    if (player.breastRows[k].breastRating > temp2) {
                        //Big change
                        if (player.breastRows[k].breastRating > 10) {
                            player.breastRows[k].breastRating -= 2 + rand(3);
                            if (temp3 == 0) outputText("[pg]The [breasts] on your chest wobble for a second, then tighten up, losing several cup-sizes in the process!");
                            else outputText("  The change moves down to your " + num2Text2(k + 1) + " row of [breasts]. They shrink greatly, losing a couple cup-sizes.");
                        }
                        //Small change
                        else {
                            player.breastRows[k].breastRating -= 1;
                            if (temp3 == 0) outputText("[pg]All at once, your sense of gravity shifts.  Your back feels a sense of relief, and it takes you a moment to realize your " + breastDescript(k) + " have shrunk!");
                            else outputText("  Your " + num2Text2(k + 1) + " row of " + breastDescript(k) + " gives a tiny jiggle as it shrinks, losing some off its mass.");
                        }
                        //Increment changed rows
                        temp3++;
                    }
                }
            }
            //Count that tits were shrunk
            if (temp3 > 0) changes++;
        }
        //Cat dangly-doo.
        if (player.cockTotal() > 0 && player.catCocks() < player.cockTotal() && (player.ears.type == Ears.CAT || rand(3) > 0) && (player.tailType == Tail.CAT || rand(3) > 0) && changes < changeLimit && rand(4) == 0) {
            //loop through and find a non-cat wang.
            for (var i:Number = 0; i < (player.cockTotal()) && player.cocks[i].cockType == CockTypesEnum.CAT; i++) {
            }
            transformations.CockCat(i).applyEffect();
            changes++;
        }
        //Cat penorz shrink
        if (player.catCocks() > 0 && rand(4) == 0 && changes < changeLimit && !flags[kFLAGS.HYPER_HAPPY]) {
            //loop through and find a cat wang.
            choice = 0;
            for (var j:Number = 0; j < (player.cockTotal()); j++) {
                if (player.cocks[j].cockType == CockTypesEnum.CAT && player.cocks[j].cockLength > 6) {
                    choice = 1;
                    break;
                }
            }
            if (choice == 1) {
                //lose 33% size until under 10, then lose 2" at a time
                if (player.cocks[j].cockLength > 16) {
                    outputText("[pg]Your " + cockDescript(j) + " tingles, making your sheath feel a little less tight.  It dwindles in size, losing a full third of its length and a bit of girth before the change finally stops.");
                    player.cocks[j].cockLength *= .66;
                } else if (player.cocks[j].cockLength > 6) {
                    outputText("[pg]Your " + cockDescript(j) + " tingles and withdraws further into your sheath.  If you had to guess, you'd say you've lost about two inches of total length and perhaps some girth.");
                    player.cocks[j].cockLength -= 2;
                }
                if (player.cocks[j].cockLength / 5 < player.cocks[j].cockThickness && player.cocks[j].cockThickness > 1.25) player.cocks[j].cockThickness = player.cocks[j].cockLength / 6;
                //Check for any more!
                temp2 = 0;
                j++;
                for (j; j < player.cocks.length; j++) {
                    //Found another cat wang!
                    if (player.cocks[j].cockType == CockTypesEnum.CAT) {
                        //Long enough - change it
                        if (player.cocks[j].cockLength > 6) {
                            if (player.cocks[j].cockLength > 16)
                                player.cocks[j].cockLength *= .66;
                            else if (player.cocks[j].cockLength > 6)
                                player.cocks[j].cockLength -= 2;
                            //Thickness adjustments
                            if (player.cocks[j].cockLength / 5 < player.cocks[j].cockThickness && player.cocks[j].cockThickness > 1.25) player.cocks[j].cockThickness = player.cocks[j].cockLength / 6;
                            temp2 = 1;
                        }
                    }
                }
                //(big sensitivity boost)
                outputText("  Although the package is smaller, it feels even more sensitive – as if it retained all sensation of its larger size in its smaller form.");
                player.addCurse("sen", 5, 1);
                //Make note of other dicks changing
                if (temp2 == 1) outputText("  Upon further inspection, all your " + Appearance.cockNoun(CockTypesEnum.CAT) + "s have shrunk!");
                changes++;
            }
        }
        //Body type changes
        //DA EARZ
        if (player.ears.type != Ears.CAT && rand(3) == 0 && changes < changeLimit) {
            outputText("[pg]");
			transformations.EarsCat.applyEffect();
            changes++;
        }

        if (!InCollection(player.tailType, Tail.CAT, Tail.NEKOMATA_FORKED_1_3, Tail.NEKOMATA_FORKED_2_3, Tail.BURNING, Tail.TWINKASHA) && player.ears.type == Ears.CAT && rand(3) == 0 && changes < changeLimit) {
            outputText("[pg]");
            transformations.TailCat.applyEffect();
            changes++;
        }
        if (player.tailType == Tail.CAT && player.tailCount == 1 && player.ears.type == Ears.CAT && rand(3) == 0 && changes < changeLimit) {
            outputText("[pg]");
            transformations.TailNekomataOneThirdForked.applyEffect();
            changes++;
        }
        if (player.tailType == Tail.NEKOMATA_FORKED_1_3 && player.level >= 6 && player.inte >= 10 && player.wis >= 25 && rand(3) == 0 && changes < changeLimit) {
            outputText("[pg]");
            transformations.TailNekomataTwoThirdsForked.applyEffect();
            changes++;
        }
        if (player.tailType == Tail.NEKOMATA_FORKED_2_3 && player.level >= 12 && player.inte >= 20 && player.wis >= 50 && rand(3) == 0 && changes < changeLimit) {
            outputText("[pg]");
            transformations.TailCat2nd.applyEffect();
            changes++;
        }
        //Kasha tail interaction with nekomata ghastly fruit
        if (player.tailType == Tail.BURNING && player.tailCount == 1 && player.ears.type == Ears.CAT && rand(3) == 0 && changes < changeLimit) {
            outputText("[pg]");
            transformations.TailTwinkasha.applyEffect();
            changes++;
        }
        //Da paws (if already haz tail)
        if (InCollection(player.tailType, Tail.CAT, Tail.NEKOMATA_FORKED_1_3, Tail.NEKOMATA_FORKED_2_3) && rand(3) == 0 && changes < changeLimit && player.lowerBody != LowerBody.CAT) {
            outputText("[pg]");
            transformations.LowerBodyCat(2).applyEffect();
            changes++;
        }

        //Da cat arm
        if (player.lowerBody == LowerBody.CAT && rand(3) == 0 && changes < changeLimit && player.arms.type != Arms.CAT) {
            outputText("[pg]");
            transformations.ArmsCat.applyEffect();
            changes++;
        }

        if (player.arms.type == Arms.CAT && player.rearBody.type != RearBody.LION_MANE && player.tailType == Tail.CAT && player.tailCount == 2 && changes < changeLimit && rand(3) == 0) {
            outputText("[pg]");
            transformations.RearBodyLionMane.applyEffect();
            changes++;
        }

        //CAT-FACE!
        if (rand(3) == 0 && changes < changeLimit && player.faceType != Face.CAT_CANINES) {
            outputText("[pg]");
            transformations.FaceCatCanines.applyEffect();
            changes++;
        }

        //CAT TOUNGE CUZ WHY NOT?
        if (InCollection(player.faceType, Face.CAT, Face.CAT_CANINES, Face.CHESHIRE, Face.CHESHIRE_SMILE) && player.tongue.type != Tongue.CAT && rand(3) == 0 && changes < changeLimit) {
            outputText("[pg]");
            transformations.TongueCat.applyEffect();
            changes++;
        }
        //DAT EYES
        if (rand(3) == 0 && changes < changeLimit && player.tongue.type == Tongue.CAT && player.eyes.type != Eyes.CAT && player.eyes.type != Eyes.INFERNAL) {
            outputText("[pg]");
            transformations.EyesCat.applyEffect();
            changes++;
        }

        //TURN INTO A FURRAH!  OH SHIT
        if ((player.eyes.type == Eyes.CAT || player.eyes.type == Eyes.DISPLACER) && rand(3) == 0 && changes < changeLimit && !player.hasCoatOfType(Skin.FUR)) {
            if (!player.hasCoatOfType(Skin.FUR)) {
                outputText("[pg]");
                transformations.SkinPlain.applyEffect();
            }

            transformations.SkinFur(Skin.COVERAGE_LOW, {colors: ["brown", "chocolate", "auburn", "caramel", "orange", "sandy brown", "golden", "black", "midnight black", "dark gray", "gray", "light gray", "silver", "white"]}).applyEffect();

            changes++;
        }
        // Remove gills
        if (rand(4) == 0 && player.hasGills() && changes < changeLimit) {
            outputText("[pg]");
            transformations.GillsNone.applyEffect();
            changes++;
        }
        if (changes < changeLimit) {
            if (rand(2) == 0) outputText(player.modThickness(5, 2));
            if (rand(2) == 0) outputText(player.modTone(76, 2));
            if (player.gender < 2) if (rand(2) == 0) outputText(player.modFem(65, 1));
            else outputText(player.modFem(85, 2));
        }
        //FAILSAFE CHANGE
        if (changes == 0) {
            outputText("[pg]Inhuman vitality spreads through your body, invigorating you!\n");
            HPChange(50*player.postConsumptionMlt(), true);
            dynStats("lus", Math.round(3*player.postConsumptionMlt()), "scale", false);
        }
        player.refillHunger(20);
        flags[kFLAGS.TIMES_TRANSFORMED] += changes;
    }

    public function wonderFruit(player:Player):void {
        var choice:int;
        var changes:Number = 0;
        var changeLimit:Number = 2;
        var temp2:Number = 0;
        var temp3:Number = 0;
        if (rand(2) == 0) changeLimit++;
        if (rand(2) == 0) changeLimit++;
        if (rand(2) == 0) changeLimit++;
        changeLimit += player.additionalTransformationChances;
        //Text go!
        clearOutput();
        outputText("You take a bite of the fruit and gulp it down. It's thick and juicy and has an almost overpowering sweetness. Nevertheless, it is delicious and you certainly could use a meal.  You devour the fruit, stopping only when the hard, nubby pit is left; which you toss aside.");
        //Speed raises up to 75
        if (rand(3) == 0 && changes < changeLimit && transformations.MutagenSpdCat.isPossible()) {
            outputText("[pg]");
            transformations.MutagenSpdCat.applyEffect();
            changes++;
        }
        //Strength raises to 40
        if (rand(3) == 0 && changes < changeLimit && transformations.MutagenStrCat.isPossible()) {
            outputText("[pg]");
            transformations.MutagenStrCat.applyEffect();
            changes++;
        }
        //Toughness drops if over 50
        //Does not add to change total
        if (rand(3) == 0 && transformations.MutagenCurseTouCat.isPossible()) {
            outputText("[pg]");
            transformations.MutagenCurseTouCat.applyEffect();
        }
        if (rand(3) == 0 && changes < changeLimit && transformations.MutagenIntCat.isPossible()) {
            outputText("[pg]");
            transformations.MutagenIntCat.applyEffect();
            changes++;
        }
        //Libido gain
        if (changes < changeLimit && rand(3) == 0) {
            if (transformations.MutagenLibSensCat.isPossible())
                changes++; //compromise for "fantasy". And you still get your debuff. Sounds fair.
            transformations.MutagenLibSensCat.applyEffect();
        }
        if (player.blockingBodyTransformations()) changeLimit = 0;
        //Sexual changes would go here if I wasn't a tard.
        //Heat
        if (rand(4) == 0 && changes < changeLimit) {
            var intensified:Boolean = player.inHeat;
            if (player.goIntoHeat(false)) {
                if (intensified) {
                    if (rand(2) == 0) outputText("[pg]The itch inside your [vagina] is growing stronger, and you desperately want to find a nice cock to massage the inside.");
                    else outputText("[pg]The need inside your [vagina] grows even stronger.  You desperately need to find a mate to 'scratch your itch' and fill your womb with kittens.  It's difficult NOT to think about a cock slipping inside your moist fuck-tunnel, and at this point you'll have a hard time resisting ANY male who approaches.");
                } else {
                    outputText("[pg]The interior of your [vagina] clenches tightly, squeezing with reflexive, aching need.  Your skin flushes hot ");
                    if (player.isFurCovered()) outputText("underneath your fur ");
                    outputText("as images and fantasies ");
                    if (player.cor < 50) outputText("assault ");
                    else outputText("fill ");
                    outputText(" your mind.  Lithe cat-boys with their perfect, spine-covered cocks line up behind you, and you bend over to present your needy pussy to them.  You tremble with the desire to feel the exotic texture of their soft barbs rubbing your inner walls, smearing your [vagina] with their cum as you're impregnated.  Shivering, you recover from the fantasy and pull your fingers from your aroused sex.  <b>It would seem you've gone into heat!</b>");
                }
                changes++;
            }
        }

        //Shrink the boobalies down to A for men or C for girls.
        if (changes < changeLimit && rand(4) == 0 && !flags[kFLAGS.HYPER_HAPPY]) {
            temp2 = 0;
            temp3 = 0;
            //Determine if shrinkage is required
            //and set temp2 to threshold
            if (!player.hasVagina() && player.biggestTitSize() > 2) temp2 = 2;
            else if (player.biggestTitSize() > 4) temp2 = 4;
            //IT IS!
            if (temp2 > 0) {
                //temp3 stores how many rows are changed
                temp3 = 0;
                for (var k:Number = 0; k < player.breastRows.length; k++) {
                    //If this row is over threshold
                    if (player.breastRows[k].breastRating > temp2) {
                        //Big change
                        if (player.breastRows[k].breastRating > 10) {
                            player.breastRows[k].breastRating -= 2 + rand(3);
                            if (temp3 == 0) outputText("[pg]The [breasts] on your chest wobble for a second, then tighten up, losing several cup-sizes in the process!");
                            else outputText("  The change moves down to your " + num2Text2(k + 1) + " row of [breasts]. They shrink greatly, losing a couple cup-sizes.");
                        }
                        //Small change
                        else {
                            player.breastRows[k].breastRating -= 1;
                            if (temp3 == 0) outputText("[pg]All at once, your sense of gravity shifts.  Your back feels a sense of relief, and it takes you a moment to realize your " + breastDescript(k) + " have shrunk!");
                            else outputText("  Your " + num2Text2(k + 1) + " row of " + breastDescript(k) + " gives a tiny jiggle as it shrinks, losing some off its mass.");
                        }
                        //Increment changed rows
                        temp3++;
                    }
                }
            }
            //Count that tits were shrunk
            if (temp3 > 0) changes++;
        }
        //Cat dangly-doo.
        if (player.cockTotal() > 0 && player.catCocks() < player.cockTotal() && (player.ears.type == Ears.CAT || rand(3) > 0) && (player.tailType == Tail.CAT || rand(3) > 0) && changes < changeLimit && rand(4) == 0) {
            //loop through and find a non-cat wang.
            for (var i:Number = 0; i < (player.cockTotal()) && player.cocks[i].cockType == CockTypesEnum.CAT; i++) {
            }
            transformations.CockCat(i).applyEffect();
            changes++;
        }
        //Cat penorz shrink
        if (player.catCocks() > 0 && rand(4) == 0 && changes < changeLimit && !flags[kFLAGS.HYPER_HAPPY]) {
            //loop through and find a cat wang.
            choice = 0;
            for (var j:Number = 0; j < (player.cockTotal()); j++) {
                if (player.cocks[j].cockType == CockTypesEnum.CAT && player.cocks[j].cockLength > 6) {
                    choice = 1;
                    break;
                }
            }
            if (choice == 1) {
                //lose 33% size until under 10, then lose 2" at a time
                if (player.cocks[j].cockLength > 16) {
                    outputText("[pg]Your " + cockDescript(j) + " tingles, making your sheath feel a little less tight.  It dwindles in size, losing a full third of its length and a bit of girth before the change finally stops.");
                    player.cocks[j].cockLength *= .66;
                } else if (player.cocks[j].cockLength > 6) {
                    outputText("[pg]Your " + cockDescript(j) + " tingles and withdraws further into your sheath.  If you had to guess, you'd say you've lost about two inches of total length and perhaps some girth.");
                    player.cocks[j].cockLength -= 2;
                }
                if (player.cocks[j].cockLength / 5 < player.cocks[j].cockThickness && player.cocks[j].cockThickness > 1.25) player.cocks[j].cockThickness = player.cocks[j].cockLength / 6;
                //Check for any more!
                temp2 = 0;
                j++;
                for (j; j < player.cocks.length; j++) {
                    //Found another cat wang!
                    if (player.cocks[j].cockType == CockTypesEnum.CAT) {
                        //Long enough - change it
                        if (player.cocks[j].cockLength > 6) {
                            if (player.cocks[j].cockLength > 16)
                                player.cocks[j].cockLength *= .66;
                            else if (player.cocks[j].cockLength > 6)
                                player.cocks[j].cockLength -= 2;
                            //Thickness adjustments
                            if (player.cocks[j].cockLength / 5 < player.cocks[j].cockThickness && player.cocks[j].cockThickness > 1.25) player.cocks[j].cockThickness = player.cocks[j].cockLength / 6;
                            temp2 = 1;
                        }
                    }
                }
                //(big sensitivity boost)
                outputText(" Although the package is smaller, it feels even more sensitive – as if it retained all sensation of its larger size in its smaller form.");
                player.addCurse("sen", 5, 1);
                //Make note of other dicks changing
                if (temp2 == 1) outputText("  Upon further inspection, all your " + Appearance.cockNoun(CockTypesEnum.CAT) + "s have shrunk!");
                changes++;
            }
        }
        //Body type changes
        //DA EARZ
        if (player.ears.type != Ears.CAT && rand(3) == 0 && changes < changeLimit) {
            outputText("[pg]");
			transformations.EarsCat.applyEffect();
            changes++;
        }
        //DA TAIL (IF ALREADY HAZ URZ)
        if (!Tail.hasFelineTail(player) && (player.ears.type == Ears.CAT || player.ears.type == Ears.DISPLACER) && rand(3) == 0 && changes < changeLimit) {
            outputText("[pg]");
            transformations.TailCat.applyEffect();
            changes++;
        }
        //Da paws (if already haz tail)
        if ((player.tailType == Tail.CAT || player.tailType == Tail.NEKOMATA_FORKED_1_3 || player.tailType == Tail.NEKOMATA_FORKED_2_3) && rand(3) == 0 && changes < changeLimit && player.lowerBody != LowerBody.CAT) {
            outputText("[pg]");
            transformations.LowerBodyCat(2).applyEffect();
            changes++;
        }
        //Da cat arm
        if (player.lowerBody == LowerBody.CAT && rand(3) == 0 && changes < changeLimit && player.arms.type != Arms.CAT) {
            outputText("[pg]");
            transformations.ArmsCat.applyEffect();
            changes++;
        }
        //CAT-FACE!
        if (!player.blockingBodyTransformations()) changeLimit = 100;
        if (rand(3) == 0 && changes < changeLimit && player.faceType != Face.CAT && player.faceType != Face.CAT_CANINES && player.faceType != Face.CHESHIRE && player.faceType != Face.CHESHIRE_SMILE) {
            outputText("[pg]");
            transformations.FaceCatCanines.applyEffect();
            changes++;
        }
        if (rand(3) == 0 && changes < changeLimit && player.faceType != Face.CAT && player.faceType != Face.CAT_CANINES && player.faceType != Face.CHESHIRE && player.faceType != Face.CHESHIRE_SMILE) {
            outputText("[pg]");
            transformations.FaceCat.applyEffect();
            changes++;
        }

        if ((player.faceType == Face.CHESHIRE || player.faceType == Face.CHESHIRE_SMILE) && rand(3) == 0 && changes < changeLimit) {
            outputText("[pg]");
            if (player.faceType == Face.CHESHIRE_SMILE) {
                transformations.FaceCheshire.applyEffect();
            } else if (player.faceType == Face.CHESHIRE) {
                transformations.FaceCheshireSmile.applyEffect();
            }
            changes++;
        }

        if ((player.faceType == Face.CAT || player.faceType == Face.CAT_CANINES) && rand(3) == 0 && changes < changeLimit) {
            outputText("[pg]");
            if (player.faceType == Face.CAT) {
                transformations.FaceCheshire.applyEffect();
            } else if (player.faceType == Face.CAT_CANINES) {
                transformations.FaceCheshireSmile.applyEffect();
            }
            changes++;
        }

        //CAT TOUNGE CUZ WHY NOT?
        if ((player.faceType == Face.CAT || player.faceType == Face.CAT_CANINES || player.faceType == Face.CHESHIRE || player.faceType == Face.CHESHIRE_SMILE) && player.tongue.type != Tongue.CAT && rand(3) == 0 && changes < changeLimit) {
            outputText("[pg]");
            transformations.TongueCat.applyEffect();
            changes++;
        }
        //DAT EYES
        if (rand(3) == 0 && changes < changeLimit && player.tongue.type == Tongue.CAT && player.eyes.type != Eyes.CAT && player.eyes.type != Eyes.INFERNAL) {
            outputText("[pg]");
            transformations.EyesCat.applyEffect();
            transformations.EyesChangeColor(["yellow"]).applyEffect();
            changes++;
        }
        //cheshire fur color
        if (rand(3) == 0 && changes < changeLimit && player.hasCoatOfType(Skin.FUR)) {
            outputText("[pg]Your fur and hair color are suddenly changing as dark fur covered with light purple stripes begins to cover every area you have fur on. Your hair also changed color to match it turning to lilac strands separated by white strands every now and then. This change makes you feel like smiling at the absurdity of it all.");
            player.hairColor1 = "dark purple";
            player.furColor1 = "dark purple";
            player.hairColor2 = "light purple";
            player.furColor2 = "light purple";
            changes++;
        }
        //switching between low and high coverage of fur
        if (player.isFurCovered() && rand(3) == 0 && changes < changeLimit) {
            if (player.skin.coverage == Skin.COVERAGE_COMPLETE || player.skin.coverage == Skin.COVERAGE_HIGH) {
                outputText("[pg]What used to be a dense coat of fur begins to fall in patches on the ground leaving you with just enough fur to cover some area of your body.  <b>Some area of your body are now partially covered with fur!</b>");
                player.skin.coverage = Skin.COVERAGE_LOW;
                changes++;
            } else {
                outputText("[pg]You feel your skin tickle as more fur grows to cover the areas you did not already had fur at. Guess you have truly joined the furry club now.  <b>Your skin is now entirely coated with fur.</b>");
                player.skin.coverage = Skin.COVERAGE_COMPLETE;
                changes++;
            }
        }
        //TURN INTO A FURRAH!  OH SHIT
        if ((player.eyes.type == Eyes.CAT || player.eyes.type == Eyes.DISPLACER) && rand(3) == 0 && changes < changeLimit && !player.hasCoatOfType(Skin.FUR)) {
            if (!player.hasCoatOfType(Skin.FUR)) {
                outputText("[pg]");
                transformations.SkinPlain.applyEffect();
            }
            outputText("[pg]Your [skin.type] begins to tingle, then itch. ");
            transformations.SkinFur(Skin.COVERAGE_COMPLETE, {colors: ["brown", "chocolate", "auburn", "caramel", "orange", "sandy brown", "golden", "black", "midnight black", "dark gray", "gray", "light gray", "silver", "white", "orange and white", "brown and white", "black and white", "gray and white"]}).applyEffect();
            changes++;
        }

        //-Madness
        if (!player.hasPerk(PerkLib.Insanity) && changes < changeLimit) {
            outputText("[pg]");
			outputText("you begin to laugh uncontrollably. Wow, how stupid you've been acting until now. Reality has unfolded before your eyes in a whole new manner and as the magic of wonderland begins to fully seep into your formerly logical, short sighted, desperately stubborn mind you open to a whole new perspective of the world you didn't have access to, the diagonal one. See most people look up down left or right but what about the area in between or the area behind? ");
			outputText("People might say you make no sense, that you're crazy but at the end of the day they are just blind idiots trying to make sense of a reality they have no access to. You've seen it all and understand it all.  (<b>Gained Perk: Insanity!</b>)");
            player.createPerk(PerkLib.Insanity,0,0,0,0);
            changes++;
        }
        // Remove gills
        if (rand(4) == 0 && player.hasGills() && changes < changeLimit) {
            outputText("[pg]");
            transformations.GillsNone.applyEffect();
            changes++;
        }
        if (changes < changeLimit) {
            if (rand(2) == 0) outputText(player.modThickness(5, 2));
            if (rand(2) == 0) outputText(player.modTone(76, 2));
            if (player.gender < 2) if (rand(2) == 0) outputText(player.modFem(65, 1));
            else outputText(player.modFem(85, 2));
        }
        //FAILSAFE CHANGE
        if (changes == 0) {
            outputText("[pg]Inhuman vitality spreads through your body, invigorating you!\n");
            HPChange(50*player.postConsumptionMlt(), true);
            dynStats("lus", Math.round(3*player.postConsumptionMlt()), "scale", false);
        }
        player.refillHunger(20);
        flags[kFLAGS.TIMES_TRANSFORMED] += changes;
    }

    public function displacementFruit(player:Player):void {
        var choice:int;
        var changes:Number = 0;
        var changeLimit:Number = 2;
        var temp2:Number = 0;
        var temp3:Number = 0;
        if (rand(2) == 0) changeLimit++;
        if (rand(2) == 0) changeLimit++;
        if (rand(2) == 0) changeLimit++;
        changeLimit += player.additionalTransformationChances;
        //Text go!
        clearOutput();

        outputText("As you close your eyes and savor the fruit you feel somewhat weird. Looking around you realise you unconsciously moved 10 feet from your original location. Well, you have seen weirder things.");

        //Speed raises up to 75
        if (rand(3) == 0 && changes < changeLimit && transformations.MutagenSpdCat.isPossible()) {
            outputText("[pg]");
            transformations.MutagenSpdCat.applyEffect();
            changes++;
        }
        //Strength raises to 40
        if (rand(3) == 0 && changes < changeLimit && transformations.MutagenStrCat.isPossible()) {
            outputText("[pg]");
            transformations.MutagenStrCat.applyEffect();
            changes++;
        }
        //Toughness drops if over 50
        //Does not add to change total
        if (rand(3) == 0 && transformations.MutagenCurseTouCat.isPossible()) {
            outputText("[pg]");
            transformations.MutagenCurseTouCat.applyEffect();
        }
        if (player.inte > 12 && rand(3) == 0 && changes < changeLimit) {
            outputText("[pg]Something alerts your senses. You walk on all " + (player.arms.type == Arms.DISPLACER ? "six" : "four") + " sniffing the air around you and growling as your mind regresses into a feral state not unlike that of a beast or rather in your case that of a displacer beast.");
            player.addCurse("int", 3, 1);
            changes++;
        }
        //Libido gain
        if (changes < changeLimit && rand(3) == 0) {
            if (transformations.MutagenLibSensCat.isPossible())
                changes++; //compromise for "fantasy". And you still get your debuff. Sounds fair.
            transformations.MutagenLibSensCat.applyEffect();
        }

        if (player.blockingBodyTransformations()) changeLimit = 0;

        //Sexual changes would go here if I wasn't a tard.
        //Heat
        if (rand(4) == 0 && changes < changeLimit) {
            var intensified:Boolean = player.inHeat;
            if (player.goIntoHeat(false)) {
                if (intensified) {
                    if (rand(2) == 0) outputText("[pg]The itch inside your [vagina] is growing stronger, and you desperately want to find a nice cock to massage the inside.");
                    else outputText("[pg]The need inside your [vagina] grows even stronger.  You desperately need to find a mate to 'scratch your itch' and fill your womb with kittens.  It's difficult NOT to think about a cock slipping inside your moist fuck-tunnel, and at this point you'll have a hard time resisting ANY male who approaches.");
                } else {
                    outputText("[pg]The interior of your [vagina] clenches tightly, squeezing with reflexive, aching need.  Your skin flushes hot ");
                    if (player.isFurCovered()) outputText("underneath your fur ");
                    outputText("as images and fantasies ");
                    if (player.cor < 50) outputText("assault ");
                    else outputText("fill ");
                    outputText(" your mind.  Lithe cat-boys with their perfect, spine-covered cocks line up behind you, and you bend over to present your needy pussy to them.  You tremble with the desire to feel the exotic texture of their soft barbs rubbing your inner walls, smearing your [vagina] with their cum as you're impregnated.  Shivering, you recover from the fantasy and pull your fingers from your aroused sex.  <b>It would seem you've gone into heat!</b>");
                }
                changes++;
            }
        }

        //Shrink the boobalies down to A for men or C for girls.
        if (changes < changeLimit && rand(4) == 0 && !flags[kFLAGS.HYPER_HAPPY]) {
            temp2 = 0;
            temp3 = 0;
            //Determine if shrinkage is required
            //and set temp2 to threshold
            if (!player.hasVagina() && player.biggestTitSize() > 2) temp2 = 2;
            else if (player.biggestTitSize() > 4) temp2 = 4;
            //IT IS!
            if (temp2 > 0) {
                //temp3 stores how many rows are changed
                temp3 = 0;
                for (var k:Number = 0; k < player.breastRows.length; k++) {
                    //If this row is over threshold
                    if (player.breastRows[k].breastRating > temp2) {
                        //Big change
                        if (player.breastRows[k].breastRating > 10) {
                            player.breastRows[k].breastRating -= 2 + rand(3);
                            if (temp3 == 0) outputText("[pg]The [breasts] on your chest wobble for a second, then tighten up, losing several cup-sizes in the process!");
                            else outputText("  The change moves down to your " + num2Text2(k + 1) + " row of [breasts]. They shrink greatly, losing a couple cup-sizes.");
                        }
                        //Small change
                        else {
                            player.breastRows[k].breastRating -= 1;
                            if (temp3 == 0) outputText("[pg]All at once, your sense of gravity shifts.  Your back feels a sense of relief, and it takes you a moment to realize your " + breastDescript(k) + " have shrunk!");
                            else outputText("  Your " + num2Text2(k + 1) + " row of " + breastDescript(k) + " gives a tiny jiggle as it shrinks, losing some off its mass.");
                        }
                        //Increment changed rows
                        temp3++;
                    }
                }
            }
            //Count that tits were shrunk
            if (temp3 > 0) changes++;
        }
        //Cat dangly-doo.
        if (player.cockTotal() > 0 && player.catCocks() < player.cockTotal() && (player.ears.type == Ears.CAT || rand(3) > 0) && (player.tailType == Tail.CAT || rand(3) > 0) && changes < changeLimit && rand(4) == 0) {
            //loop through and find a non-cat wang.
            for (var i:Number = 0; i < (player.cockTotal()) && player.cocks[i].cockType == CockTypesEnum.CAT; i++) {
            }
            transformations.CockCat(i).applyEffect();
            changes++;
        }
        //Cat penorz shrink
        if (player.catCocks() > 0 && rand(4) == 0 && changes < changeLimit && !flags[kFLAGS.HYPER_HAPPY]) {
            //loop through and find a cat wang.
            choice = 0;
            for (var j:Number = 0; j < (player.cockTotal()); j++) {
                if (player.cocks[j].cockType == CockTypesEnum.CAT && player.cocks[j].cockLength > 6) {
                    choice = 1;
                    break;
                }
            }
            if (choice == 1) {
                //lose 33% size until under 10, then lose 2" at a time
                if (player.cocks[j].cockLength > 16) {
                    outputText("[pg]Your " + cockDescript(j) + " tingles, making your sheath feel a little less tight.  It dwindles in size, losing a full third of its length and a bit of girth before the change finally stops.");
                    player.cocks[j].cockLength *= .66;
                } else if (player.cocks[j].cockLength > 6) {
                    outputText("[pg]Your " + cockDescript(j) + " tingles and withdraws further into your sheath.  If you had to guess, you'd say you've lost about two inches of total length and perhaps some girth.");
                    player.cocks[j].cockLength -= 2;
                }
                if (player.cocks[j].cockLength / 5 < player.cocks[j].cockThickness && player.cocks[j].cockThickness > 1.25) player.cocks[j].cockThickness = player.cocks[j].cockLength / 6;
                //Check for any more!
                temp2 = 0;
                j++;
                for (j; j < player.cocks.length; j++) {
                    //Found another cat wang!
                    if (player.cocks[j].cockType == CockTypesEnum.CAT) {
                        //Long enough - change it
                        if (player.cocks[j].cockLength > 6) {
                            if (player.cocks[j].cockLength > 16)
                                player.cocks[j].cockLength *= .66;
                            else if (player.cocks[j].cockLength > 6)
                                player.cocks[j].cockLength -= 2;
                            //Thickness adjustments
                            if (player.cocks[j].cockLength / 5 < player.cocks[j].cockThickness && player.cocks[j].cockThickness > 1.25) player.cocks[j].cockThickness = player.cocks[j].cockLength / 6;
                            temp2 = 1;
                        }
                    }
                }
                //(big sensitivity boost)
                outputText("  Although the package is smaller, it feels even more sensitive – as if it retained all sensation of its larger size in its smaller form.");
                player.addCurse("sen", 5, 1);
                //Make note of other dicks changing
                if (temp2 == 1) outputText("  Upon further inspection, all your " + Appearance.cockNoun(CockTypesEnum.CAT) + "s have shrunk!");
                changes++;
            }
        }
        //Body type changes
        //DA EARZ
        if (player.ears.type != Ears.DISPLACER && rand(3) == 0 && changes < changeLimit) {
            outputText("[pg]");
			transformations.EarsDisplacer.applyEffect();
            changes++;
        }
        //DA TAIL (IF ALREADY HAZ URZ)
        if (player.tailType != Tail.CAT && player.tailType != Tail.BURNING && player.tailType != Tail.TWINKASHA && (player.ears.type == Ears.CAT || player.ears.type == Ears.DISPLACER) && rand(3) == 0 && changes < changeLimit) {
            outputText("[pg]");
            transformations.TailCat.applyEffect();
            changes++;
        }

        if (player.tailType == Tail.CAT && rand(3) == 0 && changes < changeLimit && player.lowerBody != LowerBody.LION) {
            outputText("[pg]");
            transformations.LowerBodyLion(2).applyEffect();
            changes++;
        }

        if (player.lowerBody == LowerBody.LION && rand(3) == 0 && changes < changeLimit && player.arms.type != Arms.DISPLACER) {
            outputText("[pg]");
            transformations.ArmsDisplacer.applyEffect();
            changes++;
        }
        //Displacer beast tentacles
        if (player.rearBody.type != RearBody.DISPLACER_TENTACLES && rand(3) == 0 && changes < changeLimit && player.arms.type == Arms.DISPLACER) {
            outputText("[pg]");
            transformations.RearBodyDisplacerTentacles.applyEffect();
            changes++;
        }

        if (rand(3) == 0 && changes < changeLimit && player.faceType != Face.CAT_CANINES) {
            outputText("[pg]");
            transformations.FaceCatCanines.applyEffect();
            changes++;
        }

        //CAT TOUNGE CUZ WHY NOT?
        if ((player.faceType == Face.CAT || player.faceType == Face.CAT_CANINES || player.faceType == Face.CHESHIRE || player.faceType == Face.CHESHIRE_SMILE) && player.tongue.type != Tongue.CAT && rand(3) == 0 && changes < changeLimit) {
            outputText("[pg]");
            transformations.TongueCat.applyEffect();
            changes++;
        }
        //DAT EYES
        if (rand(3) == 0 && changes < changeLimit && transformations.TongueCat.isPresent() && transformations.EyesDisplacer.isPossible()) {
            transformations.EyesDisplacer.applyEffect();
            changes++;
        }
        //switching between low and high coverage of fur
        if (player.isFurCovered() && rand(3) == 0 && changes < changeLimit) {
            if (player.skin.coverage == Skin.COVERAGE_COMPLETE || player.skin.coverage == Skin.COVERAGE_HIGH) {
                outputText("[pg]What used to be a dense coat of fur begins to fall in patches on the ground leaving you with just enough fur to cover some area of your body.  <b>Some area of your body are now partially covered with fur!</b>");
                player.skin.coverage = Skin.COVERAGE_LOW;
                changes++;
            } else {
                outputText("[pg]You feel your skin tickle as more fur grows to cover the areas you did not already had fur at. Guess you have truly joined the furry club now.  <b>Your skin is now entirely coated with fur.</b>");
                player.skin.coverage = Skin.COVERAGE_COMPLETE;
                changes++;
            }
        }
        //-Skin color change – dark gray
        if (player.skinColor != "dark gray" && changes < changeLimit && rand(3) == 0) {
            outputText("[pg]It takes a while for you to notice, but ");
            if (player.isFurCovered()) outputText("the skin under your <b>[fur color]</b> " + player.skinDesc);
            else outputText("your " + player.skinDesc);
            outputText(" has changed to become <b>dark gray</b> colored.");
            player.skinColor = "dark gray";
            changes++;
        }
        //TURN INTO A FURRAH!  OH SHIT
        if ((player.eyes.type == Eyes.CAT || player.eyes.type == Eyes.DISPLACER) && rand(3) == 0 && changes < changeLimit && !player.hasCoatOfType(Skin.FUR)) {
            if (!player.hasCoatOfType(Skin.FUR)) {
                outputText("[pg]");
                transformations.SkinPlain.applyEffect();
            }

            outputText("[pg]Your [skin.type] begins to tingle, then itch. ");
            transformations.SkinFur(Skin.COVERAGE_COMPLETE, {colors: ["black", "midnight black", "midnight"]}).applyEffect();

            changes++;
        }
        // Remove gills
        if (rand(4) == 0 && player.hasGills() && changes < changeLimit) {
            outputText("[pg]");
            transformations.GillsNone.applyEffect();
            changes++;
        }
        if (changes < changeLimit) {
            if (rand(2) == 0) outputText(player.modThickness(5, 2));
            if (rand(2) == 0) outputText(player.modTone(76, 2));
            if (player.gender < 2) if (rand(2) == 0) outputText(player.modFem(65, 1));
            else outputText(player.modFem(85, 2));
        }
        //FAILSAFE CHANGE
        if (changes == 0) {
            outputText("[pg]Inhuman vitality spreads through your body, invigorating you!\n");
            HPChange(50*player.postConsumptionMlt(), true);
            dynStats("lus", Math.round(3*player.postConsumptionMlt()), "scale", false);
        }
        player.refillHunger(20);
        flags[kFLAGS.TIMES_TRANSFORMED] += changes;
    }

    public function reptilum(player:Player):void {
        player.slimeFeed();
        //init variables
        var changes:Number = 0;
        var changeLimit:Number = 2;
        var temp2:Number = 0;
        //Randomly choose affects limit
        if (rand(2) == 0) changeLimit++;
        if (rand(2) == 0) changeLimit++;
        if (rand(2) == 0) changeLimit++;
        changeLimit += player.additionalTransformationChances;
        //clear screen
        clearOutput();
        outputText("You uncork the vial of fluid and drink it down.  The taste is sour, like a dry wine with an aftertaste not entirely dissimilar to alcohol.  Instead of the warmth you'd expect, it leaves your throat feeling cold and a little numb.");

        //Statistical changes:
        //-Reduces speed down to 50.
        if (player.spe > 50 && changes < changeLimit && rand(4) == 0) {
            outputText("[pg]You start to feel sluggish and cold.  Lying down to bask in the sun might make you feel better.");
            player.addCurse("spe", 1, 1);
            changes++;
        }
        //-Reduces sensitivity.
        if (player.sens > 20 && changes < changeLimit && rand(3) == 0) {
            outputText("[pg]The sensation of prickly pins and needles moves over your body, leaving your senses a little dulled in its wake.");
            dynStats("sen", -1);
            changes++;
        }
        //Raises libido greatly to 50, then somewhat to 75, then slowly to 100.
        if (changes < changeLimit && rand(3) == 0) {
            outputText("[pg]A knot of fire in your gut doubles you over but passes after a few moments.  As you straighten you can feel the heat seeping into you, ");
            //(DICK)
            if (player.cocks.length > 0 && (player.gender != 3 || rand(2) == 0)) {
                outputText("filling ");
                if (player.cocks.length > 1) outputText("each of ");
                outputText("your [cocks] with the desire to breed.  You get a bit hornier when you realize your sex-drive has gotten a boost.");
            }
            //(COOCH)
            else if (player.hasVagina()) outputText("puddling in your [vagina].  An instinctive desire to mate and lay eggs spreads through you, increasing your lust and boosting your sex-drive.");
            //(TARDS)
            else outputText("puddling in your featureless crotch for a split-second before it slides into your [ass].  You want to be fucked, filled, and perhaps even gain a proper gender again.  Through the lust you realize your sex-drive has been permanently increased.");
            if (MutagenBonus("lib", 1))
                changes++; //compromise for "fantasy". And you still get your debuff. Sounds fair.
        }
        //-Raises toughness
        if (changes < changeLimit && rand(3) == 0 && MutagenBonus("tou", 2)) {
            if (player.tou < 40)
                outputText("[pg]Your body and skin both thicken noticeably.  You pinch your [skin.type] experimentally and marvel at how much tougher your hide has gotten.");
            else if (player.tou < 55)
                outputText("[pg]You grin as you feel your form getting a little more solid.  It seems like your whole body is toughening up quite nicely, and by the time the sensation goes away, you feel ready to take a hit.");
            else
                outputText("[pg]You snarl happily as you feel yourself getting even tougher.  It's a barely discernible difference, but you can feel your [skin.type] getting tough enough to make you feel invincible.");
            changes++;
        }

        if (player.blockingBodyTransformations()) changeLimit = 0;
        //Sexual Changes:
        //-Lizard dick - first one
        if (player.lizardCocks() == 0 && player.cockTotal() > 0 && changes < changeLimit && rand(4) == 0) {
            //Find the first non-lizzy dick
            for (temp2 = 0; temp2 < player.cocks.length && player.cocks[temp2].cockType == CockTypesEnum.LIZARD; temp2++) { }
            transformations.CockLizard(temp2).applyEffect();
            changes++;
            dynStats("lus", 10, "scale", false);
            MutagenBonus("lib", 3);
        }
        //(CHANGE OTHER DICK)
        //Requires 1 lizard cock, multiple cocks
        if (player.lizardCocks() > 0 && player.cockTotal() > player.lizardCocks() && rand(4) == 0 && changes < changeLimit) {
            transformations.CockLizard(player.findFirstCockNotInType([CockTypesEnum.LIZARD])).applyEffect();
            changes++;
            dynStats("lus", 10, "scale", false);
            MutagenBonus("lib", 3);
        }
        //-Grows second lizard dick if only 1 dick
        if (player.lizardCocks() == 1 && player.cocks.length == 1 && rand(4) == 0 && changes < changeLimit) {
            transformations.CockLizard(1, player.cocks[0].cockLength).applyEffect();
            player.cocks[1].cockThickness = player.cocks[0].cockThickness;
            changes++;
            dynStats("lus", 10, "scale", false);
            MutagenBonus("lib", 3);
        }
        //--Worms leave if 100% lizard dicks?
        //Require mammals?
        if (player.lizardCocks() == player.cockTotal() && changes < changeLimit && player.hasStatusEffect(StatusEffects.Infested)) {
            outputText("[pg]Like rats from a sinking ship, worms escape from your body in a steady stream.  Surprisingly, the sensation is remarkably pleasant, similar to the pleasure of sexual release in a way.  Though they seem inexhaustible, the tiny, cum-slimed invertebrates slow to a trickle.  The larger worm-kin inside you stirs as if disturbed from a nap, coming loose from whatever moorings it had attached itself to in the interior of your form.  It slowly works its way up your urethra, stretching to an almost painful degree with every lurching motion.  Your dick bloats out around the base, stretched like the ovipositor on a bee-girl in order to handle the parasitic creature, but thankfully, the ordeal is a brief one.");
            if (player.balls > 1) outputText("  The remaining " + num2Text(player.balls - 1) + " slither out the pre-stretched holes with ease, though the last one hangs from your tip for a moment before dropping to the ground.");
            outputText("  The white creature joins its kin on the ground and slowly slithers away.  Perhaps they prefer mammals? In any event, <b>you are no longer infected with worms</b>.");
            player.removeStatusEffect(StatusEffects.Infested);
            player.buff("Infested").remove();
            changes++;
        }
        //-Breasts vanish to 0 rating if male
        if (player.biggestTitSize() >= 1 && player.gender == 1 && changes < changeLimit && rand(3) == 0) {
            //(HUEG)
            if (player.biggestTitSize() > 8) {
                outputText("[pg]The flesh on your chest tightens up, losing nearly half its mass in the span of a few seconds.  With your center of balance shifted so suddenly, you stagger about trying not to fall on your ass.  You catch yourself and marvel at the massive change in breast size.");
                //Half tit size
            }
            //(NOT HUEG < 4)
            else outputText("[pg]In an instant, your chest compacts in on itself, consuming every ounce of breast-flesh.  You're left with a  smooth, masculine torso, though your nipples remain.");
            //(BOTH – no new PG)
            outputText("  With the change in weight and gravity, you find it's gotten much easier to move about.");
            //Loop through behind the scenes and adjust all tits.
            for (temp2 = 0; temp2 < player.breastRows.length; temp2++) {
                if (player.breastRows[temp2].breastRating > 8) player.breastRows[temp2].breastRating /= 2;
                else player.breastRows[temp2].breastRating = 0;
            }
            //(+2 speed)
            MutagenBonus("lib", 2);
            changes++;
        }
        //-Lactation stoppage.
        if (player.isLactating() && changes < changeLimit && rand(4) == 0) {
            transformations.RemoveLactation.applyEffect();
            changes++;
        }
        //-Nipples reduction to 1 per tit.
        if (player.averageNipplesPerBreast() > 1 && changes < changeLimit && rand(4) == 0) {
            transformations.NipplesPerBreastOne.applyEffect();
            changes++;
        }
        //-VAGs
        if (player.hasVagina() && !player.hasPerk(PerkLib.Oviposition) && changes < changeLimit && rand(5) == 0 && player.racialScore(Races.LIZARD, false) > 3) {
            transformations.GainOviposition.applyEffect();
            changes++;
        }

        //Physical changes:
        //-Existing horns become draconic, max of 4, max length of 1'
        if (player.horns.type != Horns.DRACONIC_X4_12_INCH_LONG && player.horns.type != Horns.ORCHID && changes < changeLimit && rand(5) == 0) {
            //No dragon horns yet.
            if (player.horns.type != Horns.DRACONIC_X2) {
                //Already have horns
                outputText("[pg]");
                if (player.horns.count > 0) {
                    //High quantity demon horns
                    if (player.horns.type == Horns.DEMON && player.horns.count > 4) {
                        transformations.HornsDraconicQuadruple.applyEffect();
                    } else {
                        transformations.HornsDraconicDual.applyEffect();
                    }
                    changes++;
                }
                //No horns
                else {
                    //-If no horns, grow a pair
                    transformations.HornsDraconicDual.applyEffect();
                    changes++;
                }
            }
            //ALREADY DRAGON
            else {
                    if (player.horns.count < 12) {
                        if (rand(2) == 0) {
                            outputText("[pg]You get a headache as an inch of fresh horns escapes from your pounding skull.");
                            player.horns.count += 1;
                        } else {
                            outputText("[pg]Your head aches as your horns grow a few inches longer.  They get even thicker about the base, giving you a menacing appearance.");
                            player.horns.count += 2 + rand(4);
                        }
                        if (player.horns.count >= 12) outputText("  <b>Your horns settle down quickly, as if they're reached their full size.</b>");
                        changes++;
                    }
                    //maxxed out, new row
                    else {
                        //--Next horns growth adds second row and brings length up to 12\"
                        outputText("[pg]");
                        transformations.HornsDraconicQuadruple.applyEffect();
                        changes++;
                    }
            }
        }
        //-Hair stops growing!
        if (flags[kFLAGS.HAIR_GROWTH_STOPPED_BECAUSE_LIZARD] == 0 && changes < changeLimit && rand(4) == 0) {
            outputText("[pg]Your scalp tingles oddly.  In a panic, you reach up to your [hair], but thankfully it appears unchanged.[pg]");
            outputText("(<b>Your hair has stopped growing.</b>)");
            changes++;
            flags[kFLAGS.HAIR_GROWTH_STOPPED_BECAUSE_LIZARD]++;
        }
        //Remove beard!
        if (player.hasBeard() && changes < changeLimit && rand(3) == 0) {
            outputText("[pg]Your " + beardDescript() + " feels looser and looser until finally, your beard falls out.  ");
            outputText("(<b>You no longer have a beard!</b>)");
            player.beardLength = 0;
            player.beardStyle = 0;
        }
        //Big physical changes:
        //-Legs – Draconic, clawed feet
        if (player.lowerBody != LowerBody.LIZARD && changes < changeLimit && rand(5) == 0) {
            outputText("[pg]");
            transformations.LowerBodyLizard(2).applyEffect();
            changes++;
        }
        //Arms
        if (player.arms.type != Arms.LIZARD && player.lowerBody == LowerBody.LIZARD && changes < changeLimit && rand(3) == 0) {
            outputText("[pg]");
            transformations.ArmsLizard.applyEffect();
            changes++;
        }
        //-Tail – sinuous lizard tail
        if (player.tailType != Tail.LIZARD && player.arms.type == Arms.LIZARD && changes < changeLimit && rand(5) == 0) {
            outputText("[pg]");
            transformations.TailLizard.applyEffect();
            changes++;
        }
        //Lizard eyes
        if (changes < changeLimit && rand(3) == 0 && player.eyes.type == Eyes.HUMAN) {
            transformations.EyesLizard.applyEffect();
            changes++;
        }
        //Remove odd eyes
        if (changes < changeLimit && rand(5) == 0 && player.eyes.type > Eyes.HUMAN && player.eyes.type != Eyes.LIZARD) {
            outputText("[pg]");
            transformations.EyesHuman.applyEffect();
            changes++;
        }
        //-Ears become smaller nub-like openings?
        if (player.ears.type != Ears.LIZARD && player.tailType == Tail.LIZARD && player.lowerBody == LowerBody.LIZARD && changes < changeLimit && rand(5) == 0) {
            outputText("[pg]");
			transformations.EarsLizard.applyEffect();
            changes++;
        }
        //-Scales – color changes to red, green, white, blue, or black.  Rarely: purple or silver.
        if (!player.hasFullCoatOfType(Skin.SCALES) && player.ears.type == Ears.LIZARD && player.tailType == Tail.LIZARD && player.lowerBody == LowerBody.LIZARD && changes < changeLimit && rand(5) == 0) {
            var colors: Array;
            if (rand(10) == 0) {
                colors = ["purple", "silver"];
            } else {
                colors = ["red", "green", "white", "blue", "black"];
            }
            outputText("[pg]");
            transformations.SkinScales(Skin.COVERAGE_COMPLETE, {colors: colors}).applyEffect();
            changes++;
        }
        //-Lizard-like face.
        if (player.faceType != Face.LIZARD && player.isScaleCovered() && player.ears.type == Ears.LIZARD && player.tailType == Tail.LIZARD && player.lowerBody == LowerBody.LIZARD && changes < changeLimit && rand(5) == 0) {
            outputText("[pg]");
            transformations.FaceLizard.applyEffect();
            changes++;
        }
        // Remove gills
        if (rand(4) == 0 && player.hasGills() && changes < changeLimit) {
            outputText("[pg]");
            transformations.GillsNone.applyEffect();
            changes++;
        }
        //FAILSAFE CHANGE
        if (changes == 0) {
            outputText("[pg]Inhuman vitality spreads through your body, invigorating you!\n");
            HPChange(50*player.postConsumptionMlt(), true);
            dynStats("lus", Math.round(3*player.postConsumptionMlt()), "scale", false);
        }
        player.refillHunger(20);
        flags[kFLAGS.TIMES_TRANSFORMED] += changes;
    }

    public function salamanderfirewater(player:Player):void {
        player.slimeFeed();
        //init variables
        var changes:Number = 0;
        var changeLimit:Number = 2;
        var temp2:Number = 0;
        //Randomly choose affects limit
        if (rand(2) == 0) changeLimit++;
        if (rand(2) == 0) changeLimit++;
        if (rand(2) == 0) changeLimit++;
        changeLimit += player.additionalTransformationChances;
        //clear screen
        clearOutput();
        outputText("You uncork the hip flask and drink it down.  The taste is actually quite good, like alcohol but with a little fire within.  Just as you expected, it makes you feel all hot and ready to take the whole world head-on.");
		DrunkenPowerEmpowerIfPossible();
		AelfwineEmpowerIfPossible();
        //Statistical changes:
        //-Reduces speed down to 70.
        if (player.spe > 70 && changes < changeLimit && rand(4) == 0) {
            outputText("[pg]You start to feel sluggish.  Lying down and enjoying liquor might make you feel better.");
            player.addCurse("spe", 1, 1);
            changes++;
        }
        //-Reduces intelligence down to 60.
        if (player.inte > 60 && changes < changeLimit && rand(4) == 0) {
            outputText("[pg]You start to feel a bit dizzy, but the sensation quickly passes.  Thinking hard on it, you mentally brush away the fuzziness that seems to permeate your brain and determine that this firewater may have actually made you dumber.  It would be best not to drink too much of it.");
            player.addCurse("int", 1, 1);
            changes++;
        }
        //-Raises libido.
        if (changes < changeLimit && rand(3) == 0) {
            outputText("[pg]A knot of fire in your gut doubles you over but passes after a few moments.  As you straighten you can feel the heat seeping into you, ");
            //(DICK)
            if (player.cocks.length > 0 && (player.gender != 3 || rand(2) == 0)) {
                outputText("filling ");
                if (player.cocks.length > 1) outputText("each of ");
                outputText("your [cocks] with the desire to breed.  You get a bit hornier when you realize your sex-drive has gotten a boost.");
            }
            //(COOCH)
            else if (player.hasVagina()) outputText("puddling in your [vagina].  An instinctive desire to mate spreads through you, increasing your lust and boosting your sex-drive.");
            //(TARDS)
            else outputText("puddling in your featureless crotch for a split-second before it slides into your [ass].  You want to be fucked, filled, and perhaps even gain a proper gender again.  Through the lust you realize your sex-drive has been permanently increased.");
            if (MutagenBonus("lib", 2))
                changes++; //compromise for "fantasy". Sounds fair.
        }
        //-Raises toughness
        if (changes < changeLimit && rand(3) == 0 && MutagenBonus("tou", 2)) {
            if (player.tou < 40)
                outputText("[pg]Your body and skin both thicken noticeably.  You pinch your [skin.type] experimentally and marvel at how much tougher your hide has gotten.");
            else if (player.tou < 55)
                outputText("[pg]You grin as you feel your form getting a little more solid.  It seems like your whole body is toughening up quite nicely, and by the time the sensation goes away, you feel ready to take a hit.");
            else
                outputText("[pg]You snarl happily as you feel yourself getting even tougher.  It's a barely discernible difference, but you can feel your [skin.type] getting tough enough to make you feel invincible.");
            changes++;
        }
        //-Raises strength to 80.
        if (rand(3) == 0 && changes < changeLimit && MutagenBonus("str", 1)) {
            outputText("[pg]While heat builds in your muscles, their already-potent mass shifting slightly as they gain even more strength than before.");
            changes++;
        }
        if (player.blockingBodyTransformations()) changeLimit = 0;
        //Sexual Changes:
        //-Lizard dick - first one
        if (player.lizardCocks() == 0 && player.cockTotal() > 0 && changes < changeLimit && rand(4) == 0) {
            //Find the first non-lizzy dick
            for (temp2 = 0; temp2 < player.cocks.length && player.cocks[temp2].cockType == CockTypesEnum.LIZARD; temp2++) { }
            transformations.CockLizard(temp2).applyEffect();
            changes++;
            dynStats("lus", 10, "scale", false);
            MutagenBonus("lib", 3);
        }
        //(CHANGE OTHER DICK)
        //Requires 1 lizard cock, multiple cocks
        if (player.lizardCocks() > 0 && player.cockTotal() > player.lizardCocks() && rand(4) == 0 && changes < changeLimit) {
            transformations.CockLizard(player.findFirstCockNotInType([CockTypesEnum.LIZARD])).applyEffect();
            changes++;
            dynStats("lus", 10, "scale", false);
            MutagenBonus("lib", 3);
        }
        //-Grows second lizard dick if only 1 dick
        if (player.lizardCocks() == 1 && player.cocks.length == 1 && rand(4) == 0 && changes < changeLimit) {
            transformations.CockLizard(1, player.cocks[0].cockLength).applyEffect();
            player.cocks[1].cockThickness = player.cocks[0].cockThickness;
            changes++;
            dynStats("lus", 10, "scale", false);
            MutagenBonus("lib", 3);
        }
        //-Breasts vanish to 0 rating if male
        if (player.biggestTitSize() >= 1 && player.gender == 1 && changes < changeLimit && rand(3) == 0) {
            //(HUEG)
            if (player.biggestTitSize() > 8) {
                outputText("[pg]The flesh on your chest tightens up, losing nearly half its mass in the span of a few seconds.  With your center of balance shifted so suddenly, you stagger about trying not to fall on your ass.  You catch yourself and marvel at the massive change in breast size.");
                //Half tit size
            }
            //(NOT HUEG < 4)
            else outputText("[pg]In an instant, your chest compacts in on itself, consuming every ounce of breast-flesh.  You're left with a  smooth, masculine torso, though your nipples remain.");
            //(BOTH – no new PG)
            outputText("  With the change in weight and gravity, you find it's gotten much easier to move about.");
            //Loop through behind the scenes and adjust all tits.
            for (temp2 = 0; temp2 < player.breastRows.length; temp2++) {
                if (player.breastRows[temp2].breastRating > 8) player.breastRows[temp2].breastRating /= 2;
                else player.breastRows[temp2].breastRating = 0;
            }
            //(+2 speed)
            MutagenBonus("spe", 2);
            changes++;
        }
        //-Nipples reduction to 1 per tit.
        if (player.averageNipplesPerBreast() > 1 && changes < changeLimit && rand(4) == 0) {
            transformations.NipplesPerBreastOne.applyEffect();
            changes++;
        }
        //Increase player's breast size, if they are big DD or smaller
        if (player.smallestTitSize() <= 5 && player.gender == 2 && changes < changeLimit && rand(4) == 0) {
            outputText("[pg]After eating it, your chest aches and tingles, and your hands reach up to scratch at it unthinkingly.  Silently, you hope that you aren't allergic to it.  Just as you start to scratch at your " + breastDescript(player.smallestTitRow()) + ", your chest pushes out in slight but sudden growth.");
            player.breastRows[player.smallestTitRow()].breastRating++;
            changes++;
        }
        //Physical changes:
        //Tail - unlocks enhanced with fire tail whip attack
        if (player.tailType != Tail.SALAMANDER && changes < changeLimit && rand(3) == 0) {
            outputText("[pg]");
            transformations.TailSalamander.applyEffect();
            changes++;
        }
        //Legs
        if (player.lowerBody != LowerBody.SALAMANDER && player.tailType == Tail.SALAMANDER && changes < changeLimit && rand(3) == 0) {
            outputText("[pg]");
            transformations.LowerBodySalamander(2).applyEffect();
            changes++;
        }
        //Arms
        if (player.arms.type != Arms.SALAMANDER && player.lowerBody == LowerBody.SALAMANDER && changes < changeLimit && rand(3) == 0) {
            outputText("[pg]");
            transformations.ArmsSalamander.applyEffect();
            changes++;
        }
        //Lizard eyes
        if (changes < changeLimit && rand(3) == 0 && player.eyes.type == Eyes.HUMAN) {
            transformations.EyesLizard.applyEffect();
            changes++;
        }
        //Remove odd eyes
        if (changes < changeLimit && rand(4) == 0 && player.eyes.type > Eyes.HUMAN && player.eyes.type != Eyes.LIZARD) {
            outputText("[pg]");
            transformations.EyesHuman.applyEffect();
            changes++;
        }
        //Fanged face
        if (player.faceType == Face.HUMAN && player.faceType != Face.SALAMANDER_FANGS && changes < changeLimit && rand(3) == 0) {
            outputText("[pg]");
            transformations.FaceSalamanderFangs.applyEffect();
            changes++;
        }
        if (player.faceType != Face.HUMAN && player.faceType != Face.SALAMANDER_FANGS && changes < changeLimit && rand(4) == 0) {
            outputText("[pg]");
            transformations.FaceHuman.applyEffect();
            changes++;
        }
        //Human ears
        if (player.faceType == Face.SALAMANDER_FANGS && player.ears.type != Ears.HUMAN && changes < changeLimit && rand(4) == 0) {
            outputText("[pg]");
            transformations.EarsHuman.applyEffect();
            changes++;
        }
        //Partial scaled skin
        if (changes < changeLimit && (player.hasPlainSkinOnly() || player.hasCoatOfType(Skin.SCALES)) && rand(3) == 0) {
            outputText("[pg]");
            transformations.SkinScales(Skin.COVERAGE_LOW, {colors: SalamanderRace.SalamanderScaleColors}).applyEffect();
            changes++;
        }
        if (changes < changeLimit && !player.hasPartialCoat(Skin.SCALES) && rand(4) == 0) {
            outputText("[pg]");
            transformations.SkinPlain.applyEffect();
            changes++;
        }
        //Removing gills
        if (rand(4) == 0 && player.hasGills() && changes < changeLimit) {
            outputText("[pg]");
            transformations.GillsNone.applyEffect();
            changes++;
        }
        //FAILSAFE CHANGE
        if (changes == 0) {
            outputText("[pg]Inhuman vitality spreads through your body, invigorating you!\n");
            HPChange(100*player.postConsumptionMlt(), true);
            dynStats("lus", Math.round(5*player.postConsumptionMlt()), "scale", false);
        }
        player.refillHunger(10);
        flags[kFLAGS.TIMES_TRANSFORMED] += changes;
    }

    public function methircrystal(player:Player):void {
        player.slimeFeed();
        //init variables
        var changes:Number = 0;
        var changeLimit:Number = 2;
        var temp2:Number = 0;
        //Randomly choose affects limit
        if (rand(2) == 0) changeLimit++;
        if (rand(2) == 0) changeLimit++;
        if (rand(2) == 0) changeLimit++;
        changeLimit += player.additionalTransformationChances;
        //clear screen
        clearOutput();
        outputText("You chew on the weird glowy crystal, which begins to melt in your mouth like sugar. Your head spin for a moment as you begin to have hallucinations. This leaves you with weird feeling in your entire body, filling you with changes.");
        //-Raises toughness
        if (changes < changeLimit && rand(3) == 0 && MutagenBonus("tou", 2)) {
            if (player.tou < 40)
                outputText("[pg]Your body and skin both thicken noticeably.  You pinch your [skin.type] experimentally and marvel at how much tougher your hide has gotten.");
            else if (player.tou < 55)
                outputText("[pg]You grin as you feel your form getting a little more solid.  It seems like your whole body is toughening up quite nicely, and by the time the sensation goes away, you feel ready to take a hit.");
            else
                outputText("[pg]You snarl happily as you feel yourself getting even tougher.  It's a barely discernible difference, but you can feel your [skin.type] getting tough enough to make you feel invincible.");
            changes++;
        }
        //-Raises strength to 80.
        if (rand(3) == 0 && changes < changeLimit && MutagenBonus("str", 1)) {
            outputText("[pg]While heat builds in your muscles, their already-potent mass shifting slightly as they gain even more strength than before.");
            changes++;
        }
        //Raises libido.
        if (changes < changeLimit && rand(3) == 0) {
            outputText("[pg]A knot of fire in your gut doubles you over but passes after a few moments.  As you straighten you can feel the heat seeping into you, ");
            //(DICK)
            if (player.cocks.length > 0 && (player.gender != 3 || rand(2) == 0)) {
                outputText("filling ");
                if (player.cocks.length > 1) outputText("each of ");
                outputText("your [cocks] with the desire to breed.  You get a bit hornier when you realize your sex-drive has gotten a boost.");
            }
            //(COOCH)
            else if (player.hasVagina()) outputText("puddling in your [vagina].  An instinctive desire to mate and lay eggs spreads through you, increasing your lust and boosting your sex-drive.");
            //(TARDS)
            else outputText("puddling in your featureless crotch for a split-second before it slides into your [ass].  You want to be fucked, filled, and perhaps even gain a proper gender again.  Through the lust you realize your sex-drive has been permanently increased.");
            if (MutagenBonus("lib", 1))
                changes++; //compromise for "fantasy". Sounds fair.
        }
        //Lower wisdom down to 40

        if (player.blockingBodyTransformations()) changeLimit = 0;

        //-Grow hips out if narrow.
        if (player.hips.type < 10 && changes < changeLimit && rand(3) == 0) {
            outputText("[pg]Your [hips] widens into a larger shape likely to fit your ass better.");
            player.hips.type++;
            changes++;
        }
        //-Big booty
        if (player.butt.type < 8 && changes < changeLimit && rand(3) == 0) {
            player.butt.type++;
            changes++;
            outputText("[pg]Your butt cheeks itch as they inflates to a larger plumper size. When it stops, you find yourself the proud owner of a [butt].");
        }

        //Glowing Lizard Cock:
        if (player.cockTotal() > 0 && player.cocks[0].cockType != CockTypesEnum.CAVE_WYRM && rand(4) == 0 && changes < changeLimit) {
            for (temp2 = 0; temp2 < player.cocks.length && player.cocks[temp2].cockType == CockTypesEnum.CAVE_WYRM; temp2++) { }
            transformations.CockCaveWyrm(temp2).applyEffect();
            changes++;
            dynStats("lus", 10, "scale", false);
            MutagenBonus("lib", 3);
        }
        //Vagina Turns Glowing:
        if (player.hasVagina() && player.vaginaType() != VaginaClass.CAVE_WYRM && rand(4) == 0 && changes < changeLimit) {
            transformations.VaginaCaveWyrm().applyEffect();
            dynStats("lus", 10, "scale", false);
            player.addCurse("sen", 2, 1);
            changes++;
        }
        //Physical changes:
        //Asshole Start Glowing:
        if (transformations.AssholeGlowing.isPossible() && rand(3) == 0 && changes < changeLimit) {
            transformations.AssholeGlowing.applyEffect();
            changes++;
        }
        //Nipples Start Glowing:
        if (transformations.NipplesGlowing.isPossible() && rand(3) == 0 && changes < changeLimit) {
            transformations.NipplesGlowing.applyEffect();
            changes++;
        }
        //Nipples Turn Back:
        if (player.hasStatusEffect(StatusEffects.BlackNipples) && changes < changeLimit && rand(3) == 0) {
            transformations.NipplesNoColor.applyEffect();
            changes++;
        }
        //Tail
        if (player.tailType != Tail.CAVE_WYRM && changes < changeLimit && rand(3) == 0) {
            outputText("[pg]");
            transformations.TailCaveWyrm.applyEffect();
            changes++;
        }
        //Legs
        if (player.lowerBody != LowerBody.CAVE_WYRM && player.tailType == Tail.CAVE_WYRM && changes < changeLimit && rand(3) == 0) {
            outputText("[pg]");
            transformations.LowerBodyCaveWyrm.applyEffect();
            changes++;
        }
        //Arms
        if (player.arms.type != Arms.CAVE_WYRM && player.lowerBody == LowerBody.CAVE_WYRM && changes < changeLimit && rand(3) == 0) {
            outputText("[pg]");
            transformations.ArmsCaveWyrm.applyEffect();
            changes++;
        }
        //Fanged face
        if (player.faceType == Face.HUMAN && player.faceType != Face.SALAMANDER_FANGS && changes < changeLimit && rand(3) == 0) {
            outputText("[pg]");
            transformations.FaceSalamanderFangs.applyEffect();
            changes++;
        }
        if (player.faceType != Face.HUMAN && player.faceType != Face.SALAMANDER_FANGS && changes < changeLimit && rand(3) == 0) {
            outputText("[pg]");
            transformations.FaceHuman.applyEffect();
            changes++;
        }
        //Lizard eyes
        if (changes < changeLimit && rand(3) == 0 && transformations.FaceSalamanderFangs.isPresent() && transformations.EyesHuman.isPresent()) {
            outputText("[pg]");
            transformations.EyesCaveWyrm.applyEffect();
            changes++;
        }
        //Remove odd eyes
        if (changes < changeLimit && rand(3) == 0 && player.eyes.type > Eyes.HUMAN && player.eyes.type != Eyes.CAVE_WYRM) {
            outputText("[pg]");
            transformations.EyesHuman.applyEffect();
            changes++;
        }
        //Ears
        if (player.faceType == Face.SALAMANDER_FANGS && player.ears.type != Ears.CAVE_WYRM && changes < changeLimit && rand(3) == 0) {
            outputText("[pg]");
            transformations.EarsCaveWyrm.applyEffect();
            changes++;
        }
        //Tongue
        if (player.tongue.type == Tongue.HUMAN && player.tongue.type != Tongue.CAVE_WYRM && changes < changeLimit && rand(3) == 0) {
            outputText("[pg]");
            transformations.TongueCaveWyrm.applyEffect();
            changes++;
        }
        if (player.tongue.type != Tongue.HUMAN && player.tongue.type != Tongue.CAVE_WYRM && changes < changeLimit && rand(3) == 0) {
            outputText("[pg]");
            transformations.TongueHuman.applyEffect();
            changes++;
        }
        //Partial scaled skin
        if (player.hasPlainSkinOnly() && rand(3) == 0) {
            outputText("[pg]");
            transformations.SkinScales(Skin.COVERAGE_LOW, {color: "midnight black"}).applyEffect();
            changes++;
        }
        if (!player.hasPartialCoat(Skin.SCALES) && rand(3) == 0) {
            outputText("[pg]");
            transformations.SkinPlain.applyEffect();
            changes++;
        }
        //Skin color change
        if (player.skinColor != "grayish-blue" && changes < changeLimit && rand(3) == 0) {
            outputText("[pg]You skin begin to itch as it darkens taking on <b>a grayish-blue color.</b>");
            player.skinColor = "grayish-blue";
            changes++;
        }
        //Acid Spit
        if (!player.hasPerk(PerkLib.AcidSpit) && changes < changeLimit && rand(3) == 0 && player.isRace(Races.CAVEWYRM, 1, false)) {
            outputText("[pg]Your endowment begins to feel increasingly pleasurable to the point you drool small glowing blue drop of saliva on the ground lost in the pleasure of your oozing vagina/ and / dripping penis. You lose all desire as your eyes zero in on the smoking vegetation progressively corroded by your fluorescent drool. <b>It seems you now can drool acid!</b>\n");
            outputText("(<b>Perk Gained: Acid Spit</b>)");
            player.createPerk(PerkLib.AcidSpit, 0, 0, 0, 0);
            changes++;
        }
        //Azureflame Breath
        if (!player.hasPerk(PerkLib.AzureflameBreath) && changes < changeLimit && rand(3) == 0 && player.isRace(Races.CAVEWYRM, 1, false)) {
            outputText("[pg]You suddenly belch a long neon blue flame in front of you roasting the nearby vegetation. It didn't hurt your throat however so you shrug. <b>Well you will have to control your blue fire breath better not to set fire to your own camp.</b>\n");
            outputText("(<b>Perk Gained: Azureflame Breath</b>)");
            player.createPerk(PerkLib.AzureflameBreath, 0, 0, 0, 0);
            changes++;
        }
        //Removing gills
        if (rand(4) == 0 && player.hasGills() && changes < changeLimit) {
            outputText("[pg]");
            transformations.GillsNone.applyEffect();
            changes++;
        }
        //FAILSAFE CHANGE
        if (changes == 0) {
            outputText("[pg]Inhuman vitality spreads through your body, invigorating you!\n");
            HPChange((100*player.postConsumptionMlt()), true);
            dynStats("lus", Math.round(5*player.postConsumptionMlt()), "scale", false);
        }
        player.refillHunger(10);
        flags[kFLAGS.TIMES_TRANSFORMED] += changes;
    }

    public function nocelloliquer(player:Player):void {
        player.slimeFeed();
        //init variables
        var changes:Number = 0;
        var changeLimit:Number = 2;
        var temp2:Number = 0;
        //Randomly choose affects limit
        if (rand(2) == 0) changeLimit++;
        if (rand(2) == 0) changeLimit++;
        if (rand(2) == 0) changeLimit++;
        changeLimit += player.additionalTransformationChances;
        //clear screen
        clearOutput();
        outputText("You uncork the bottle and drink it down.  The taste is actually quite sweet, like an alcohol but with a hint of hazelnuts flavor.  Would it change anything about you than making feeling of warmth spreading inside?");
		DrunkenPowerEmpowerIfPossible();
		AelfwineEmpowerIfPossible();
        //Statistical changes:
        //-Raises speed up to 90.
        if (changes < changeLimit && rand(3) == 0 && MutagenBonus("spe", 1)) {
            if (player.spe < 30) outputText("[pg]Tingles run through your muscles, and your next few movements seem unexpectedly fast.  The liqueur somehow made you faster!");
            else if (player.spe < 50) outputText("[pg]You feel tingles running through your body, and after a moment, it's clear that you're getting faster.");
            else if (player.spe < 65) outputText("[pg]The tight, ready feeling you've grown accustomed to seems to intensify, and you know in the back of your mind that you've become even faster.");
            else outputText("[pg]Something changes in your physique, and you grunt, chopping an arm through the air experimentally.  You seem to move even faster than before, confirming your suspicions.");
            changes++;
        }
        //-Reduces intelligence down to 60.
        if (player.inte > 60 && changes < changeLimit && rand(4) == 0) {
            outputText("[pg]You start to feel a bit dizzy, but the sensation quickly passes.  Thinking hard on it, you mentally brush away the fuzziness that seems to permeate your brain and determine that this firewater may have actually made you dumber.  It would be best not to drink too much of it.");
            player.addCurse("int", 1, 1);
            changes++;
        }
        //-Raises libido up to 80.
        if (changes < changeLimit && rand(3) == 0) {
            outputText("[pg]A knot of fire in your gut doubles you over but passes after a few moments.  As you straighten you can feel the heat seeping into you, ");
            //(DICK)
            if (player.cocks.length > 0 && (player.gender != 3 || rand(2) == 0)) {
                outputText("filling ");
                if (player.cocks.length > 1) outputText("each of ");
                outputText("your [cocks] with the desire to breed.  You get a bit hornier when you realize your sex-drive has gotten a boost.");
            }
            //(COOCH)
            else if (player.hasVagina()) outputText("puddling in your [vagina].  An instinctive desire to mate spreads through you, increasing your lust and boosting your sex-drive.");
            //(TARDS)
            else outputText("puddling in your featureless crotch for a split-second before it slides into your [ass].  You want to be fucked, filled, and perhaps even gain a proper gender again.  Through the lust you realize your sex-drive has been permanently increased.");
            MutagenBonus("lib", 2);
            changes++;
        }
        //-Raises toughness
        if (changes < changeLimit && rand(3) == 0 && MutagenBonus("tou", 2)) {
            if (player.tou < 40)
                outputText("[pg]Your body and skin both thicken noticeably.  You pinch your [skin.type] experimentally and marvel at how much tougher your hide has gotten.");
            else if (player.tou < 55)
                outputText("[pg]You grin as you feel your form getting a little more solid.  It seems like your whole body is toughening up quite nicely, and by the time the sensation goes away, you feel ready to take a hit.");
            else
                outputText("[pg]You snarl happily as you feel yourself getting even tougher.  It's a barely discernible difference, but you can feel your [skin.type] getting tough enough to make you feel invincible.");
            changes++;
        }
        //-Reduces strength down to 70.
        if (player.str > 70 && changes < changeLimit && rand(4) == 0) {
			outputText("[pg]You feel a little weaker, but maybe it's just the liqueur.");
            player.addCurse("str", 1, 1);
            changes++;
		}
        if (player.blockingBodyTransformations()) changeLimit = 0;
        //Sexual Changes:
        //-Lizard dick - first one
        if (player.lizardCocks() == 0 && player.cockTotal() > 0 && changes < changeLimit && rand(4) == 0) {
            //Find the first non-lizzy dick
            for (temp2 = 0; temp2 < player.cocks.length && player.cocks[temp2].cockType == CockTypesEnum.LIZARD; temp2++) { }
            transformations.CockLizard(temp2).applyEffect();
            changes++;
            dynStats("lus", 10, "scale", false);
            MutagenBonus("lib", 3);
        }
        //(CHANGE OTHER DICK)
        //Requires 1 lizard cock, multiple cocks
        if (player.lizardCocks() > 0 && player.cockTotal() > player.lizardCocks() && rand(4) == 0 && changes < changeLimit) {
            transformations.CockLizard(player.findFirstCockNotInType([CockTypesEnum.LIZARD])).applyEffect();
            changes++;
            dynStats("lus", 10, "scale", false);
            MutagenBonus("lib", 3);
        }
        //-Grows second lizard dick if only 1 dick
        if (player.lizardCocks() == 1 && player.cocks.length == 1 && rand(4) == 0 && changes < changeLimit) {
            transformations.CockLizard(1, player.cocks[0].cockLength).applyEffect();
            player.cocks[1].cockThickness = player.cocks[0].cockThickness;
            changes++;
            dynStats("lus", 10, "scale", false);
            MutagenBonus("lib", 3);
        }
        //Grow a cunt (guaranteed if no gender)
        if (player.gender == 0 || (!player.hasVagina() && changes < changeLimit && rand(3) == 0)) {
            transformations.VaginaHuman().applyEffect();
            player.addCurse("sen", 10, 1);
            changes++;
        }
        //WANG GROWTH
        if (!player.hasCock() && changes < changeLimit && rand(3) == 0) {
            transformations.CockHuman(0, 7).applyEffect();
            if (player.balls == 0) {
                outputText(" and a pair of balls");
                transformations.BallsDuo.applyEffect(false);
                player.ballSize = 2;
            }
            player.cocks[0].cockThickness = 1.4;
            dynStats("lus", 20, "scale", false);
            player.addCurse("sen", 5, 1);
            MutagenBonus("lib", 4);
            changes++;
        }
                //-Shrink tits if above DDs.
        //Cannot happen at same time as row removal
        else if (changes < changeLimit && player.breastRows.length == 1 && rand(4) == 0 && player.breastRows[0].breastRating >= 7) {
            changes++;
            //(Use standard breast shrinking mechanism if breasts are under 'h')
            if (player.breastRows[0].breastRating < 19) {
                player.shrinkTits();
            }
            //(H+)
            else {
                player.breastRows[0].breastRating -= (4 + rand(4));
                outputText("[pg]Your chest pinches tight, wobbling dangerously for a second before the huge swell of your bust begins to shrink into itself. The weighty mounds jiggle slightly as they shed cup sizes like old, discarded coats, not stopping until they're " + player.breastCup(0) + "s.");
            }
        }
        //-Grow tits to a B-cup if below.
        if (changes < changeLimit && player.breastRows[0].breastRating < 2 && rand(4) == 0) {
            changes++;
            outputText("[pg]Your chest starts to tingle, the [skin.type] warming under your [armor]. Reaching inside to feel the tender flesh, you're quite surprised when it puffs into your fingers, growing larger and larger until it settles into a pair of B-cup breasts.");
            if (player.breastRows[0].breastRating < 1) outputText("  <b>You have breasts now!</b>");
            player.breastRows[0].breastRating = 2;
        }
        //-Grow hips out if narrow.
        if (player.hips.type < 10 && changes < changeLimit && rand(4) == 0) {
            outputText("[pg]Your gait shifts slightly to accommodate your widening [hips]. The change is subtle, but they're definitely broader.");
            player.hips.type++;
            changes++;
        }
        //-Narrow hips if crazy wide
        if (player.hips.type >= 15 && changes < changeLimit && rand(4) == 0) {
            outputText("[pg]Your gait shifts inward, your [hips] narrowing significantly. They remain quite thick, but they're not as absurdly wide as before.");
            player.hips.type--;
            changes++;
        }
        //-Big booty
        if (player.butt.type < 8 && changes < changeLimit && rand(4) == 0) {
            player.butt.type++;
            changes++;
            outputText("[pg]A slight jiggle works through your rear, but instead of stopping it starts again. You can actually feel your [armor] being filled out by the growing cheeks. When it stops, you find yourself the proud owner of a [butt].");
        }
        //-Narrow booty if crazy huge.
        if (player.butt.type >= 14 && changes < changeLimit && rand(4) == 0) {
            changes++;
            player.butt.type--;
            outputText("[pg]A feeling of tightness starts in your [butt], increasing gradually. The sensation grows and grows, but as it does your center of balance shifts. You reach back to feel yourself, and sure enough your massive booty is shrinking into a more manageable size.");
        }
        //Physical changes:
        //Tail - unlocks enhanced with fire tail whip attack
        if (player.tailType != Tail.SALAMANDER && changes < changeLimit && rand(3) == 0) {
            outputText("[pg]");
            transformations.TailSalamander.applyEffect();
            changes++;
        }
        //SPECIAL:
        //Harpy Womb – All eggs are automatically upgraded to large, requires legs + tail to be salamander.
        if (!player.hasPerk(PerkLib.HarpyWomb) && (player.lowerBody == LowerBody.HARPY || player.lowerBody == LowerBody.SALAMANDER) && player.tailType == Tail.SALAMANDER && rand(4) == 0 && changes < changeLimit) {
            player.createPerk(PerkLib.HarpyWomb, 0, 0, 0, 0);
            outputText("[pg]There's a rumbling in your womb, signifying that some strange change has taken place in your most feminine area. No doubt something in it has changed to be more like a harpy. (<b>You've gained the Harpy Womb perk! All the eggs you lay will always be large so long as you have harpy/salamander legs and a salamander tail.</b>)");
            changes++;
        }
        //-Salamander Legs
        if (player.lowerBody != LowerBody.SALAMANDER && player.tailType == Tail.SALAMANDER && changes < changeLimit && rand(3) == 0) {
            outputText("[pg]");
            transformations.LowerBodySalamander(2).applyEffect();
            changes++;
        }
        //-Harpy legs
        if (player.lowerBody != LowerBody.HARPY && player.tailType == Tail.SALAMANDER && changes < changeLimit && rand(4) == 0) {
            outputText("[pg]");
            transformations.LowerBodyHarpy.applyEffect();
            changes++;
        }
        //Arms
        if (player.arms.type != Arms.PHOENIX && changes < changeLimit && rand(4) == 0) {
            outputText("[pg]You smile impishly as you lick the remains of the liqueur from your teeth, but then you notice something changing. ");
            transformations.ArmsPhoenix.applyEffect();
            changes++;
        }
        //Wings
        if (player.wings.type == Wings.NONE && changes < changeLimit && player.arms.type == Arms.PHOENIX && rand(4) == 0) {
            outputText("[pg]");
			transformations.WingsFeatheredPhoenix.applyEffect();
            changes++;
        }
        //Remove old wings
        if (player.wings.type != Wings.FEATHERED_PHOENIX && player.wings.type > Wings.NONE && changes < changeLimit && rand(4) == 0) {
            outputText("[pg]");
            transformations.WingsNone.applyEffect();
            changes++;
        }

        //-Feathery Hair
        if (transformations.HairFeather.isPossible() && changes < changeLimit && player.faceType == Face.HUMAN && rand(4) == 0) {
            outputText("[pg]A tingling starts in your scalp, getting worse and worse until you're itching like mad, the feathery strands of your hair tickling your fingertips while you scratch like a dog itching a flea. When you pull back your hand, you're treated to the sight of downy red fluff trailing from your fingernails. A realization dawns on you - you have feathers for hair, just like a phoenix!");
            player.hairColor = "platinum crimson";
            outputText("[pg]");
            transformations.HairFeather.applyEffect(false);
            changes++;
        }
        //Lizard eyes
        if (changes < changeLimit && rand(4) == 0 && transformations.EyesHuman.isPresent()) {
            transformations.EyesLizard.applyEffect();
            changes++;
        }
        //Remove odd eyes
        if (changes < changeLimit && rand(4) == 0 && player.eyes.type > Eyes.HUMAN) {
            outputText("[pg]");
            transformations.EyesHuman.applyEffect();
            changes++;
        }
        //Human face
        if (player.faceType != Face.HUMAN && changes < changeLimit && rand(4) == 0) {
            outputText("[pg]");
            transformations.FaceHuman.applyEffect();
            changes++;
        }
        //Fanged face
        if (player.faceType == Face.HUMAN && player.faceType != Face.SALAMANDER_FANGS && changes < changeLimit && rand(3) == 0) {
            outputText("[pg]");
            transformations.FaceSalamanderFangs.applyEffect();
            changes++;
        }
        //Human ears
        if (player.faceType == Face.HUMAN && player.ears.type != Ears.HUMAN && changes < changeLimit && rand(4) == 0) {
            outputText("[pg]");
            transformations.EarsHuman.applyEffect();
            changes++;
        }
        //Elfin ears
        if (player.ears.type != Ears.ELFIN && changes < changeLimit && rand(3) == 0) {
            outputText("[pg]");
			transformations.EarsElfin.applyEffect();
            changes++;
        }
        //Partial scaled skin
        if (player.hasPlainSkinOnly() && rand(4) == 0) {
            outputText("[pg]");
            transformations.SkinScales(Skin.COVERAGE_LOW, {color: "red"}).applyEffect();
            changes++;
        }
        if (!player.hasPartialCoat(Skin.SCALES) && rand(4) == 0) {
            outputText("[pg]");
            transformations.SkinPlain.applyEffect();
            changes++;
        }
        // Remove gills
        if (rand(4) == 0 && player.hasGills() && changes < changeLimit) {
            outputText("[pg]");
            transformations.GillsNone.applyEffect();
            changes++;
        }
        //Phoenix Fire Breath
        if (player.racialScore(Races.PHOENIX, false) >= 5 && changes < changeLimit && !player.hasPerk(PerkLib.PhoenixFireBreath)) {
            outputText("[pg]You feel something awakening within you... then a sudden sensation of choking grabs hold of your throat, sending you to your knees as you clutch and gasp for breath.  It feels like there's something trapped inside your windpipe, clawing and crawling its way up.  You retch and splutter and then, with a feeling of almost painful relief, you expel a bellowing roar from deep inside of yourself.  It had enough force to sent a little bit of dirt and shattered gravel all around.");
            outputText("[pg]It seems Nocello liqueur has awaked some kind of power within you... your throat feel quite dry.  (<b>Gained Perk: Phoenix fire breath!</b>)");
            player.createPerk(PerkLib.PhoenixFireBreath, 0, 0, 0, 0);
            changes++;
        }
        //FAILSAFE CHANGE
        if (changes == 0) {
            outputText("[pg]Inhuman vitality spreads through your body, invigorating you!\n");
            HPChange((100*player.postConsumptionMlt()), true);
            dynStats("lus", Math.round(5*player.postConsumptionMlt()), "scale", false);
        }
        player.refillHunger(20);
        flags[kFLAGS.TIMES_TRANSFORMED] += changes;
    }

    /*
            public function wingStick(player:Player):void
            {
                clearOutput();
                outputText("You toss a wingstick at your foe!  It flies straight and true, almost as if it has a mind of its own as it arcs towards [themonster]!\n");
                //1% dodge for each point of speed over 80
                if (monster.spe - 80 > rand(100) + 1 || monster.short == "lizan rogue") {
                    outputText("Somehow [themonster]'");
                    if (!monster.plural) outputText("s");
                    outputText(" incredible speed allows [monster him] to avoid the spinning blades!  The deadly device shatters when it impacts something in the distance.");
                }
                //Not dodged
                else {
                    var damage:Number = 40 + rand(61);
                    outputText(monster.capitalA + monster.short + " is hit with the wingstick!  It breaks apart as it lacerates [monster him]. (" + damage + ")");
                    monster.HP -= damage;
                    if (monster.HP < 0) monster.HP = 0;
                }
                if (monster.short == "lizan rogue") {
                    outputText("You fling the wingstick with all your might and its aim is true. The moment it nears the lizan, though, he catches it with a flick of his wrist.  It appears he is too fast and well trained for normal projectile attacks.");
                }
            }
    */

    public function neonPinkEgg(pregnantChange:Boolean, type:Number, player:Player):void {
        //'type' refers to the variety of seed.
        //0 == bunny
        //1 == laquine
		var changes:Number = 0;
        var changeLimit:Number = 1;
        if (rand(2) == 0) changeLimit++;
        if (rand(2) == 0) changeLimit++;
        changeLimit += player.additionalTransformationChances;
        //Temporary storage
		var temp:Number        = 0;
		var temp2:Number       = 0;
		var temp3:Number       = 0;
		//If this is a pregnancy change, only 1 change per proc.
        if (pregnantChange) changeLimit = 1;
        else clearOutput();
        //If not pregnancy, mention eating it.
        if (!pregnantChange) {
			if (type  == 0) outputText("You eat the neon pink egg, and to your delight it tastes sweet, like candy.  In seconds you've gobbled down the entire thing, and you lick your fingers clean before you realize you ate the shell – and it still tasted like candy.");
			else outputText("You eat the carrot. As expected of a carrot it's tender and juicy, quite delicious actually. Just as you finish the vegetable, your body is overcome by changes.");
		}
        //If pregnancy, warning!
        if (pregnantChange) {
            outputText("\n<b>Your egg-stuffed ");
            if (player.pregnancyType == PregnancyStore.PREGNANCY_BUNNY || player.pregnancy2Type == PregnancyStore.PREGNANCY_BUNNY) {
                outputText("womb ");
                if (player.buttPregnancyType == PregnancyStore.PREGNANCY_BUNNY) outputText("and ");
            }
            if (player.buttPregnancyType == PregnancyStore.PREGNANCY_BUNNY) outputText("backdoor ");
            if (player.buttPregnancyType == PregnancyStore.PREGNANCY_BUNNY && (player.pregnancyType == PregnancyStore.PREGNANCY_BUNNY || player.pregnancy2Type == PregnancyStore.PREGNANCY_BUNNY)) outputText("rumble");
            else outputText("rumbles");
            outputText(" oddly, and you have a hunch that something's about to change</b>.");
        }
        //STATS CHANGURYUUUUU
		//STRENGTH
		if (changes < changeLimit && rand(2) == 0 && type == 1 &&  player.MutagenBonus("str", 1)) {
			//Maxxed
			if (type == 0 && player.str >= 70) {
				outputText("\n\nYou feel strong enough to single-handedly pull a fully-loaded wagon.");
			}
			if ((type == 1 || type == 2) && player.str >= 60) {
				outputText("\n\nYou feel strong enough to single-handedly pull a fully-loaded wagon.");
			}
			//NOT MAXXED
			else {
				outputText("\n\nYour muscles clench and surge, making you feel as strong as a horse.");
				changes++;
			}
		}
        //Boost speed (max 80!)
        if (changes < changeLimit && rand(3) == 0 && MutagenBonus("spe", 2)) {
            if (player.spe < 30) outputText("[pg]Tingles run through your muscles, and your next few movements seem unexpectedly fast.  The egg somehow made you faster!");
            else if (player.spe < 50) outputText("[pg]You feel tingles running through your body, and after a moment, it's clear that you're getting faster.");
            else if (player.spe < 65) outputText("[pg]The tight, ready feeling you've grown accustomed to seems to intensify, and you know in the back of your mind that you've become even faster.");
            else outputText("[pg]Something changes in your physique, and you grunt, chopping an arm through the air experimentally.  You seem to move even faster than before, confirming your suspicions.");
            changes++;
        }
        //Boost libido
        if (changes < changeLimit && rand(5) == 0 && MutagenBonus("lib", 2)) {
            changes++;
            dynStats("lus", (5 + player.lib / 7), "scale", false);
            //Lower ones are gender specific for some reason
            if (player.lib < 60) {
                //(Cunts or assholes!
                if (!player.hasCock() || (player.gender == 3 && rand(2) == 0)) {
                    if (player.lib < 30) {
                        outputText("[pg]You squirm a little and find your eyes glancing down to your groin.  Strange thoughts jump to mind, wondering how it would feel to breed until you're swollen and pregnant.  ");
                        if (player.cor < 25) outputText("You're repulsed by such shameful thoughts.");
                        else if (player.cor < 60) outputText("You worry that this place is really getting to you.");
                        else if (player.cor < 90) outputText("You pant a little and wonder where the nearest fertile male is.");
                        else outputText("You grunt and groan with desire and disappointment.  You should get bred soon!");
                    } else outputText("[pg]Your mouth rolls open as you start to pant with desire.  Did it get hotter?  Your hand reaches down to your " + player.assholeOrPussy() + ", and you're struck by just how empty it feels.  The desire to be filled, not by a hand or a finger but by a virile male, rolls through you like a wave, steadily increasing your desire for sex.");
                }
                //WANGS!
                if (player.hasCock()) {
                    if (player.lib < 30) {
                        outputText("[pg]You squirm a little and find your eyes glancing down to your groin.  Strange thoughts jump to mind, wondering how it would feel to fuck a ");
                        if (rand(2) == 0) outputText("female hare until she's immobilized by all her eggs");
                        else outputText("herm rabbit until her sack is so swollen that she's forced to masturbate over and over again just to regain mobility");
                        outputText(". ");
                        if (player.cor < 25) outputText("You're repulsed by such shameful thoughts.");
                        else if (player.cor < 50) outputText("You worry that this place is really getting to you.");
                        else if (player.cor < 75) outputText("You pant a little and wonder where the nearest fertile female is.");
                        else outputText("You grunt and groan with desire and disappointment.  Gods you need to fuck!");
                    } else outputText("[pg]Your mouth rolls open as you start to pant with desire.  Did it get hotter?  Your hand reaches down to " + sMultiCockDesc() + ", and you groan from how tight and hard it feels.  The desire to squeeze it, not with your hand but with a tight pussy or puckered asshole, runs through you like a wave, steadily increasing your desire for sex.");
                }
            }
            //Libido over 60? FUCK YEAH!
            else if (player.lib < 80) {
                outputText("[pg]You fan your neck and start to pant as your " + player.skinColor + " skin begins to flush red with heat");
                if (player.hasCoat()) outputText(" through your " + player.skinDesc);
                outputText(".  ");
                if (player.gender == 1) outputText("Compression tightens down on " + sMultiCockDesc() + " as it strains against your [armor].  You struggle to fight down your heightened libido, but it's hard – so very hard.");
                else if (player.gender == 0) outputText("Sexual hunger seems to gnaw at your [asshole], demanding it be filled, but you try to resist your heightened libido.  It's so very, very hard.");
                else if (player.gender == 2) outputText("Moisture grows between your rapidly-engorging vulva, making you squish and squirm as you try to fight down your heightened libido, but it's hard – so very hard.");
                else outputText("Steamy moisture and tight compression war for your awareness in your groin as " + sMultiCockDesc() + " starts to strain against your [armor].  Your vulva engorges with blood, growing slicker and wetter.  You try so hard to fight down your heightened libido, but it's so very, very hard.  The urge to breed lingers in your mind, threatening to rear its ugly head.");
            }
            //MEGALIBIDO
            else {
                outputText("[pg]Delicious, unquenchable desire rises higher and higher inside you, until you're having trouble tamping it down all the time.  A little, nagging voice questions why you would ever want to tamp it down.  It feels so good to give in and breed that you nearly cave to the delicious idea on the spot.  Life is beginning to look increasingly like constant fucking or masturbating in a lust-induced haze, and you're having a harder and harder time finding fault with it.  ");
                if (player.cor < 33) outputText("You sigh, trying not to give in completely.");
                else if (player.cor < 66) outputText("You pant and groan, not sure how long you'll even want to resist.");
                else {
                    outputText("You smile and wonder if you can ");
                    if (player.lib < 100) outputText("get your libido even higher.");
                    else outputText("find someone to fuck right now.");
                }
            }
        }
        //BIG sensitivity gains to 60.
        if (player.sens < 60 && changes < changeLimit && rand(3) == 0) {
            changes++;
            outputText("[pg]");
            //(low)
            if (rand(3) != 2) {
                outputText("The feeling of small breezes blowing over your [skin.type] gets a little bit stronger.  How strange.  You pinch yourself and nearly jump when it hurts a tad more than you'd think. You've gotten more sensitive!");
                player.addCurse("sen", 5, 1);
            }
            //(BIG boost 1/3 chance)
            else {
                player.addCurse("sen", 15, 1);
                outputText("Every movement of your body seems to bring heightened waves of sensation that make you woozy.  Your [armor] rubs your " + nippleDescript(0) + "s deliciously");
                if (player.hasFuckableNipples()) {
                    outputText(", sticking to the ");
                    if (player.biggestLactation() > 2) outputText("milk-leaking nipple-twats");
                    else outputText("slippery nipple-twats");
                } else if (player.biggestLactation() > 2) outputText(", sliding over the milk-leaking teats with ease");
                else outputText(" catching on each of the hard nubs repeatedly");
                outputText(".  Meanwhile, your crotch... your crotch is filled with such heavenly sensations from ");
                if (player.gender == 1) {
                    outputText(sMultiCockDesc() + " and your ");
                    if (player.hasBalls()) outputText(ballsDescriptLight());
                    else outputText(assholeDescript());
                } else if (player.gender == 2) outputText("your [vagina] and " + clitDescript());
                else if (player.gender == 3) {
                    outputText(sMultiCockDesc() + ", ");
                    if (player.hasBalls()) outputText(ballsDescriptLight() + ", ");
                    outputText(vaginaDescript(0) + ", and " + clitDescript());
                }
                //oh god genderless
                else outputText("you " + assholeDescript());
                outputText(" that you have to stay stock-still to keep yourself from falling down and masturbating on the spot.  Thankfully the orgy of tactile bliss fades after a minute, but you still feel way more sensitive than your previous norm.  This will take some getting used to!");
            }
        }
        //Makes girls very girl(90), guys somewhat girly (61).
        if (changes < changeLimit && rand(2) == 0) {
            var buffer:String = "";
            if (player.gender < 2) buffer += player.modFem(61, 4);
            else buffer += player.modFem(90, 4);
            if (buffer != "") {
                outputText(buffer);
                changes++;
            }
        }
        if (player.blockingBodyTransformations()) changeLimit = 0;
        //Shrink
        if (rand(3) == 0 && player.tallness > 60 && changes < changeLimit && type == 0) {
            changes++;
            outputText("[pg]Your skin crawls, making you close your eyes and shiver.  When you open them again the world seems... different.  After a bit of investigation, you realize you've become shorter!\n");
            player.tallness -= (1 + rand(5));
        }
		//Taller
		if (rand(3) == 0 && player.basetallness < 96 && changes < changeLimit && type == 1) {
            outputText("[pg]You suddenly realise the ground is farther down then you remember it to be… did you just grew taller?");
            player.tallness += (1 + rand(5));
            changes++;
        }
        //De-wettification of cunt (down to 3?)!
        if (player.wetness() > 3 && changes < changeLimit && rand(3) == 0) {
            //Just to be safe
            if (player.hasVagina()) {
                outputText("[pg]The constant flow of fluids that sluice from your [vagina] slow down, leaving you feeling a bit less like a sexual slip-'n-slide.");
                player.vaginas[0].vaginalWetness--;
                changes++;
            }
        }
        //Fertility boost!
        if (changes < changeLimit && rand(4) == 0 && player.fertility < 50 && player.hasVagina()) {
            player.fertility += 2 + rand(5);
            changes++;
            outputText("[pg]You feel strange.  Fertile... somehow.  You don't know how else to think of it, but you know your body is just aching to be pregnant and give birth.");
        }
        //-VAGs
        if (player.hasVagina() && !player.hasPerk(PerkLib.BunnyEggs) && changes < changeLimit && rand(4) == 0 && player.racialScore(Races.BUNNY, false) > 3) {
            outputText("[pg]Deep inside yourself there is a change.  It makes you feel a little woozy, but passes quickly.  Beyond that, you aren't sure exactly what just happened, but you are sure it originated from your womb.[pg]");
            outputText("(<b>Perk Gained: Bunny Eggs</b>)");
            player.createPerk(PerkLib.BunnyEggs, 0, 0, 0, 0);
            changes++;
        }
		if (type == 1 && player.hasVagina() && player.vaginaType() != VaginaClass.EQUINE && changes < changeLimit && rand(3) == 0) {
			transformations.VaginaHorse().applyEffect();
		}
        //Shrink Balls if pc IS NOT an Easter Bunny yet
        if (player.hasBalls() && player.ballSize > 5 && rand(3) == 0 && changes < changeLimit && !player.hasPerk(PerkLib.EasterBunnyBalls)) {
            if (player.ballSize < 10) {
                outputText("[pg]Relief washes through your groin as your " + ballsDescript() + " lose about an inch of their diameter.");
                player.ballSize--;
            } else if (player.ballSize < 25) {
                outputText("[pg]Relief washes through your groin as your " + ballsDescript() + " lose a few inches of their diameter.  Wow, it feels so much easier to move!");
                player.ballSize -= (2 + rand(3));
            } else {
                outputText("[pg]Relief washes through your groin as your " + ballsDescript() + " lose at least six inches of diameter.  Wow, it feels SOOOO much easier to move!");
                player.ballSize -= (6 + rand(3));
            }
            changes++;
        }
        //Get rid of extra balls
        if (player.balls > 2 && changes < changeLimit && (!player.hasPerk(PerkLib.EasterBunnyBalls) || type == 0) && rand(3) == 0) {
            changes++;
            outputText("[pg]There's a tightening in your [sack] that only gets higher and higher until you're doubled over and wheezing.  When it passes, you reach down and discover that <b>two of your testicles are gone.</b>");
            player.balls -= 2;
        }
        //Make PC an Easter bunny
        if (!player.hasPerk(PerkLib.EasterBunnyBalls) && type == 0 && player.hasCock() && player.balls <= 4 && rand(3) == 0) {
            outputText("[pg]You gasp as ");
            if (player.balls >= 2) outputText("something fundamental change in your balls. ");
            if (player.balls == 0) {
                outputText("a heavy flesh bag not unlike a pair of ball form beneath your cock. " +
                        "At first you think this is a standard set of balls but no this is something else altogether. ");
                transformations.BallsDuo.applyEffect(false);
            }
            outputText("You are proven right a few second later when they begin to inflate, " +
                    "gaining in weight. Overcome by lust you begin jerking your cock, something large and pleasurable sliding out of your nuts and running down the length of your [cock]. " +
                    "As two eggs shoot out of your urethra you gasp and inspect your sacks, now empty. It would seem you acquired the easter bunnies ability to produce and cum eggs. " +
                    "Your balls and lust will now regularly increase in size until you shoot those damn eggs out, heck you can already feel two new smaller eggs in your sacks replacing those you " +
                    "ejaculated. <b>You now have Easter Bunny balls!</b>");
            player.createPerk(PerkLib.EasterBunnyBalls, 0, 0, 0, 0);
            player.ballSize = 1;
            flags[kFLAGS.EASTER_BUNNY_EGGS_STORED] += 2;
        }
		//MALENESS.
		if ((player.gender == 1 || player.gender == 3) && rand(1.5) == 0 && type == 1 && changes < changeLimit) {
			//If cocks that aren't horsified!
			if ((player.horseCocks() + player.demonCocks()) < player.cockTotal()) {
				temp = player.findFirstCockNotInType([CockTypesEnum.HORSE,CockTypesEnum.DEMON]);
				CoC.instance.transformations.CockHorse(temp).applyEffect();
				temp2 = player.growCock(temp, rand(4) + 4);

				dynStats("lus", 35, "scale", false);
				player.addCurse("sen", 4, 1);
				player.MutagenBonus("lib", 5);
				//Make cock thicker if not thick already!
				if (player.cocks[temp].cockThickness <= 2) player.thickenCock(temp, 1);
				changes++;
			}
			//Players cocks are all horse-type - increase size!
			else {
				//single cock
				if (player.cocks.length == 1) {
					temp2 = player.growCock(0, rand(3) + 1);
					temp  = 0;
					dynStats("lus", 10, "scale", false);
					player.addCurse("sen", 1, 1);
				}
				//Multicock
				else {
					//Find smallest cock
					//Temp2 = smallness size
					//temp = current smallest
					temp3 = player.cocks.length;
					temp  = 0;
					while (temp3 > 0) {
						temp3--;
						//If current cock is smaller than saved, switch values.
						if (player.cocks[temp].cockLength > player.cocks[temp3].cockLength) {
							temp2 = player.cocks[temp3].cockLength;
							temp  = temp3;
						}
					}
					//Grow smallest cock!
					//temp2 changes to growth amount
					temp2 = player.growCock(temp, rand(4) + 1);
					dynStats("lus", 10, "scale", false);
					player.addCurse("sen", 1, 1);
				}
				outputText("\n\n");
				if (temp2 > 2) outputText("Your " + player.cockDescript(temp) + " tightens painfully, inches of taut horse-flesh pouring out from your sheath as it grows longer.  Thick animal-pre forms at the flared tip, drawn out from the pleasure of the change.");
				if (temp2 > 1 && temp2 <= 2) outputText("Aching pressure builds within your sheath, suddenly releasing as an inch or more of extra dick flesh spills out.  A dollop of pre beads on the head of your enlarged " + player.cockDescript(temp) + " from the pleasure of the growth.");
				if (temp2 <= 1) outputText("A slight pressure builds and releases as your " + player.cockDescript(temp) + " pushes a bit further out of your sheath.");
				changes++;
			}
			//Chance of thickness + daydream
			if (rand(2) == 0 && changes < changeLimit && player.horseCocks() > 0) {
				temp3 = 0;
				temp2 = player.cocks.length;
				while (temp2 > 0) {
					temp2--;
					if (player.cocks[temp2].cockThickness <= player.cocks[temp3].cockThickness) {
						temp3 = temp2;
					}
				}
				temp = temp3;
				player.thickenCock(temp, .5);
				outputText("\n\nYour " + Appearance.cockNoun(CockTypesEnum.HORSE) + " thickens inside its sheath, growing larger and fatter as your veins thicken, becoming more noticeable.  It feels right");
				if (player.cor + player.lib < 60) outputText(" to have such a splendid tool.  You idly daydream about cunts and pussies, your " + Appearance.cockNoun(CockTypesEnum.HORSE) + " plowing them relentlessly, stuffing them pregnant with cum");
				if (player.cor + player.lib >= 60 && player.cor + player.lib < 100) outputText(" to be this way... You breath the powerful animalistic scent and fantasize about fucking centaurs night and day until their bellies slosh with your cum");
				if (player.cor + player.lib >= 100 && player.cor + player.lib <= 175) outputText(" to be a rutting stud.  You ache to find a mare or centaur to breed with.  Longing to spend your evenings plunging a " + Appearance.cockNoun(CockTypesEnum.HORSE) + " deep into their musky passages, dumping load after load of your thick animal-cum into them.  You'd be happy just fucking horsecunts morning, noon, and night.  Maybe somewhere there is a farm needing a breeder..");
				if (player.cor + player.lib > 175) outputText(" to whinny loudly like a rutting stallion.  Your " + Appearance.cockNoun(CockTypesEnum.HORSE) + " is perfect for fucking centaurs and mares.  You imagine the feel of plowing an equine pussy deeply, bottoming out and unloading sticky jets of horse-jizz into its fertile womb.  Your hand strokes your horsecock of its own accord, musky pre dripping from the flared tip with each stroke.  Your mind wanders to the thought of you with a harem of pregnant centaurs.");
				outputText(".");
				if (player.cor < 30) outputText("  You shudder in revulsion at the strange thoughts and vow to control yourself better.");
				if (player.cor >= 30 && player.cor < 60) outputText("  You wonder why you thought such odd things, but they have a certain appeal.");
				if (player.cor >= 60 && player.cor < 90) outputText("  You relish your twisted fantasies, hoping to dream of them again.");
				if (player.cor >= 90) outputText("  You flush hotly and give a twisted smile, resolving to find a fitting subject to rape and relive your fantasies.");
				dynStats("lus", 10, "scale", false);
				player.MutagenBonus("lib", 1);
			}
			//Chance of ball growth if not 3" yet
			if (rand(2) == 0 && changes < changeLimit && player.ballSize <= 3 && player.horseCocks() > 0) {
				if (player.balls == 0) {
					player.balls    = 2;
					player.ballSize = 1;
					outputText("\n\nA nauseating pressure forms just under the base of your maleness.  With agonizing pain the flesh bulges and distends, pushing out a rounded lump of flesh that you recognize as a testicle!  A moment later relief overwhelms you as the second drops into your newly formed sack.");
					dynStats("lus", 5, "scale", false);
					player.MutagenBonus("lib", 2);
					Metamorph.unlockMetamorphEx(BallsMem.getMemory(BallsMem.DUO));
				}
				else {
					player.ballSize++;
					if (player.ballSize <= 2) outputText("\n\nA flash of warmth passes through you and a sudden weight develops in your groin.  You pause to examine the changes and your roving fingers discover your " + Appearance.ballsDescription(false, true, player) + " have grown larger than a human's.");
					if (player.ballSize > 2) outputText("\n\nA sudden onset of heat envelops your groin, focusing on your " + Appearance.sackDescript(player) + ".  Walking becomes difficult as you discover your " + Appearance.ballsDescription(false, true, player) + " have enlarged again.");
					dynStats("lus", 3, "scale", false);
					player.MutagenBonus("lib", 1);
				}
				changes++;
			}
		}
        //Boost cum production
        if ((player.hasBalls() || player.hasCock()) && player.cumQ() < 3000 && rand(3) == 0 && changeLimit > 1) {
            changes++;
            player.cumMultiplier += 3 + rand(7);
            if (player.cumQ() >= 250) dynStats("lus", 3, "scale", false);
            if (player.cumQ() >= 750) dynStats("lus", 4, "scale", false);
            if (player.cumQ() >= 2000) dynStats("lus", 5, "scale", false);
            //Balls
            if (player.hasBalls()) {
                //(Small cum quantity) < 50
                if (player.cumQ() < 50) outputText("[pg]A twinge of discomfort runs through your [balls], but quickly vanishes.  You heft your orbs but they haven't changed in size – they just feel a little bit denser.");
                //(medium cum quantity) < 250
                else if (player.cumQ() < 250) {
                    outputText("[pg]A ripple of discomfort runs through your [balls], but it fades into a pleasant tingling.  You reach down to heft the orbs experimentally but they don't seem any larger.");
                    if (player.hasCock()) outputText("  In the process, you brush " + sMultiCockDesc() + " and discover a bead of pre leaking at the tip.");
                }
                //(large cum quantity) < 750
                else if (player.cumQ() < 750) {
                    outputText("[pg]A strong contraction passes through your [sack], almost painful in its intensity.  ");
                    if (player.hasCock()) outputText(SMultiCockDesc() + " leaks and dribbles pre-cum down your [legs] as your body's cum production kicks up even higher.");
                    else outputText("You wince, feeling pent up and yet unable to release.  You really wish you had a cock right about now.");
                }
                //(XL cum quantity) < 2000
                else if (player.cumQ() < 2000) {
                    outputText("[pg]An orgasmic contraction wracks your [balls], shivering through the potent orbs and passing as quickly as it came.  ");
                    if (player.hasCock()) outputText("A thick trail of slime leaks from " + sMultiCockDesc() + " down your [leg], pooling below you.");
                    else outputText("You grunt, feeling terribly pent-up and needing to release.  Maybe you should get a penis to go with these balls...");
                    outputText("  It's quite obvious that your cum production has gone up again.");
                }
                //(XXL cum quantity)
                else {
                    outputText("[pg]A body-wrenching contraction thrums through your [balls], bringing with it the orgasmic feeling of your body kicking into cum-production overdrive.  ");
                    if (player.hasCock()) outputText("pre-cum explodes from " + sMultiCockDesc() + ", running down your [leg] and splattering into puddles that would shame the orgasms of lesser " + player.mf("males", "persons") + ".  You rub yourself a few times, nearly starting to masturbate on the spot, but you control yourself and refrain for now.");
                    else outputText("You pant and groan but the pleasure just turns to pain.  You're so backed up – if only you had some way to vent all your seed!");
                }
            }
            //NO BALLZ (guaranteed cock tho)
            else {
                //(Small cum quantity) < 50
                if (player.cumQ() < 50) outputText("[pg]A twinge of discomfort runs through your body, but passes before you have any chance to figure out exactly what it did.");
                //(Medium cum quantity) < 250)
                else if (player.cumQ() < 250) outputText("[pg]A ripple of discomfort runs through your body, but it fades into a pleasant tingling that rushes down to " + sMultiCockDesc() + ".  You reach down to heft yourself experimentally and smile when you see pre-beading from your maleness.  Your cum production has increased!");
                //(large cum quantity) < 750
                else if (player.cumQ() < 750) outputText("[pg]A strong contraction passes through your body, almost painful in its intensity.  " + SMultiCockDesc() + " leaks and dribbles pre-cum down your [legs] as your body's cum production kicks up even higher!  Wow, it feels kind of... good.");
                //(XL cum quantity) < 2000
                else if (player.cumQ() < 2000) outputText("[pg]An orgasmic contraction wracks your abdomen, shivering through your midsection and down towards your groin.  A thick trail of slime leaks from " + sMultiCockDesc() + "  and trails down your [leg], pooling below you.  It's quite obvious that your body is producing even more cum now.");
                //(XXL cum quantity)
                else outputText("[pg]A body-wrenching contraction thrums through your gut, bringing with it the orgasmic feeling of your body kicking into cum-production overdrive.  pre-cum explodes from " + sMultiCockDesc() + ", running down your [legs] and splattering into puddles that would shame the orgasms of lesser " + player.mf("males", "persons") + ".  You rub yourself a few times, nearly starting to masturbate on the spot, but you control yourself and refrain for now.");
            }
        }
        //Bunny feet! - requirez earz
        if (player.lowerBody != LowerBody.BUNNY && changes < changeLimit && rand(3) == 0 && player.ears.type == Ears.BUNNY) {
            outputText("[pg]");
            transformations.LowerBodyBunny.applyEffect();
            changes++;
        }
        //get teeth - from human, bunny, coonmask, or other humanoid teeth faces
        if (player.ears.type == Ears.BUNNY && player.faceType != Face.BUCKTEETH && rand(3) == 0 && changes < changeLimit) {
            outputText("[pg]");
            if (player.faceType == Face.HUMAN || player.faceType == Face.SHARK_TEETH) outputText("You catch your nose twitching on its own at the bottom of your vision, but as soon as you focus on it, it stops.  A moment later, some of your teeth tingle and brush past your lips, exposing a white pair of buckteeth! <b>Your mouth has taken on some rabbit-like characteristics!</b>[pg]");
            transformations.FaceBuckteeth.applyEffect();
            changes++;
        }
        //FULL BUN FACE!  REQUIREZ EARZ
        if (player.ears.type == Ears.BUNNY && player.faceType == Face.BUCKTEETH && rand(3) == 0 && changes < changeLimit) {
            outputText("[pg]");
            transformations.FaceBunny.applyEffect();
            changes++;
        }
        //DAH BUNBUN EARZ - requires poofbutt!
        if (player.ears.type != Ears.BUNNY && changes < changeLimit && rand(3) == 0 && player.tailType == Tail.RABBIT) {
            outputText("[pg]");
            transformations.EarsBunny.applyEffect();
            changes++;
        }
        //DAH BUNBUNTAILZ
        if (player.tailType != Tail.RABBIT && rand(3) == 0 && changes < changeLimit) {
            outputText("[pg]");
            transformations.TailRabbit.applyEffect();
            changes++;
        }
        //Partial and full fur
        if (rand(3) == 0 && changes < changeLimit && !player.hasCoatOfType(Skin.FUR)) {
            outputText("[pg]");
            transformations.SkinPlain.applyEffect();
            if (rand(2) == 0) {
                transformations.SkinFur(Skin.COVERAGE_LOW).applyEffect();
            } else {
                transformations.SkinFur(Skin.COVERAGE_COMPLETE).applyEffect();
            }
            changes++;
        }
        if (rand(3) == 0 && changes < changeLimit && player.hasCoatOfType(Skin.FUR)) {
            outputText("[pg]");
            transformations.SkinPlain.applyEffect();
            transformations.SkinFur(Skin.COVERAGE_LOW).applyEffect();
            changes++;
        }
        if (rand(3) == 0 && changes < changeLimit && player.hasPartialCoat(Skin.FUR)) {
            outputText("[pg]");
            transformations.SkinPlain.applyEffect();
            transformations.SkinFur(Skin.COVERAGE_COMPLETE).applyEffect();
            changes++;
        }
        //-Human arms (copy this for goblin ale, mino blood, equinum, centaurinum, canine pepps, demon items)
        if (changes < changeLimit && !InCollection(player.arms.type, Arms.HUMAN) && rand(3) == 0) {
            outputText("[pg]");
            transformations.ArmsHuman.applyEffect();
            changes++;
        }
        //-Human face
        if (player.faceType != Face.HUMAN && changes < changeLimit && rand(3) == 0) {
            outputText("[pg]");
            transformations.FaceHuman.applyEffect();
            changes++;
        }
        //Remove odd eyes
        if (changes < changeLimit && rand(3) == 0 && player.eyes.type > Eyes.HUMAN) {
            outputText("[pg]");
            transformations.EyesHuman.applyEffect();
            changes++;
        }
        // Remove gills
        if (rand(4) == 0 && player.hasGills() && changes < changeLimit) {
            outputText("[pg]");
            transformations.GillsNone.applyEffect();
            changes++;
        }
        //Bunny Breeder Perk?
        //FAILSAAAAFE
        if (changes == 0) {
            if (player.lib < 100) changes++;
            dynStats("lus", (5 + player.lib / 7), "scale", false);
            MutagenBonus("lib", 2);
            //Lower ones are gender specific for some reason
            if (player.lib < 60) {
                //(Cunts or assholes!
                if (!player.hasCock() || (player.gender == 3 && rand(2) == 0)) {
                    if (player.lib < 30) {
                        outputText("[pg]You squirm a little and find your eyes glancing down to your groin.  Strange thoughts jump to mind, wondering how it would feel to breed until you're swollen and pregnant.  ");
                        if (player.cor < 25) outputText("You're repulsed by such shameful thoughts.");
                        else if (player.cor < 60) outputText("You worry that this place is really getting to you.");
                        else if (player.cor < 90) outputText("You pant a little and wonder where the nearest fertile male is.");
                        else outputText("You grunt and groan with desire and disappointment.  You should get bred soon!");
                    } else outputText("[pg]Your mouth rolls open as you start to pant with desire.  Did it get hotter?  Your hand reaches down to your " + player.assholeOrPussy() + ", and you're struck by just how empty it feels.  The desire to be filled, not by a hand or a finger but by a virile male, rolls through you like a wave, steadily increasing your desire for sex.");
                }
                //WANGS!
                if (player.hasCock()) {
                    if (player.lib < 30) {
                        outputText("[pg]You squirm a little and find your eyes glancing down to your groin.  Strange thoughts jump to mind, wondering how it would feel to fuck a ");
                        if (rand(2) == 0) outputText("female hare until she's immobilized by all her eggs");
                        else outputText("herm rabbit until her sack is so swollen that she's forced to masturbate over and over again just to regain mobility");
                        outputText(". ");
                        if (player.cor < 25) outputText("You're repulsed by such shameful thoughts.");
                        else if (player.cor < 50) outputText("You worry that this place is really getting to you.");
                        else if (player.cor < 75) outputText("You pant a little and wonder where the nearest fertile female is.");
                        else outputText("You grunt and groan with desire and disappointment.  Gods you need to fuck!");
                    } else outputText("[pg]Your mouth rolls open as you start to pant with desire.  Did it get hotter?  Your hand reaches down to " + sMultiCockDesc() + ", and you groan from how tight and hard it feels.  The desire to have it squeezed, not with your hand but with a tight pussy or puckered asshole, runs through you like a wave, steadily increasing your desire for sex.");
                }
            }
            //Libido over 60? FUCK YEAH!
            else if (player.lib < 80) {
                outputText("[pg]You fan your neck and start to pant as your " + player.skinColor + " skin begins to flush red with heat");
                if (player.hasCoat()) outputText(" through your " + player.skinDesc);
                outputText(".  ");
                if (player.gender == 1) outputText("Compression tightens down on " + sMultiCockDesc() + " as it strains against your [armor].  You struggle to fight down your heightened libido, but it's hard – so very hard.");
                else if (player.gender == 0) outputText("Sexual hunger seems to gnaw at your [asshole], demanding it be filled, but you try to resist your heightened libido.  It's so very, very hard.");
                else if (player.gender == 2) outputText("Moisture grows between your rapidly-engorging vulva, making you squish and squirm as you try to fight down your heightened libido, but it's hard – so very hard.");
                else outputText("Steamy moisture and tight compression war for your awareness in your groin as " + sMultiCockDesc() + " starts to strain against your [armor].  Your vulva engorges with blood, growing slicker and wetter.  You try so hard to fight down your heightened libido, but it's so very, very hard.  The urge to breed lingers in your mind, threatening to rear its ugly head.");
            }
            //MEGALIBIDO
            else {
                outputText("[pg]Delicious, unquenchable desire rises higher and higher inside you, until you're having trouble tamping it down all the time.  A little, nagging voice questions why you would ever want to tamp it down.  It feels so good to give in and breed that you nearly cave to the delicious idea on the spot.  Life is beginning to look increasingly like constant fucking or masturbating in a lust-induced haze, and you're having a harder and harder time finding fault with it.  ");
                if (player.cor < 33) outputText("You sigh, trying not to give in completely.");
                else if (player.cor < 66) outputText("You pant and groan, not sure how long you'll even want to resist.");
                else {
                    outputText("You smile and wonder if you can ");
                    if (player.lib < 100) outputText("get your libido even higher.");
                    else outputText("find someone to fuck right now.");
                }
            }
        }
        player.refillHunger(20);
    }

    public function goldenSeed(type:Number, player:Player):void {
        //'type' refers to the variety of seed.
        //0 == standard.
        //1 == enhanced - increase change limit and no pre-reqs for TF
        var changes:Number = 0;
        var changeLimit:Number = 2;
        if (type == 1) changeLimit += 2;
        if (rand(2) == 0) changeLimit++;
        if (rand(2) == 0) changeLimit++;
        changeLimit += player.additionalTransformationChances;
        //Generic eating text:
        clearOutput();
        outputText("You pop the nut into your mouth, chewing the delicious treat and swallowing it quickly.  No wonder harpies love these things so much!");
        //****************
        //Stats:
        //****************
        //-Speed increase to 100.
        if (rand(3) == 0 && changes < changeLimit && MutagenBonus("spe", 1)) {
            changes++;
            if (player.spe >= 75) outputText("[pg]A familiar chill runs down your spine. Your muscles feel like well oiled machinery, ready to snap into action with lightning speed.");
            else outputText("[pg]A chill runs through your spine, leaving you feeling like your reflexes are quicker and your body faster.");
        }
        //-Toughness decrease to 50
        if (player.tou > 50 && rand(3) == 0 && changes < changeLimit) {
            changes++;
            if (rand(2) == 0) outputText("[pg]A nice, slow warmth rolls from your gut out to your limbs, flowing through them before dissipating entirely. As it leaves, you note that your body feels softer and less resilient.");
            else outputText("[pg]You feel somewhat lighter, but consequently more fragile.  Perhaps your bones have changed to be more harpy-like in structure?");
            player.addCurse("tou", 1, 1);
        }
        //-Strength increase to 70
        if (rand(3) == 0 && changes < changeLimit && MutagenBonus("str", 1)) {
            changes++;
            //(low str)
            if (player.str < 40) outputText("[pg]Shivering, you feel a feverish sensation that reminds you of the last time you got sick. Thankfully, it passes swiftly, leaving slightly enhanced strength in its wake.");
            //(hi str – 50+)
            else outputText("[pg]Heat builds in your muscles, their already-potent mass shifting slightly as they gain even more strength.");
        }
        //-Libido increase to 90
        if (rand(3) == 0 && changes < changeLimit) {
            if (MutagenBonus("lib", 1))
                changes++; //compromise for "fantasy". And you still get your lust. Sounds fair.
            //(sub 40 lib)
            if (player.lib < 40) {
                outputText("[pg]A passing flush colors your [face] for a second as you daydream about sex. You blink it away, realizing the item seems to have affected your libido.");
                if (player.hasVagina()) outputText(" The moistness of your [vagina] seems to agree.");
                else if (player.hasCock()) outputText(" The hardness of " + sMultiCockDesc() + " seems to agree.");
                dynStats("lus", 5, "scale", false);
            }
            //(sub 75 lib)
            else if (player.lib < 75) outputText("[pg]Heat, blessed heat, works through you from head to groin, leaving you to shudder and fantasize about the sex you could be having right now.[pg]");
            //(hi lib)
            else if (player.lib < 90) outputText("[pg]Sexual need courses through you, flushing your skin with a reddish hue while you pant and daydream of the wondrous sex you should be having right now.[pg]");
            //(90+)
            else outputText("[pg]You groan, something about the seed rubbing your libido in just the right way to make you horny. Panting heavily, you sigh and fantasize about the sex you could be having.[pg]");
            //(fork to fantasy)
            if (player.lib >= 40) {
                dynStats("lus", (player.lib / 5 + 10), "scale", false);
                //(herm – either or!)
                //Cocks!
                if (player.hasCock() && (player.gender != 3 || rand(2) == 0)) {
                    //(male 1)
                    if (rand(2) == 0) {
                        outputText("In your fantasy you're winging through the sky, " + sMultiCockDesc() + " already hard and drizzling with male moisture while you circle an attractive harpy's nest. Her plumage is as blue as the sky, her eyes the shining teal of the sea, and legs splayed in a way that shows you how ready she is to be bred. You fold your wings and dive, wind whipping through your [hair] as she grows larger and larger. With a hard, body-slapping impact you land on top of her, plunging your hard, ready maleness into her hungry box. ");
                        if (player.cockTotal() > 1) {
                            outputText("The extra penis");
                            if (player.cockTotal() > 2) outputText("es rub ");
                            else outputText("rubs ");
                            outputText("the skin over her taut, empty belly, drooling your need atop her.  ");
                            outputText("You jolt from the vision unexpectedly, finding your " + sMultiCockDesc() + " is as hard as it was in the dream. The inside of your [armor] is quite messy from all the pre-cum you've drooled. Perhaps you can find a harpy nearby to lie with.");
                        }
                    }
                    //(male 2)
                    else {
                        outputText("In your fantasy you're lying back in the nest your harem built for you, stroking your dick and watching the sexy bird-girl spread her thighs to deposit another egg onto the pile. The lewd moans do nothing to sate your need, and you beckon for another submissive harpy to approach. She does, her thick thighs swaying to show her understanding of your needs. The bird-woman crawls into your lap, sinking down atop your shaft to snuggle it with her molten heat. She begins kissing you, smearing your mouth with her drugged lipstick until you release the first of many loads. You sigh, riding the bliss, secure in the knowledge that this 'wife' won't let up until she's gravid with another egg. Then it'll be her sister-wife's turn. The tightness of " + sMultiCockDesc() + " inside your [armor] rouses you from the dream, reminding you that you're just standing there, leaking your need into your gear.");
                    }
                }
                //Cunts!
                else if (player.hasVagina()) {
                    //(female 1)
                    if (rand(2) == 0) {
                        outputText("In your fantasy you're a happy harpy mother, your womb stretched by the sizable egg it contains. The surging hormones in your body arouse you again, and you turn to the father of your children, planting a wet kiss on his slobbering, lipstick-gilt cock. The poor adventurer writhes, hips pumping futilely in the air. He's been much more agreeable since you started keeping his cock coated with your kisses. You mount the needy boy, fantasizing about that first time when you found him near the portal, in the ruins of your old camp. The feeling of your stiff nipples ");
                        if (player.hasFuckableNipples()) outputText("and pussy leaking over ");
                        else if (player.biggestLactation() >= 1.5) outputText("dripping milk inside ");
                        else outputText("rubbing inside ");
                        outputText("your [armor] shocks you from the dream, leaving you with nothing but the moistness of your loins for company. Maybe next year you'll find the mate of your dreams?");
                    }
                    //(female 2)
                    else {
                        outputText("In your fantasy you're sprawled on your back, thick thighs splayed wide while you're taken by a virile male. The poor stud was wandering the desert all alone, following some map, but soon you had his bright red rod sliding between your butt-cheeks, the pointed tip releasing runnels of submission to lubricate your loins. You let him mount your pussy before you grabbed him with your powerful thighs and took off. He panicked at first, but the extra blood flow just made him bigger. He soon forgot his fear and focused on the primal needs of all males – mating with a gorgeous harpy. You look back at him and wink, feeling his knot build inside you. Your aching, tender " + nippleDescript(0) + "s pull you out of the fantasy as they rub inside your [armor]. Maybe once your quest is over you'll be able to find a shy, fertile male to mold into the perfect cum-pump.");
                    }
                }
            }
        }
        if (player.blockingBodyTransformations()) changeLimit = 0;
        //antianemone corollary:
        if (changes < changeLimit && player.hairType == Hair.ANEMONE && rand(2) == 0) {
            //-insert anemone hair removal into them under whatever criteria you like, though hair removal should precede abdomen growth; here's some sample text:
            outputText("[pg]As you down the seed, your head begins to feel heavier.  Reaching up, you notice your tentacles becoming soft and somewhat fibrous.  Pulling one down reveals that it feels soft and fluffy, almost feathery; you watch as it dissolves into many thin, feathery strands.  <b>Your hair is now like that of a harpy!</b>");
		    transformations.HairFeather.applyEffect(false);
            changes++;
        }
        //****************
        //   Sexual:
        //****************
        //-Grow a cunt (guaranteed if no gender)
        if (player.gender == 0 || (!player.hasVagina() && changes < changeLimit && rand(3) == 0)) {
            changes++;
            transformations.VaginaHuman().applyEffect();
            player.addCurse("sen", 10, 1);
        }
        //-Remove extra breast rows
        if (changes < changeLimit && player.breastRows.length > 1 && rand(3) == 0 && !flags[kFLAGS.HYPER_HAPPY]) {
            changes++;
            transformations.BreastRowsRemoveToOne.applyEffect();
        }
                //-Shrink tits if above DDs.
        //Cannot happen at same time as row removal
        else if (changes < changeLimit && player.breastRows.length == 1 && rand(3) == 0 && player.breastRows[0].breastRating >= 7 && !flags[kFLAGS.HYPER_HAPPY]) {
            changes++;
            //(Use standard breast shrinking mechanism if breasts are under 'h')
            if (player.breastRows[0].breastRating < 19) {
                player.shrinkTits();
            }
            //(H+)
            else {
                player.breastRows[0].breastRating -= (4 + rand(4));
                outputText("[pg]Your chest pinches tight, wobbling dangerously for a second before the huge swell of your bust begins to shrink into itself. The weighty mounds jiggle slightly as they shed cup sizes like old, discarded coats, not stopping until they're " + player.breastCup(0) + "s.");
            }
        }
        //-Grow tits to a B-cup if below.
        if (changes < changeLimit && player.breastRows[0].breastRating < 2 && rand(3) == 0) {
            changes++;
            outputText("[pg]Your chest starts to tingle, the [skin.type] warming under your [armor]. Reaching inside to feel the tender flesh, you're quite surprised when it puffs into your fingers, growing larger and larger until it settles into a pair of B-cup breasts.");
            if (player.breastRows[0].breastRating < 1) outputText("  <b>You have breasts now!</b>");
            player.breastRows[0].breastRating = 2;
        }
        //Change cock if you have a penis.
        if (changes < changeLimit && player.hasCock() && player.countCocksOfType(CockTypesEnum.AVIAN) < player.cockTotal() && rand(type == 1 ? 4 : 10) == 0) { //2.5x chance if magic seed.
            changes++;
            for (var i:int = 0; i < player.cocks.length; i++) {
                if (player.cocks[i].cockType != CockTypesEnum.AVIAN) {
                    transformations.CockAvian(i).applyEffect();
                    break;
                }
            }
        }
        //****************
        //General Appearance:
        //****************
        //-Femininity to 85
        if (player.femininity < 85 && changes < changeLimit && rand(3) == 0) {
            changes++;
            outputText(player.modFem(85, 3 + rand(5)));
        }
        //-Skin color change – tan, olive, dark, light
        if (!InCollection(player.skinColor, HumanRace.HumanSkinColors) && changes < changeLimit && rand(5) == 0) {
            changes++;
            outputText("[pg]It takes a while for you to notice, but <b>");
            if (player.hasCoat()) outputText("the skin under your " + player.coatColor + " " + player.skinDesc);
            else outputText("your " + player.skinDesc);
            outputText(" has changed to become ");
            player.skinColor = randomChoice(HumanRace.HumanSkinColors);
            outputText(player.skinColor + " colored.</b>");
        }
        //-Grow hips out if narrow.
        if (player.hips.type < 10 && changes < changeLimit && rand(3) == 0) {
            outputText("[pg]Your gait shifts slightly to accommodate your widening [hips]. The change is subtle, but they're definitely broader.");
            player.hips.type++;
            changes++;
        }
        //-Narrow hips if crazy wide
        if (player.hips.type >= 15 && changes < changeLimit && rand(3) == 0) {
            outputText("[pg]Your gait shifts inward, your [hips] narrowing significantly. They remain quite thick, but they're not as absurdly wide as before.");
            player.hips.type--;
            changes++;
        }
        //-Big booty
        if (player.butt.type < 8 && changes < changeLimit && rand(3) == 0) {
            player.butt.type++;
            changes++;
            outputText("[pg]A slight jiggle works through your rear, but instead of stopping it starts again. You can actually feel your [armor] being filled out by the growing cheeks. When it stops, you find yourself the proud owner of a [butt].");
        }
        //-Narrow booty if crazy huge.
        if (player.butt.type >= 14 && changes < changeLimit && rand(4) == 0) {
            changes++;
            player.butt.type--;
            outputText("[pg]A feeling of tightness starts in your [butt], increasing gradually. The sensation grows and grows, but as it does your center of balance shifts. You reach back to feel yourself, and sure enough your massive booty is shrinking into a more manageable size.");
        }
        //-Body thickness to 25ish
        if (player.thickness > 25 && changes < changeLimit && rand(3) == 0) {
            outputText(player.modThickness(25, 3 + rand(4)));
            changes++;
        }
        //Remove odd eyes
        if (changes < changeLimit && rand(5) == 0 && player.eyes.type > Eyes.HUMAN) {
            outputText("[pg]");
            transformations.EyesHuman.applyEffect();
            changes++;
        }
        //****************
        //Harpy Appearance:
        //****************
        //-Harpy legs
        if (player.lowerBody != LowerBody.HARPY && changes < changeLimit && (type == 1 || player.tailType == Tail.HARPY) && rand(4) == 0) {
            outputText("[pg]");
            transformations.LowerBodyHarpy.applyEffect();
            changes++;
        }
        //-Feathery Tail
        if (player.tailType != Tail.HARPY && changes < changeLimit && (type == 1 || player.wings.type == Wings.FEATHERED_LARGE) && rand(4) == 0) {
            outputText("[pg]");
            transformations.TailHarpy.applyEffect();
            changes++;
        }
        //-Propah Wings
        if (player.wings.type == Wings.NONE && changes < changeLimit && (type == 1 || player.arms.type == Arms.HARPY) && rand(4) == 0) {
            outputText("[pg]");
			transformations.WingsFeatheredLarge.applyEffect();
            changes++;
        }
        //-Remove old wings
        if (player.wings.type != Wings.FEATHERED_LARGE && player.wings.type > Wings.NONE && changes < changeLimit && rand(4) == 0) {
            outputText("[pg]");
            transformations.WingsNone.applyEffect();
            changes++;
        }
        //-Feathery Arms
        if (player.arms.type != Arms.HARPY && changes < changeLimit && (type == 1 || player.hairType == 1) && rand(4) == 0) {
            outputText("[pg]You smile impishly as you lick the last bits of the nut from your teeth, but when you go to wipe your mouth, instead of the usual texture of your [skin.type] on your lips, you feel feathers! ");
            transformations.ArmsHarpy.applyEffect();
            changes++;
        }

        //-Feathery Hair
        if (transformations.HairFeather.isPossible() && changes < changeLimit && (type == 1 || player.faceType == Face.HUMAN) && rand(4) == 0) {
            outputText("[pg]");
            transformations.HairFeather.applyEffect();
            changes++;
        }
        //-Human face
        if (player.faceType != Face.HUMAN && changes < changeLimit && (type == 1 || (player.ears.type == Ears.HUMAN || player.ears.type == Ears.ELFIN)) && rand(4) == 0) {
            outputText("[pg]");
            transformations.FaceHuman.applyEffect();
            changes++;
        }
        //-Gain human ears (keep elf ears)
        if ((player.ears.type != Ears.HUMAN && player.ears.type != Ears.ELFIN) && changes < changeLimit && rand(4) == 0) {
            outputText("[pg]");
            transformations.EarsHuman.applyEffect();
            changes++;
        }
        // Remove gills
        if (rand(4) == 0 && player.hasGills() && changes < changeLimit) {
            outputText("[pg]");
            transformations.GillsNone.applyEffect();
            changes++;
        }
        //SPECIAL:
        //Harpy Womb – All eggs are automatically upgraded to large, requires legs + tail to be harpy.
        if (!player.hasPerk(PerkLib.HarpyWomb) && player.lowerBody == LowerBody.HARPY && player.tailType == Tail.HARPY && rand(4) == 0 && changes < changeLimit) {
            player.createPerk(PerkLib.HarpyWomb, 0, 0, 0, 0);
            outputText("[pg]There's a rumbling in your womb, signifying that some strange change has taken place in your most feminine area. No doubt something in it has changed to be more like a harpy. (<b>You've gained the Harpy Womb perk! All the eggs you lay will always be large so long as you have harpy legs and a harpy tail.</b>)");
            changes++;
        }
        if (changes < changeLimit && rand(4) == 0 && ((player.ass.analWetness > 0 && !player.hasPerk(PerkLib.MaraesGiftButtslut)) || player.ass.analWetness > 1)) {
            outputText("[pg]You feel a tightening up in your colon and your [asshole] sucks into itself.  You feel sharp pain at first but that thankfully fades.  Your ass seems to have dried and tightened up.");
            player.ass.analWetness--;
            if (player.ass.analLooseness > 1) player.ass.analLooseness--;
            changes++;
        }
        //Nipples Turn Back:
        if (player.hasStatusEffect(StatusEffects.BlackNipples) && changes < changeLimit && rand(3) == 0) {
            transformations.NipplesNoColor.applyEffect();
            changes++;
        }
        //Debugcunt
        if (changes < changeLimit && rand(3) == 0 && player.hasVagina() && InCollection(player.vaginaType(), VaginaClass.BLACK_SAND_TRAP, VaginaClass.CAVE_WYRM)) {
            transformations.VaginaHuman().applyEffect();
            changes++;
        }
        if (changes == 0) outputText("[pg]Aside from being a tasty treat, it doesn't seem to do anything to you this time.");
        player.refillHunger(10);
        flags[kFLAGS.TIMES_TRANSFORMED] += changes;
    }

    public function skybornSeed(type:Number, player:Player):void {
        //'type' refers to the variety of seed.
        //0 == Avian TF
        //1 == Gryphon TF
        //2 == Peacock TF
        var changes:Number = 0;
        var changeLimit:Number = 2;
        var temp2:Number = 0;
        if (rand(2) == 0) changeLimit++;
        if (rand(2) == 0) changeLimit++;
        changeLimit += player.additionalTransformationChances;
        //Generic eating text:
        clearOutput();
        if (type == 0) outputText("You crack open the seed easily, and eat the fruit inside. A bit dry, as you expected, but with a sweet and aromatic taste that leaves you wanting another one.");
        if (type == 1) outputText("Looking again at the fierce gryphon sculpted on brass and bronze that you found on that strange alcove, your curiosity gets the best of you, and you start examining it. As you do so, the magic stored long ago within the artifact pours out, and starts changing your body!");
        if (type == 2) outputText("Looking again at the wonderful peacock carved in alabaster and ruby that you found on that strange alcove, your curiosity gets the best of you, and you start examining it. As you do so, the magic stored long ago within the artifact pours out, and starts changing your body!");
        //Stats changes
        //-Speed increase to 100.
        if (type != 1 && rand(3) == 0 && changes < changeLimit && MutagenBonus("spe", 1)) {
            changes++;
            if (player.spe >= 75) outputText("[pg]A familiar chill runs down your spine. Your muscles feel like well oiled machinery, ready to snap into action with lightning speed.");
            else outputText("[pg]A chill runs through your spine, leaving you feeling like your reflexes are quicker and your body faster.");
        }
        //-Toughness decrease to 50
        if (player.tou > 50 && type == 0 && rand(3) == 0 && changes < changeLimit) {
            changes++;
            if (rand(2) == 0) outputText("[pg]A nice, slow warmth rolls from your gut out to your limbs, flowing through them before dissipating entirely. As it leaves, you note that your body feels softer and less resilient.");
            else outputText("[pg]You feel somewhat lighter, but consequently more fragile.  Perhaps your bones have changed to be more avian-like in structure?");
            player.addCurse("tou", 1, 1);
        }
        //-Strength increase to 70
        if (type != 1 && rand(3) == 0 && changes < changeLimit && MutagenBonus("str", 1)) {
            changes++;
            //(low str)
            if (player.str < 40) outputText("[pg]Shivering, you feel a feverish sensation that reminds you of the last time you got sick. Thankfully, it passes swiftly, leaving slightly enhanced strength in its wake.");
            //(hi str – 50+)
            else outputText("[pg]Heat builds in your muscles, their already-potent mass shifting slightly as they gain even more strength.");
        }
        if (type == 1 || type == 2) changeLimit = 1 + rand(2);
        if (player.blockingBodyTransformations()) changeLimit = 0;
        //Sexual changes
        if (player.avianCocks() == 0 && player.cockTotal() > 0 && changes < changeLimit && type != 1 && rand(3) == 0) {
            for (temp2 = 0; temp2 < player.cocks.length; temp2++) {
                if (player.cocks[temp2].cockType != CockTypesEnum.AVIAN) break;
            }
            transformations.CockAvian(temp2).applyEffect();
            changes++;
        }
        if (player.cockTotal() > player.avianCocks() && type != 1 && rand(3) == 0 && changes < changeLimit) {
            for (temp2 = 0; temp2 < player.cocks.length; temp2++) {
                if (player.cocks[temp2].cockType != CockTypesEnum.AVIAN) break;
            }
            transformations.CockAvian(temp2).applyEffect();
            changes++;
        }
        if (player.gryphonCocks() == 0 && player.cockTotal() > 0 && changes < changeLimit && type == 1 && rand(3) == 0) {
            for (temp2 = 0; temp2 < player.cocks.length; temp2++) {
                if (player.cocks[temp2].cockType != CockTypesEnum.GRYPHON) break;
            }
            outputText("[pg]The magic of the statue feels more focused now, as it were to change a small but specific area of your body, and it does.");
            transformations.CockGryphon(temp2).applyEffect();
            changes++;
        }
        if (player.cockTotal() > player.gryphonCocks() && type == 1 && rand(3) == 0 && changes < changeLimit) {
            for (temp2 = 0; temp2 < player.cocks.length; temp2++) {
                if (player.cocks[temp2].cockType != CockTypesEnum.GRYPHON) break;
            }
            transformations.CockGryphon(temp2).applyEffect();
            changes++;
        }
        //Legs
        if (player.lowerBody != LowerBody.AVIAN && changes < changeLimit && type != 1 && rand(3) == 0) {
            outputText("[pg]");
            transformations.LowerBodyAvian.applyEffect();
            changes++;
        }
        if (player.lowerBody != LowerBody.GRYPHON && changes < changeLimit && type == 1 && rand(3) == 0) {
            outputText("[pg]You take a seat while you see how the magic within the statue affects you.[pg]");
            transformations.LowerBodyGryphon(2).applyEffect();
            changes++;
        }
        //Tail
        if (player.tailType != Tail.AVIAN && player.lowerBody == LowerBody.AVIAN && changes < changeLimit && type != 1 && rand(3) == 0) {
            outputText("[pg]");
            transformations.TailAvian.applyEffect();
            changes++;
        }
        if (player.tailType != Tail.GRIFFIN && player.lowerBody == LowerBody.GRYPHON && changes < changeLimit && type == 1 && rand(3) == 0) {
            outputText("[pg]");
            transformations.TailGriffin.applyEffect();
            changes++;
        }
        //Arms
        if (player.arms.type != Arms.AVIAN && player.tailType == Tail.AVIAN && changes < changeLimit && type != 1 && rand(3) == 0) {
            outputText("[pg]");
            transformations.ArmsAvian.applyEffect();
            changes++;
        }
        if (player.arms.type != Arms.GRYPHON && player.tailType == Tail.GRIFFIN && changes < changeLimit && type == 1 && rand(3) == 0) {
            outputText("[pg]");
            transformations.ArmsGryphon.applyEffect();
            changes++;
        }
        //Wings
        if (player.wings.type != Wings.FEATHERED_AVIAN && (player.arms.type == Arms.AVIAN || player.arms.type == Arms.GRYPHON) && changes < changeLimit && rand(3) == 0) {
            outputText("[pg]");
            transformations.WingsFeatheredAvian.applyEffect();
            changes++;
        }
        if (player.wings.type != Wings.FEATHERED_AVIAN && player.wings.type != Wings.NONE && changes < changeLimit && rand(3) == 0) {
            outputText("[pg]");
            transformations.WingsNone.applyEffect();
            changes++;
        }
        //Hair
        if (transformations.HairFeather.isPossible() && player.hairLength > 0 && changes < changeLimit && type != 2 && rand(3) == 0) {
            outputText("[pg]"+(type == 0 ? "While you’re yet processing the taste of that odd seed, y":"Y")+"ou suddenly start feeling an annoying itching coming from your scalp, without a doubt a change brought by the transformative nature of the "+(type == 0 ? "seed":"statuette")+".");
            outputText("[pg]The base of each one of your hairs thicken noticeably, and from every one of them, small hairy filament start sprouting of each side. Soon you realize that your hairs are becoming feathers, and in a question of minute, <b>you’re left with a mane of [hair]!</b>");
		    outputText("[pg]");
		    transformations.HairFeather.applyEffect(false);
            changes++;
        }
		if (transformations.HairPeafowlFeather.isPossible() && player.hairLength > 0 && changes < changeLimit && type == 2 && rand(3) == 0) {
            outputText("[pg]You suddenly start feeling an annoying itching coming from your scalp, without a doubt a change brought by the transformative nature of the statuette.");
            outputText("[pg]The base of each one of your hairs thicken noticeably, and from every one of them, small hairy filament start sprouting of each side. Soon you realize that your hairs are becoming feathers, and in a question of minute, <b>you’re left with a mane of [hair] along with creast plumage at the top of your head!</b>");
		    outputText("[pg]");
		    transformations.HairPeafowlFeather.applyEffect(false);
            changes++;
        }
        //Face
        if (player.faceType != Face.AVIAN && changes < changeLimit && rand(3) == 0) {
            outputText("[pg]");
            transformations.FaceAvian.applyEffect();
            changes++;
        }
        //Ears
        if (player.ears.type != Ears.AVIAN && changes < changeLimit && type != 1 && rand(3) == 0) {
            outputText("[pg]");
            transformations.EarsAvian.applyEffect();
            changes++;
        }
        if (player.ears.type != Ears.GRYPHON && player.tailType == Tail.GRIFFIN && changes < changeLimit && type == 1 && rand(3) == 0) {
            outputText("[pg]");
            transformations.EarsGryphon.applyEffect();
            changes++;
        }
        //Skin
        if (!player.isFeatherCovered() && changes < changeLimit && rand(3) == 0) {
            if (player.isFurCovered()) {
                outputText("[pg]After having gulp down the seed, your coat of [fur color] fur tingles unpleasantly, so you begin to scratch it, hoping to remove the itch as soon as possible. Despite your futile attempts, the itch only gets worse.");
                outputText("[pg]A particularly strong itch diverts your attention to your left arm. The fur on seems to be falling off, except for a few tufts that start joining together. The same process begins happening all over your body, leaving your thoroughly confused.The hairs that formed into tufts slowly combine and elongate, and you’re left with thousands of quills covering your body.");
                outputText("[pg]Shortly after, barbs begin sprouting from the sides of the quills. You realize that each one of the quills formed from the remains of your fur is turning into a brand new feather!");
                outputText("[pg]As you ponder this, the barbs finish growing. The feathers on your chest, face, belly, and other soft spots are fluffy and short, like a kind of down feathers. They all gain color, turning into a warm coat of [feather color] colored feathers. <b>Looks like you’re about ready to take flight with your new coat of feathers!</b>");
            } else if (player.isScaleCovered()) {
                outputText("[pg]After having gulp down the seed, the scales covering your body feel weird for a second, almost like they’re moving on their own, and that is when you realize that they’re changing! The feeling is quite odd, as an slight itch from the place where they join your skin that quickly becomes more intense as their transformation advances.");
                outputText("[pg]They elongate until they become thin and light, and soon enough you realize that they’re becoming feathers as more and more barbs start sprouting from their sides. In a couple of minutes, most of your body is left covered in [feather color] feathers.");
                outputText("[pg]Not all of them became long, though. The feathers on your chest and belly, and...other soft spots, became fluffy and short instead of like the feathers on your arms and legs, like some kind of down feathers. <b>Seems like you’re covered from head to toe in a feathered coat!</b>");
            } else {
                if (player.isChitinCovered()) {
                    outputText("[pg]A sudden crack over your chitin-covered body scares you, fearing that the fruit could’ve had noxious effects on your body. The effect only worsened as all the chiting covering your skin starts falling like pieces of broken glass, leaving behind a thick layer of mellified tissue.");
                    outputText("[pg]The jelly falls to the ground too, in a gross, sticky, orange rain, but to your relief, it leaves behind [skin color] colored, healthy, normal skin, with no trace of your former chitin remaining on your body.");
                } else if (player.isGooSkin()) {
                    outputText("[pg]Your usually wet and gooey skin feels suddenly a bit dry. Thinking that maybe the reason could be the dry weather on the wastelands, you rush to the stream, washing your skin on the refreshing water.");
                    outputText("[pg]That has the opposite effect, as you realize that a layer of [skin color] colored goop of goo falls from your arm. Alarmed, you try to put it back, to no avail. Soon all the goo on your arm falls, leaving behind a layer of healthy, normal, [skin] behind. ");
                    outputText("The process follows the rest of your body, and before you can call it, the goo is cleansed from your body, and your skin returns to the normalcy, as your body, normal flesh taking again over the goo, as your core is expelled from your now perfectly solid body, now covered by the usual layer of skin.");
                } else if (player.skinAdj == "rubber" || player.skinAdj == "latex") {
                    outputText("[pg]Your usually oily and rubberish skins feels suddenly a bit dry. Thinking that maybe the reason could be the dry weather on the wastelands, you rush to the stream, washing your skin on the refreshing water.");
                    outputText("[pg]That has the opposite effect, as you realize that a layer of [skin color] colored goop of rubber falls from your arm. Soon all the rubber on your arm falls, leaving behind a layer of healthy, normal, [skin] behind. The process follows the rest of your body, and before you can call it, the rubber is cleansed from your body, and your skin returns to the normalcy.");
                }
                outputText("[pg]After having gulp down the seed, you start to scratch your [skin], as an uncomfortable itching overcomes you. It’s quite annoying, like being bitten by a bug, only in many spots at the same time.");
                outputText("[pg]Sooner than later, you realize that the sensation is coming from <i>under</i> your skin. After rubbing one of your arms, feeling annoyed, you feel something different. When you lay your eyes on your skin, you realize that a long hair is growing out of it. No, that’s not a hair; it’s far harder than a hair should be, and too thick to be one either. Besides, its creamy-white color doesn’t match your hair.");
                outputText("[pg]A bit alarmed at this, you then realize that many like it are coming from your skin, finding its way up, gently enough to not harm the soft tissues around them. In the end, you’re left with thousands of those long and thin thing protruding from your body.");
                outputText("[pg]Shortly after, what seems to be barbs start sprouting from its sides, and they branch on smaller barbs. Then you realize that each one of the things that emerged from your skin is a brand new feather!");
                outputText("[pg]As you ponder this, the barbs have finished growing, and the new feather on your arms, legs back and shoulder elongate a bit, while the ones on your chest, face and belly, and...another soft spots, instead of becoming like the usual feather,  becomes fluffy and short, as a kind of down feathers. They all gain color, turning into a warm coat of [feather color] colored feathers. <b>Looks like you’re about ready to take flight with your new coat of feathers!</b>");
            }
            player.skin.growCoat(Skin.FEATHER);
            changes++;
        }
        //Eyes
        if (player.eyes.type != Eyes.GRYPHON && (player.arms.type == Arms.GRYPHON || player.arms.type == Arms.AVIAN) && changes < changeLimit && rand(3) == 0) {
            transformations.EyesGryphon.applyEffect();
            changes++;
        }
        if (changes == 0) {
			if (type == 0) outputText("[pg]It seems like the fruit had no effect this time. Maybe it was spoiled, or kept in storage for too much time?");
			else outputText("[pg]It seems like the energy from statuette was weak to change you this time. Maybe, more luck next time?");
		}
		//Lion mane
		if (player.eyes.type == Eyes.GRYPHON && player.rearBody.type != RearBody.LION_MANE && type == 1 && changes < changeLimit && rand(3) == 0) {
            outputText("[pg]");
            transformations.RearBodyLionMane.applyEffect();
            changes++;
        }
        if (type == 0) player.refillHunger(15);
        flags[kFLAGS.TIMES_TRANSFORMED] += changes;
    }

    /*
     General Effects:
     -Speed to 70
     -Int to 10

     Appearance Effects:
     -Hip widening funtimes
     -Remove feather-arms (copy this for goblin ale, mino blood, equinum, centaurinum, canine pepps, demon items)
     -Remove feathery hair (copy for equinum, canine peppers, Labova)

     Sexual:
     -Shrink balls down to reasonable size (3?)
     -Shorten clits to reasonable size
     -Shrink dicks down to 8\" max.
     -Rut/heat

     Big Roo Tfs:
     -Roo ears
     -Roo tail
     -Roo footsies
     -Fur
     -Roo face*/
    public function kangaFruit(type:Number, player:Player):void {
        clearOutput();
        outputText("You squeeze the pod around the middle, forcing the end open.  Scooping out a handful of the yeasty-smelling seeds, you shovel them in your mouth.  Blech!  Tastes like soggy burnt bread... and yet, you find yourself going for another handful...");
        //Used to track changes and the max
        var changes:Number = 0;
        var changeLimit:Number = 2;
        if (type == 1) changeLimit += 2;
        if (rand(2) == 0) changeLimit++;
        if (rand(2) == 0) changeLimit++;
        changeLimit += player.additionalTransformationChances;
        //Used as a holding variable for biggest dicks and the like
        var biggestCock:Number;
        //****************
        //General Effects:
        //****************
        //-Speed to 70
        if (rand(3) == 0 && transformations.MutagenSpeKanga.isPossible()) {
            outputText("[pg]");
            transformations.MutagenSpeKanga.applyEffect()
            changes++;
        }
        //-Int to 10
        if (player.inte > 2 && rand(3) == 0 && changes < changeLimit) {
            changes++;
            //FAILURE
            if (type == 1 && transformations.ArmsHuman.isPresent() && transformations.HairHuman.isPresent() &&transformations.EyesHuman.isPresent() &&  transformations.FaceKangaroo.isPresent() && transformations.LowerBodyKangaroo.isPresent() && transformations.TailKangaroo.isPresent() && transformations.EarsKangaroo.isPresent() && player.hasFullCoatOfType(Skin.FUR) && transformations.GillsNone.isPresent() && !player.hasPerk(PerkLib.TransformationResistance)) {
                if (!player.hasStatusEffect(StatusEffects.TFWarning) || player.getStatusValue(StatusEffects.TFWarning, 1) != Races.KANGAROO.id) {
                    player.removeStatusEffect(StatusEffects.TFWarning);
                    player.createStatusEffect(StatusEffects.TFWarning, Races.KANGAROO.id, 0, BAD_END_COOLDOWN, 0);
                } else {
                    player.changeStatusValue(StatusEffects.TFWarning, 3, BAD_END_COOLDOWN);
                    player.addStatusValue(StatusEffects.TFWarning, 2, 1);
                }
                player.buff("KangaFruit")
                    .addStats( { "int.mult": -0.1 })
                    .withText("Kanga Fruit")
                    .forHours(BAD_END_COOLDOWN);
                if (player.getStatusValue(StatusEffects.TFWarning, 2) >= 10) {
                    outputText("[pg]While you gnaw on the fibrous fruit, your already vacant mind continues to empty, leaving nothing behind but the motion of your jaw as you slowly chew and swallow your favorite food.  Swallow.  Chew.  Swallow.  You don't even notice your posture worsening or your arms shortening.  Without a single thought, you start to hunch over but keep munching on the food in your paws as if were the most normal thing in the world.  Teeth sink into one of your fingers, leaving you to yelp in pain.  With the last of your senses, you look at your throbbing paw to notice you've run out of kanga fruit!");
                    outputText("[pg]Still hungry and licking your lips in anticipation, you sniff in deep lungfuls of air.  There's more of that wonderful fruit nearby!  You bound off in search of it on your incredibly muscular legs, their shape becoming more and more feral with every hop.  Now guided completely by instinct, you find a few stalks that grow from the ground.  Your belly rumbles, reminding you of your hunger, as you begin to dig into the kanga fruits...");
                    outputText("[pg]Losing more of what little remains of yourself, your body is now entirely that of a feral kangaroo and your mind has devolved to match it.  After you finish the handful of fruits you found, you move on in search for more of the tasty treats.  Though you pass by your camp later on, there's no memory, no recognition, just a slight feeling of comfort and familiarity.  There's no food here so you hop away.");
                    EventParser.gameOver();
                    return;
                } else outputText("[pg]While chewing, your mind becomes more and more tranquil.  You find it hard to even remember your mission, let alone your name.  <b>Maybe more kanga fruits will help?</b>");
            } else player.removeStatusEffect(StatusEffects.TFWarning);
            //Gain dumb
            transformations.MutagenCurseIntKanga.applyEffect();
        }
        if (player.blockingBodyTransformations()) changeLimit = 0;
        //****************
        //Appearance Effects:
        //****************
        //-Hip widening funtimes
        if (changes < changeLimit && rand(4) == 0 && player.hips.type < 40) {
            outputText("[pg]You weeble and wobble as your hipbones broaden noticeably, but somehow you don't fall down.  Actually, you feel a bit MORE stable on your new widened stance, if anything.");
            player.hips.type++;
            changes++;
        }
        //-Remove feather-arms (copy this for goblin ale, mino blood, equinum, centaurinum, canine pepps, demon items)
        if (changes < changeLimit && !InCollection(player.arms.type, Arms.HUMAN) && rand(4) == 0) {
            outputText("[pg]");
            transformations.ArmsHuman.applyEffect();
            changes++;
        }

        //Remove special hairs
        if (changes < changeLimit && player.hairType != Hair.NORMAL && rand(3) == 0) {
		    outputText("[pg]");
		    transformations.HairHuman.applyEffect();
            changes++;
        }

        //Remove odd eyes
        if (changes < changeLimit && rand(5) == 0 && player.eyes.type > Eyes.HUMAN) {
            outputText("[pg]");
            transformations.EyesHuman.applyEffect();
            changes++;
        }
        //****************
        //Sexual:
        //****************
        //-Shrink balls down to reasonable size (3?)
        if (player.ballSize >= 4 && changes < changeLimit && rand(2) == 0) {
            outputText("[pg]");
            transformations.ShrinkBalls.applyEffect();
            changes++;
        }
        //-Shorten clits to reasonable size
        if (player.hasVagina() && player.clitLength >= 4 && changes < changeLimit && rand(5) == 0) {
            outputText("[pg]");
            transformations.ShrinkClit.applyEffect();
            changes++;
        }
        //Find biggest dick!
        biggestCock = player.biggestCockIndex();
        //-Shrink dicks down to 8\" max.
        if (player.hasCock()) {
            if (player.cocks[biggestCock].cockLength >= 16 && changes < changeLimit && rand(5) == 0) {
                outputText("[pg]A roiling inferno of heat blazes in your " + cockDescript(biggestCock) + ", doubling you over in the dirt.  You rock back and forth while tears run unchecked down your cheeks.  Once the pain subsides and you're able to move again, you find the poor member has lost nearly half its size.");
                player.cocks[biggestCock].cockLength /= 2;
                player.cocks[biggestCock].cockThickness /= 1.5;
                if (player.cocks[biggestCock].cockThickness * 6 > player.cocks[biggestCock].cockLength) player.cocks[biggestCock].cockThickness -= .2;
                if (player.cocks[biggestCock].cockThickness * 8 > player.cocks[biggestCock].cockLength) player.cocks[biggestCock].cockThickness -= .2;
                if (player.cocks[biggestCock].cockThickness < .5) player.cocks[biggestCock].cockThickness = .5;
                changes++;
            }
            //COCK TF!
            if (player.kangaCocks() < player.cockTotal() && (type == 1 && rand(2) == 0) && changes < changeLimit) {
                //Find first non-roocock!
                var cock:int = player.findFirstCockNotInType([CockTypesEnum.KANGAROO]);
                if (cock >= 0){
                    transformations.CockKangaroo(cock).applyEffect();
                    changes++;
                }
            }
        }
        //****************
        //Big Kanga Morphs
        //type 1 ignores normal restrictions
        //****************
        //-Face (Req: Fur + Feet)
        if (player.faceType != Face.KANGAROO && ((player.isFurCovered() && player.lowerBody == LowerBody.KANGAROO) || type == 1) && changes < changeLimit && rand(4) == 0) {
            outputText("[pg]");
            transformations.FaceKangaroo.applyEffect();
            changes++;
        }
        //-Fur (Req: Footsies)
        if (!player.isFurCovered() && (player.lowerBody == LowerBody.KANGAROO || type == 1) && changes < changeLimit && rand(4) == 0) {
            outputText("[pg]");
            transformations.SkinFur(Skin.COVERAGE_COMPLETE, {color: "brown"}).applyEffect();
            changes++;
        }
        //-Roo footsies (Req: Tail)
        if (player.lowerBody != LowerBody.KANGAROO && (type == 1 || player.tailType == Tail.KANGAROO) && changes < changeLimit && rand(4) == 0) {
            outputText("[pg]");
            transformations.LowerBodyKangaroo.applyEffect();
            changes++;
        }
        //-Roo tail (Req: Ears)
        if (player.tailType != Tail.KANGAROO && changes < changeLimit && rand(4) == 0 && (type != 1 || player.ears.type == Ears.KANGAROO)) {
            outputText("[pg]");
            transformations.TailKangaroo.applyEffect();
            changes++;
        }
        //-Roo ears
        if (player.ears.type != Ears.KANGAROO && changes < changeLimit && rand(4) == 0) {
            outputText("[pg]");
            transformations.EarsKangaroo.applyEffect();
            changes++;
        }
        //UBEROOOO
        //kangaroo perk: - any liquid or food intake will accelerate a pregnancy, but it will not progress otherwise
        if (rand(4) == 0 && changes < changeLimit) {
            //Perk name and description:
            if (player.gainPerk(PerkLib.Diapause, player.hasVagina() && player.isRace(Races.KANGAROO, 1, false),"\nYour womb rumbles as something inside it changes. "))
                changes++;
            //trigger effect: Your body reacts to the influx of nutrition, accelerating your pregnancy. Your belly bulges outward slightly.
        }
        // Remove gills
        if (rand(4) == 0 && player.hasGills() && changes < changeLimit) {
            outputText("[pg]");
            transformations.GillsNone.applyEffect();
            changes++;
        }

        if (changes == 0) {
            outputText("[pg]It did not seem to have any effects, but you do feel better rested.");
            fatigue(-Math.round(40*player.postConsumptionMlt()));
        }
        player.refillHunger(20);
        flags[kFLAGS.TIMES_TRANSFORMED] += changes;
    }

    //[Box of Chocolates] - 10 gems
    public function boxChocolate(player:Player):void {
        clearOutput();
        outputText("You open the box of chocolates and start eating them one by one. They taste deliciously sweet, and you wonder if you could maybe give some as a present.  ");
        if (SceneLib.alvinaFollower.alvinaCanMeetAtBar() && !SceneLib.alvinaFollower.GaveAlvinaChocolate) outputText("Maybe Alvina would enjoy some?");
        outputText(player.modTone(0, 1));
        outputText(player.modThickness(player.maxThicknessCap(), 1));
        player.refillHunger(20);
    }

    //[Giant Chocolate Cupcake] – 500 gems
    public function giantChocolateCupcake(player:Player):void {
        clearOutput();
        outputText("You look down at the massive chocolate cupcake and wonder just how you can possibly eat it all.  It fills the over-sized wrapper and bulges out over the top, somehow looking obscene even though it's merely a baked treat.  There is a single candle positioned atop its summit, and it bursts into flame as if by magic.  Eight red gumdrops ring the outer edge of the cupcake, illuminated by the flame.[pg]");
        outputText("You hesitantly take a bite.  It's sweet, as you'd expect, but there's also a slightly salty, chocolaty undercurrent of flavor.  Even knowing what the minotaur put in Maddie's mix, you find yourself grateful that this new creation doesn't seem to have any of his 'special seasonings'.  It wouldn't do to be getting drugged up while you're slowly devouring the massive, muffin-molded masterpiece. Before you know it, most of the cupcake is gone and you polish off the last chocolaty bites before licking your fingers clean.[pg]");
        outputText("Gods, you feel heavy!  You waddle slightly as your body begins thickening, swelling until you feel as wide as a house.  Lethargy spreads through your limbs, and you're forced to sit still a little while until you let out a lazy burp.[pg]");
        outputText("As you relax in your sugar-coma, you realize your muscle definition is fading away, disappearing until your [skin.type] looks nearly as soft and spongy as Maddie's own.  You caress the soft, pudgy mass and shiver in delight, dimly wondering if this is how the cupcake-girl must feel all the time.");
        outputText(player.modTone(0, player.maxToneCap()));
        outputText(player.modThickness(player.maxThicknessCap(), player.maxThicknessCap()));
        player.refillHunger(100);
    }

    public function sweetGossamer(type:Number, player:Player):void {
        clearOutput();
        var changes:Number = 0;
        var changeLimit:Number = 2;
        if (rand(2) == 0) changeLimit++;
        if (rand(2) == 0) changeLimit++;
        changeLimit += player.additionalTransformationChances;
        //Consuming Text
        if (type == 0) outputText("You wad up the sweet, pink gossamer and eat it, finding it to be delicious and chewy, almost like gum.  Munching away, your mouth generates an enormous amount of spit until you're drooling all over yourself while you devour the sweet treat.");
        else if (type == 1) outputText("You wad up the sweet, black gossamer and eat it, finding it to be delicious and chewy, almost like licorice.  Munching away, your mouth generates an enormous amount of spit until you're drooling all over yourself while you devour the sweet treat.");

        //*************
        //Stat Changes
        //*************
        //(If speed<70, increases speed)
        if (transformations.MutagenSpeSpider.isPossible() && changes < changeLimit && rand(3) == 0) {
			outputText("[pg]");
			transformations.MutagenSpeSpider.applyEffect();
            changes++;
        }
        //(If speed>80, decreases speed down to minimum of 80)
        if (transformations.MutagenCurseSpeSpider.isPossible() && changes < changeLimit && rand(3) == 0) {
            outputText("[pg]");
            transformations.MutagenCurseSpeSpider.applyEffect();
            changes++;
        }
        //(increases sensitivity)
        if (changes < changeLimit && rand(3) == 0) {
			outputText("[pg]");
			transformations.SensUpSpider.applyEffect()
            changes++;
        }
        //(Increase libido)
        if (transformations.MutagenLibSpider.isPossible() && changes < changeLimit && rand(3) == 0) {
			outputText("[pg]");
			transformations.MutagenLibSpider.applyEffect();
            changes++;
        }
        //(increase toughness to 60)
        if (transformations.MutagenTouSpider.isPossible() && changes < changeLimit && rand(3) == 0) {
			outputText("[pg]");
			transformations.MutagenTouSpider.applyEffect();
            changes++;
        }
        //(decrease strength to 70)
        if (transformations.MutagenCurseStrSpider.isPossible() && rand(3) == 0) {
            outputText("[pg]");
            transformations.MutagenCurseStrSpider.applyEffect();
            changes++;
        }
        if (player.blockingBodyTransformations()) changeLimit = 0;
        //****************
        //Sexual Changes
        //****************
        //Increase venom recharge
        if (transformations.VenomRechargeSpider.isPossible() && changes < changeLimit) {
            changes++;
			outputText("[pg]");
			transformations.VenomRechargeSpider.applyEffect();
        }
        //(tightens vagina to 1, increases lust/libido)
        if (transformations.VaginaTightenAndMutagenLib.isPossible() && changes < changeLimit && rand(3) == 0) {
            outputText("[pg]");
            transformations.VaginaTightenAndMutagenLib.applyEffect();
            changes++;
        }
        //(tightens asshole to 1, increases lust)
        if (transformations.AssholeTightenAndMutagenLib.isPossible() && changes < changeLimit && rand(3) == 0) {
			outputText("[pg]");
			transformations.AssholeTightenAndMutagenLib.applyEffect();
            changes++;
        }
        //[Requires penises]
        //(Thickens all cocks to a ratio of 1\" thickness per 5.5\"
        if (transformations.CocksThickenAll.isPossible() && changes < changeLimit && rand(4) == 0) {
			outputText("[pg]");
			transformations.CocksThickenAll.applyEffect();
            changes++;
        }
        //[Increase to Breast Size] - up to Large DD
        if (transformations.BreastsGrowUpToDD.isPossible() && changes < changeLimit && rand(4) == 0) {
			outputText("[pg]After eating it, your chest aches and tingles, and your hands reach up to scratch at it unthinkingly.  Silently, you hope that you aren't allergic to it.  Just as you start to scratch at your " + breastDescript(player.smallestTitRow()) + ", your chest pushes out in slight but sudden growth.");
            transformations.BreastsGrowUpToDD.applyEffect(false); // better not mention eating in generic TF tet
            changes++;
        }
        //[Increase to Ass Size] - to 11
        if (transformations.AssGrowUpTo11.isPossible() && changes < changeLimit && rand(4) == 0) {
			outputText("[pg]");
			transformations.AssGrowUpTo11.applyEffect()
            changes++;
        }
        //***************
        //Appearance Changes
        //***************
        //(Ears become pointed if not human)
        if (player.ears.type != Ears.ELFIN && rand(3) == 0 && changes < changeLimit) {
			outputText("[pg]");
			transformations.EarsElfin.applyEffect();
            changes++;
        }
        //(Fur/Scales fall out replaced by chitin)
        if (!player.hasCoatOfType(Skin.CHITIN) && (player.ears.type == Ears.HUMAN || player.ears.type == Ears.ELFIN) && rand(3) == 0 && changes < changeLimit) {
			outputText("[pg]");
            transformations.SkinChitin(Skin.COVERAGE_LOW, {colors: ["pale white","brown", "black", "grey"]}).applyEffect();
            changes++;
        }
        //(Gain human face)
        if (player.hasCoatOfType(Skin.CHITIN) && transformations.TieredSpiderFace.isPossible() && changes < changeLimit && rand(3) == 0) {
			outputText("[pg]");
			transformations.TieredSpiderFace.applyEffect();
            changes++;
        }
        //-Remove breast rows over 2.
        if (changes < changeLimit && player.bRows() > 2 && rand(3) == 0 && !flags[kFLAGS.HYPER_HAPPY]) {
			outputText("[pg]");
			transformations.BreastRowsRemoveToOne.applyEffect();
            changes++;
        }
        //-Nipples reduction to 1 per tit.
        if (player.averageNipplesPerBreast() > 1 && changes < changeLimit && rand(3) == 0) {
			outputText("[pg]");
			transformations.NipplesPerBreastOne.applyEffect();
            changes++;
        }
        //Nipples Turn Black:
        if (!player.hasStatusEffect(StatusEffects.BlackNipples) && rand(3) == 0 && changes < changeLimit) {
			outputText("[pg]");
			transformations.NipplesBlack.applyEffect();
            changes++;
        }
        //eyes!
		// (player.faceType != Face.SPIDER_FANGS || player.faceType != Face.HUMAN) makes no sense btw
        if (player.hasCoatOfType(Skin.CHITIN) && (player.faceType != Face.SPIDER_FANGS || player.faceType != Face.HUMAN) && player.eyes.type == Eyes.HUMAN && rand(3) == 0 && changes < changeLimit) {
			outputText("[pg]");
			transformations.EyesSpiderAndMutagenInt.applyEffect();
            changes++;
        }
        //(Gain spider fangs)
        if (transformations.TieredSpiderFace.isPossible() && player.hasCoatOfType(Skin.CHITIN) && changes < changeLimit && rand(3) == 0) {
			outputText("[pg]");
			transformations.TieredSpiderFace.applyEffect();
            changes++;
        }
        //(Arms to carapace-covered arms)
        if (player.arms.type != Arms.SPIDER && changes < changeLimit && rand(3) == 0) {
            outputText("[pg]");
			transformations.ArmsSpider.applyEffect();
            changes++;
        }
        if ((player.isTaur() || player.isGoo() || player.isNaga() || player.isScylla() || player.isAlraune())
                && changes < changeLimit && rand(3) == 0) {
			outputText("[pg]");
            transformations.LowerBodyHuman.applyEffect();
            changes++;
        }
        //Drider butt
        if (type == 1 && transformations.OvipositorSpider.isPossible() && changes < changeLimit && rand(3) == 0 && (player.hasVagina() || rand(2) == 0)) {
            //V1 - Egg Count
            //V2 - Fertilized Count
            transformations.OvipositorSpider.applyEffect();
            //Opens up drider ovipositor scenes from available mobs. The character begins producing unfertilized eggs in their arachnid abdomen. Egg buildup raises minimum lust and eventually lowers speed until the player has gotten rid of them.  This perk may only be used with the drider lower body, so your scenes should reflect that.
            //Any PC can get an Ovipositor perk, but it will be much rarer for characters without vaginas.
            //Eggs are unfertilized by default, but can be fertilized:
            //-female/herm characters can fertilize them by taking in semen; successfully passing a pregnancy check will convert one level of unfertilized eggs to fertilized, even if the PC is already pregnant.
            //-male/herm characters will have a sex dream if they reach stage three of unfertilized eggs; this will represent their bee/drider parts drawing their own semen from their body to fertilize the eggs, and is accompanied by a nocturnal emission.
            //-unsexed characters cannot currently fertilize their eggs.
            //Even while unfertilized, eggs can be deposited inside NPCs - obviously, unfertilized eggs will never hatch and cannot lead to any egg-birth scenes that may be written later.
            changes++;
        }
        //(Normal Biped Legs -> Carapace-Clad Legs)
        if (((type == 1 && player.lowerBody != LowerBody.DRIDER && player.lowerBody != LowerBody.CHITINOUS_SPIDER_LEGS && player.lowerBody != LowerBody.ATLACH_NACHA) || (type != 1 && player.lowerBody != LowerBody.CHITINOUS_SPIDER_LEGS)) && (!player.isGoo() && !player.isNaga() && !player.isTaur() && !player.isScylla()) && changes < changeLimit && rand(3) == 0) {
            outputText("[pg]");
            transformations.LowerBodySpider.applyEffect();
            changes++;
        }
        //(Tail becomes spider abdomen GRANT WEB ATTACK)
        if (player.tailType != Tail.SPIDER_ADBOMEN && (player.lowerBody == LowerBody.CHITINOUS_SPIDER_LEGS || player.lowerBody == LowerBody.DRIDER || player.lowerBody == LowerBody.ATLACH_NACHA) && player.arms.type == Arms.SPIDER && rand(3) == 0) {
            outputText("[pg]");
            transformations.TailSpider.applyEffect();
            changes++;
        }
        //(Drider Item Only: Carapace-Clad Legs to Drider Legs)
        if (type == 1 && player.lowerBody == LowerBody.CHITINOUS_SPIDER_LEGS && rand(3) == 0 && player.tailType == Tail.SPIDER_ADBOMEN) {
            outputText("[pg]");
            transformations.LowerBodyDrider.applyEffect();
            changes++;
        }
        // Remove gills
        if (rand(3) == 0 && player.hasGills() && changes < changeLimit) {
			outputText("[pg]");
			transformations.GillsNone.applyEffect();
		}

        if (changes == 0) {
            outputText("[pg]The sweet silk energizes you, leaving you feeling refreshed.");
            fatigue(-Math.round(33*player.postConsumptionMlt()));
        }
        player.refillHunger(5);
        flags[kFLAGS.TIMES_TRANSFORMED] += changes;
    }

	public function midnightGossamer(player:Player):void {
		clearOutput();
		var changeLimit:Number = 2;
		if (rand(2) == 0) changeLimit++;
		if (rand(2) == 0) changeLimit++;
		changeLimit += player.additionalTransformationChances;
		outputText("You wad up the sweet, midnight gossamer and eat it, finding it to be delicious and chewy, almost like licorice.  Munching away, your mouth generates an enormous amount of spit until you're drooling all over yourself while you devour the sweet treat. ");
		if (player.blockingBodyTransformations()) changeLimit = 0;
		TransformationUtils.pickAndRunMultipleEffects(transformations.List_AtlachNacha, changeLimit);
	}

    public function broBrew(player:Player):void {
        player.slimeFeed();
        clearOutput();
        if (player.blockingBodyTransformations()) {
            outputText("[pg]<b>You won't get anything from drinking this... aside getting drunk.</b>");
			DrunkenPowerEmpowerIfPossible();
			AelfwineEmpowerIfPossible();
            return;
        }
        //no drink for bimbos!
        if (player.hasPerk(PerkLib.BimboBody)) {
            outputText("The stuff hits you like a giant cube, nearly staggering you as it begins to settle.");
            if (player.tallness < 77) {
                player.tallness = 77;
                outputText("... Did the ground just get farther away?  You glance down and realize, you're growing!  Like a sped-up flower sprout, you keep on getting taller until finally stopping around... six and a half feet, you assume.  Huh.  You didn't expect that to happen!");
            }
            if (player.tone < 100) {
                outputText("  A tingling in your arm draws your attention just in time to see your biceps and triceps swell with new-found energy, skin tightening until thick cords of muscle run across the whole appendage.  Your other arm surges forward with identical results.  To compensate, your shoulders and neck widen to bodybuilder-like proportions while your chest and abs tighten to a firm, statuesque physique.  Your [legs] and glutes are the last to go, bulking up to proportions that would make any female martial artist proud.  You feel like you could kick forever with legs this powerful.");
                player.tone = 100;
            }
            outputText("[pg]");

            //female
            if (!player.hasCock()) {
                outputText("The beverage isn't done yet, however, and it makes it perfectly clear with a building pleasure in your groin.  You can only cry in ecstasy and loosen the bottoms of your [armor] just in time for a little penis to spring forth.  You watch, enthralled, as blood quickly stiffens the shaft to its full length – then keeps on going!  Before long, you have a quivering 10-inch maleness, just ready to stuff into a welcoming box.");
                transformations.CockHuman(0, 10, 2).applyEffect(false);
                if (player.balls == 0) {
                    outputText("  Right on cue, two cum-laden testicles drop in behind it, their contents swirling and churning.");
                    transformations.BallsDuo.applyEffect(false);
                    player.ballSize = 3;
                }
                outputText("[pg]");
            } else if (player.balls == 0) {
                outputText("A swelling begins behind your man-meat, and you're assailed with an incredibly peculiar sensation as two sperm-filled balls drop into a newly-formed scrotum.  Frikkin' sweet![pg]");
                transformations.BallsDuo.applyEffect(false);
                player.ballSize = 3;
            }
            outputText("Finally, you feel the transformation skittering to a halt, leaving you to openly roam your new chiseled and sex-ready body.  So what if you can barely form coherent sentences anymore?  A body like this does all the talking you need, you figure!");
            MutagenBonus("lib", .1);
            outputText("[pg]<b>(Lost Perk - ");
            if (player.hasPerk(PerkLib.BimboBrains)) outputText("Bimbo Brains, ");
            outputText("Bimbo Body)\n");
            player.removePerk(PerkLib.BimboBrains);
            player.removePerk(PerkLib.BimboBody);
            player.createPerk(PerkLib.FutaForm, 0, 0, 0, 0);
            player.createPerk(PerkLib.FutaFaculties, 0, 0, 0, 0);
            outputText("(Gained Perks - Futa Form, Futa Faculties)</b>");
            return;
        }
        //HP restore for bros!
        if (player.hasPerk(PerkLib.BroBody) || player.hasPerk(PerkLib.FutaForm)) {
            outputText("You crack open the can and guzzle it in a hurry.  Goddamn, this shit is the best.  As you crush the can against your forehead, you wonder if you can find a six-pack of it somewhere?[pg]");
            fatigue(-Math.round(33*player.postConsumptionMlt()));
            HPChange(100*player.postConsumptionMlt(), true);
            player.refillHunger(30);
            return;
        }
        outputText("Well, maybe this will give you the musculature that you need to accomplish your goals.  You pull on the tab at the top and hear the distinctive snap-hiss of venting, carbonating pressure.  A smoky haze wafts from the opened container, smelling of hops and alcohol.  You lift it to your lips, the cold, metallic taste of the can coming to your tongue before the first amber drops of beer roll into your waiting mouth.  It tingles, but it's very, very good.  You feel compelled to finish it as rapidly as possible, and you begin to chug it.  You finish the entire container in seconds.[pg]");

        outputText("A churning, full sensation wells up in your gut, and without thinking, you open wide to release a massive burp. It rumbles through your chest, startling birds into flight in the distance.  Awesome!  You slam the can into your forehead hard enough to smash the fragile aluminum into a flat, crushed disc.  Damn, you feel stronger already");
        if (player.inte > 50) outputText(", though you're a bit worried by how much you enjoyed the simple, brutish act");
        outputText(".[pg]");

        //(Tits b' gone)
        if (player.biggestTitSize() >= 1) {
            transformations.BreastsShrinkToNothing.applyEffect();
        }

        outputText("Starting at your hands, your muscles begin to contract and release, each time getting tighter, stronger, and more importantly - larger.  The oddness travels up your arms, thickens your biceps, and broadens your shoulders.  Soon, your neck and chest are as built as your arms.  You give a few experimental flexes as your abs ");
        if (player.tone >= 70) outputText("further define themselves");
        else outputText("become extraordinarily visible");
        outputText(".  The strange, muscle-building changes flow down your [legs], making them just as fit and strong as the rest of you.  You curl your arm and kiss your massive, flexing bicep.  You're awesome![pg]");

        outputText("Whoah, you're fucking ripped and strong, not at all like the puny weakling you were before.  Yet, you feel oddly wool-headed.  Your thoughts seem to be coming slower and slower, like they're plodding through a marsh.  You grunt in frustration at the realization.  Sure, you're a muscle-bound hunk now, but what good is it if you're as dumb as a box of rocks?  Your muscles flex in the most beautiful way, so you stop and strike a pose, mesmerized by your own appearance.  Fuck thinking, that shit's for losers![pg]");

        //(has dick less than 10 inches)
        if (player.hasCock()) {
            if (player.cocks[0].cockLength < 10) {
                outputText("As if on cue, the familiar tingling gathers in your groin, and you dimly remember you have one muscle left to enlarge.  If only you had the intelligence left to realize that your penis is not a muscle.  In any event, your [cock] swells in size, ");
                if (player.cocks[0].cockThickness < 2.75) {
                    outputText("thickening and ");
                    player.cocks[0].cockThickness = 2.75;
                }
                outputText("lengthening until it's ten inches long and almost three inches wide.  Fuck, you're hung!  ");
                player.cocks[0].cockLength = 10;
            }
            //Dick already big enough! BALL CHECK!
            if (player.hasBalls()) {
                outputText("Churning audibly, your [sack] sways, but doesn't show any outward sign of change.  Oh well, it's probably just like, getting more endurance or something.");
            } else {
                outputText("Two rounded orbs drop down below, filling out a new, fleshy sac above your [legs].  Sweet!  You can probably cum buckets with balls like these.");
                transformations.BallsDuo.applyEffect(false);
                player.ballSize = 3;
            }
            outputText("[pg]");
        }
        //(No dick)
        else {
            outputText("You hear a straining, tearing noise before you realize it's coming from your underwear.  Pulling open your [armor], you gasp in surprise at the huge, throbbing manhood that now lies between your [hips].  It rapidly stiffens to a full, twelve inches, and goddamn, it feels fucking good.  You should totally find a warm hole to fuck!");
            if (player.balls == 0) outputText("  Two rounded orbs drop down below, filling out a new, fleshy sac above your [legs].  Sweet!  You can probably cum buckets with balls like these.");
            transformations.CockHuman(0, 12, 3).applyEffect(false);
            outputText("[pg]");
            if (player.balls == 0) {
                transformations.BallsDuo.applyEffect(false);
                player.ballSize = 3;
            }
        }
        //(Pussy b gone)
        if (player.hasVagina()) {
            outputText("At the same time, your [vagina] burns hot, nearly feeling on fire.  You cuss in a decidedly masculine way for a moment before the pain fades to a dull itch.  Scratching it, you discover your lady-parts are gone.  All that remains is a sensitive patch of skin.[pg]");
            player.removeVagina(0, 1);
        }
        //(below max masculinity)
        if (player.femininity > 0) {
            outputText("Lastly, the change hits your face.  You can feel your jawbones shifting and sliding around, your skin changing to accommodate your face's new shape.  Once it's finished, you feel your impeccable square jaw and give a wide, easy-going grin.  You look awesome![pg]");
            player.modFem(0, 100);
        }
        outputText("You finish admiring yourself and adjust your [armor] to better fit your new physique.  Maybe there's some bitches around you can fuck.  Hell, as good as you look, you might have other dudes wanting you to fuck them too, no homo.[pg]");
        //max tone.  Thickness + 50
        player.modTone(player.maxToneCap(), player.maxToneCap());
        player.modThickness(player.maxThicknessCap(), (player.maxThicknessCap() * 0.5));
        //Bonus cum production!
        player.createPerk(PerkLib.BroBrains, 0, 0, 0, 0);
        player.createPerk(PerkLib.BroBody, 0, 0, 0, 0);
        outputText("<b>(Bro Body - Perk Gained!)\n");
        outputText("(Bro Brains - Perk Gained!)</b>\n");//int to 20.  max int 50)
        if (player.hasPerk(PerkLib.Feeder)) {
            player.removeStatusEffect(StatusEffects.Feeder);
            outputText("<b>(Perk Lost - Feeder!)</b>\n");
            player.removePerk(PerkLib.Feeder);
        }
		DrunkenPowerEmpowerIfPossible();
		AelfwineEmpowerIfPossible();
        dynStats("str", 35, "tou", 35, "lib", 5, "lus", Math.round(40*player.postConsumptionMlt()));
        player.addCurse("int", 1, 1);
        player.refillHunger(30);
    }


    //Miscellaneous
    //ITEM GAINED FROM LUST WINS
    //bottle of ectoplasm. Regular stat-stuff include higher speed, (reduced libido?), reduced sensitivity, and higher intelligence. First-tier effects include 50/50 chance of sable skin with bone-white veins or ivory skin with onyx veins. Second tier, \"wisp-like legs that flit back and forth between worlds,\" or \"wisp-like legs\" for short. Third tier gives an \"Ephemeral\" perk, makes you (10%, perhaps?) tougher to hit, and gives you a skill that replaces tease/seduce—allowing the PC to possess the creature and force it to masturbate to gain lust. Around the same effectiveness as seduce.
    //Mouseover script: \"The green-tinted, hardly corporeal substance flows like a liquid inside its container. It makes you feel...uncomfortable, as you observe it.\"

    //Bottle of Ectoplasm Text
    public function ectoplasm(type:Number, player:Player):void {
        //0 == phantom
        //1 == poltergeist
        player.slimeFeed();
        clearOutput();
        outputText("You grimace and uncork the bottle, doing your best to ignore the unearthly smell rising to your nostrils. Steeling yourself, you raise the container to your lips and chug the contents, shivering at the feel of the stuff sliding down your throat.  Its taste, at least, is unexpectedly pleasant.  Almost tastes like oranges.");
        var changes:Number = 0;
        var changeLimit:Number = 2;
        if (rand(2) == 0) changeLimit++;
        if (rand(2) == 0) changeLimit++;
        changeLimit += player.additionalTransformationChances;
        //Effect script 1:  (higher intelligence)
        if (rand(3) == 0 && changes < changeLimit && MutagenBonus("int", 1)) {
            outputText("[pg]You groan softly as your head begins pounding something fierce.  Wincing in pain, you massage your temples as the throbbing continues, and soon, the pain begins to fade; in its place comes a strange sense of sureness and wit.");
            changes++;
        }
        //Effect script 2:  (lower sensitivity)
        if (player.sens >= 20 && rand(3) == 0 && changes < changeLimit) {
            outputText("[pg]Woah, what the... you pinch your " + player.skinFurScales() + " to confirm your suspicions; the ghostly snack has definitely definitely dulled your senses.");
            dynStats("sen", -2);
            if (player.sens >= 75) dynStats("sen", -2);
            changes++;
        }
        //Effect script 3:  (higher libido)
        if (rand(3) == 0 && changes < changeLimit && MutagenBonus("lib", 2)) {
            //([if libido >49]
            if (player.lib < 50) outputText("[pg]Idly, you drop a hand to your crotch as");
            else outputText("[pg]With a substantial amount of effort, you resist the urge to stroke yourself as");
            outputText(" a trace amount of the ghost girl's lust is transferred into you.  How horny IS she, you have to wonder...");
            changes++;
        }
        if (player.blockingBodyTransformations()) changeLimit = 0;
        //Effect script a:  (human wang)
        if (player.hasCock() && changes < changeLimit) {
            if (rand(3) == 0 && player.cocks[0].cockType != CockTypesEnum.HUMAN) {
                transformations.CockHuman().applyEffect();
                changes++;
            }
        }
        //Appearance Change
        //Hair
        if (rand(3) == 0 && changes < changeLimit && transformations.HairGhost.isPossible()) {
            outputText("[pg]");
            transformations.HairGhost.applyEffect();
            changes++;
        }
        //Eyes
        if (player.hairType == Hair.GHOST && transformations.EyesGhost.isPossible() && rand(3) == 0 && changes < changeLimit) {
            outputText("[pg]");
			transformations.EyesGhost.applyEffect();
            changes++;
        }
        //Skin
        if (rand(3) == 0 && changes < changeLimit && (player.skinColor != "sable" && player.skinColor != "white")) {
            outputText("[pg]A warmth begins in your belly, slowly spreading through your torso and appendages. The heat builds, becoming uncomfortable, then painful, then nearly unbearable. Your eyes unfocus from the pain, and by the time the burning sensation fades, you can already tell something's changed. ");
            var tone:String;
            var adj:String;
            if (rand(2) == 0) {
                tone = "white";
                adj = "milky";
                outputText("You raise your hand, staring at the milky-white flesh. Your eyes are drawn to the veins in the back of your hand, darkening to jet black as you watch. <b>You have white skin, with black veins!</b>");
            } else {
                tone = "sable";
                adj = "ashen";
                outputText("You raise your hand, staring at the sable flesh. Your eyes are drawn to the veins in the back of your hand, lightening to an ashen tone as you watch.  <b>You have black skin, with white veins!</b>");
            }
            player.skin.setBaseOnly({type: Skin.PLAIN, color: tone, adj: adj});
            changes++;
        }
        //Transparent skin
        if (player.hasPlainSkinOnly() && !player.isGhostSkin() && rand(3) == 0 && changes < changeLimit && type == 1) {
            transformations.SkinTransparent.applyEffect();
            changes++;
        }
        //Skin pattern - black or white veins pattern - adv ghost tf
        if (!player.skin.hasWhiteBlackVeins() && player.isGhostSkin() && (player.skinColor == "white" || player.skinColor == "sable") && rand(3) == 0 && changes < changeLimit && type == 1) {
            outputText("[pg]");
            transformations.SkinPatternWhiteBlackVeins.applyEffect();
            changes++;
        }
        //Legs
        if (player.lowerBody == LowerBody.GHOST && player.lowerBody != LowerBody.GHOST_2 && rand(3) == 0 && changes < changeLimit && type == 1) {
            outputText("[pg]");
            transformations.LowerBodyGhost2.applyEffect();
            changes++;
        }
        if (player.hairType == 2 && player.lowerBody != LowerBody.GHOST && rand(3) == 0 && changes < changeLimit) {
            if (player.lowerBody == LowerBody.HUMAN) {
                outputText("[pg]");
                transformations.LowerBodyGhost.applyEffect();
            } else {
                outputText("[pg]");
                transformations.LowerBodyHuman.applyEffect();
            }
            changes++;
        }
        //Arms
        if (!InCollection(player.arms.type, Arms.GHOST) && player.lowerBody == LowerBody.GHOST && changes < changeLimit && rand(3) == 0) {
            outputText("[pg]");
            transformations.ArmsGhost.applyEffect();
            changes++;
        }
        //Removes antennae
        if (player.antennae.type > Antennae.NONE && rand(3) == 0 && changes < changeLimit) {
            outputText("[pg]The muscles in your brow clench tightly, and you feel a tremendous pressure on your upper forehead.  When it passes, you touch yourself and discover your [antennae] have vanished!");
            player.antennae.type = Antennae.NONE;
            changes++;
        }
        //Removes wings
        if (!InCollection(player.wings.type, Wings.ETHEREAL, Wings.NONE) && rand(3) == 0 && changes < changeLimit) {
            outputText("[pg]");
            transformations.WingsNone.applyEffect();
            changes++;
        }
        //Removes tail
        if (player.tailType > Tail.NONE && rand(3) == 0 && changes < changeLimit) {
            outputText("[pg]");
            transformations.TailNone.applyEffect();
            changes++;
        }
        //Incorporeality perk
        if ((player.lowerBody == LowerBody.GHOST || player.lowerBody == LowerBody.GHOST_2) && !player.hasPerk(PerkLib.Incorporeality) && changes < changeLimit && rand(3) == 0) {
            //(ghost-legs!  Absolutely no problem with regular encounters, though! [if you somehow got this with a centaur it'd probably do nothing cuz you're not supposed to be a centaur with ectoplasm ya dingus])
            outputText("An otherworldly sensation begins in your belly, working its way to your [hips]. Before you can react, your [legs] begin to tingle, and you fall on your rump as a large shudder runs through them. As you watch, your lower body shimmers, becoming ethereal, wisps rising from the newly ghost-like [legs]. You manage to rise, surprised to find your new, ghostly form to be as sturdy as its former corporeal version. Suddenly, like a dam breaking, fleeting visions and images flow into your head, never lasting long enough for you to concentrate on one. You don't even realize it, but your arms fly up to your head, grasping your temples as you groan in pain. As fast as the mental bombardment came, it disappears, leaving you with a surprising sense of spiritual superiority.  <b>You have ghost legs!</b>");
			player.createPerk(PerkLib.Incorporeality, 0, 0, 0, 0);
            changes++;
        }
        //Face
        if (player.eyes.type == Eyes.GHOST && player.faceType != Face.GHOST && changes < changeLimit && rand(3) == 0 && type == 1) {
            outputText("[pg]");
            transformations.FaceGhost.applyEffect();
            changes++;
        }
        //Tongue
        if (player.tongue.type == Tongue.HUMAN && player.tongue.type != Tongue.GHOST && changes < changeLimit && rand(3) == 0 && type == 1) {
            outputText("[pg]");
            transformations.TongueGhost.applyEffect();
            changes++;
        }
        if (player.tongue.type != Tongue.HUMAN && player.tongue.type != Tongue.GHOST && changes < changeLimit && rand(3) == 0 && type == 1) {
            outputText("[pg]");
            transformations.TongueHuman.applyEffect();
            changes++;
        }
        //Horns
        if (player.hairType == Hair.GHOST && changes < changeLimit && rand(3) == 0 && type == 1 && player.horns.type != Horns.GHOSTLY_WISPS) {
            outputText("[pg]");
            transformations.HornsGhostlyWisps.applyEffect();
            changes++;
        }
        //Rear body
        if (player.lowerBody == LowerBody.GHOST_2 && player.rearBody.type != RearBody.GHOSTLY_AURA && changes < changeLimit && rand(3) == 0 && type == 1) {
            outputText("[pg]");
            transformations.RearBodyGhostlyAura.applyEffect();
            changes++;
        }
        //Wings
        if (player.wings.type == Wings.NONE && player.rearBody.type == RearBody.GHOSTLY_AURA && changes < changeLimit && rand(3) == 0 && type == 1) {
            outputText("[pg]");
            transformations.WingsEthereal.applyEffect();
            changes++;
        }
        //Effect Script 8: 100% chance of healing
        if (changes == 0) {
            outputText("You feel strangely refreshed, as if you just gobbled down a bottle of sunshine.  A smile graces your lips as vitality fills you.  ");
            HPChange(((player.level * 5 + 10)*player.postConsumptionMlt()), true);
            changes++;
        }
        //Incorporeality Perk Text:  You seem to have inherited some of the spiritual powers of the residents of the afterlife!  While you wouldn't consider doing it for long due to its instability, you can temporarily become incorporeal for the sake of taking over enemies and giving them a taste of ghostly libido.

        //Sample possession text (>79 int, perhaps?):  With a smile and a wink, your form becomes completely intangible, and you waste no time in throwing yourself into your opponent's frame. Before they can regain the initiative, you take control of one of their arms, vigorously masturbating for several seconds before you're finally thrown out. Recorporealizing, you notice your enemy's blush, and know your efforts were somewhat successful.
        //Failure:  With a smile and a wink, your form becomes completely intangible, and you waste no time in throwing yourself into the opponent's frame. Unfortunately, it seems they were more mentally prepared than you hoped, and you're summarily thrown out of their body before you're even able to have fun with them. Darn, you muse. Gotta get smarter.
        player.refillHunger(10);
        flags[kFLAGS.TIMES_TRANSFORMED] += changes;
    }

    public function elfears(player:Player):void {
        player.slimeFeed();
        clearOutput();
        var changes:Number = 0;
        var changeLimit:Number = 2;
        if (rand(2) == 0) changeLimit++;
        if (rand(2) == 0) changeLimit++;
        changeLimit += player.additionalTransformationChances;
        outputText("You really should’ve brought this to someone who knew about it first!  Your stomach grumbles, and you feel a short momentaneous pain in your head.  As you swallow you feel your body start to change into something else.");
        //Stats
        if (player.str > 40 && rand(3) == 0 && changes < changeLimit) {
            outputText("[pg]A sense of helplessness settles upon you as your limbs lose mass, leaving you feeling weaker and punier.");
            player.addCurse("str", 1, 1);
            changes++;
        }
        if (rand(3) == 0 && changes < changeLimit && MutagenBonus("spe", 1)) {
            outputText("[pg]You feel fleet and lighter on your toes; you sense you could dodge, dart or skip away from anything.");
            changes++;
        }
        if (rand(3) == 0 && changes < changeLimit && MutagenBonus("int", 2)) {
            outputText("[pg]You groan softly as your head begins pounding something fierce.  Wincing in pain, you massage your temples as the throbbing continues, and soon, the pain begins to fade; in its place comes a strange sense of sureness and wit.");
            changes++;
        }
        if (player.sens < 80 && rand(4) == 0 && changes < changeLimit) {
            outputText("[pg]Your body becomes overwhelmed by stimuli for a moment making you shiver with a moan of pleasure at the mere caress of the wind. The excess sensation eventually dies down but leaves you more sensitive than before.");
            player.addCurse("sen", 2, 1);
            if (player.sens < 40) player.addCurse("sen", 2, 1);
            changes++;
        }
        if ((player.hairLength > 26 || player.hairLength < 16) && changes < changeLimit && rand(3) == 0) {
            if (player.hairLength < 16) {
                player.hairLength += 1 + rand(4);
                outputText("[pg]You experience a tingling sensation in your scalp.  Feeling a bit off-balance, you discover your hair has lengthened, becoming " + num2Text(Math.round(player.hairLength)) + " inches long.");
            } else {
                player.hairLength -= 1 + rand(4);
                outputText("[pg]You experience a tingling sensation in your scalp.  Feeling a bit off-balance, you discover your hair has shed a bit of its length, becoming " + num2Text(Math.round(player.hairLength)) + " inches long.");
            }
            changes++;
        }
        if (changes < changeLimit && rand(3) == 0) {
            outputText("[pg]Each movement feels a tiny bit easier than the last. Did you just lose a little weight!?");
            outputText(player.modThickness(70, 4));
        }
        if (changes < changeLimit && rand(3) == 0) outputText(player.modTone(10, 5));
        if (changes < changeLimit && rand(3) == 0 && player.femininity != 50) outputText(player.modFem(50, 3));
        if (player.blockingBodyTransformations()) changeLimit = 0;
        //Sexual
        if (player.cockTotal() > 0 && player.biggestCockArea() > 6 && changes < changeLimit && rand(3) == 0) {
            outputText("[pg]Your " + player.cockDescript(0) + " begins to tingle as it shrinks to a smaller size.");
            player.cocks[0].cockLength *= 2 / 3;
            player.cocks[0].cockThickness *= 2 / 3;
            dynStats("sen", -2, "lus", -10);
            changes++;
        }
        if (player.vaginas.length > 0 && player.breastRows[0].breastRating < 7 && changes < changeLimit && rand(3) == 0) {
            var grown:uint = 1 + rand(3);
            if (player.breastRows.length > 0) {
                if (player.breastRows[0].breastRating < 4 && rand(3) == 0) grown++;
            }
            outputText("[pg]");
            player.growTits(grown, player.breastRows.length, true, 3);
            if (player.breastRows.length == 0) {
                transformations.CreateBreastRow(2).applyEffect();
                outputText("\n");
            }
        }
        //Physical
        if (player.faceType != Face.ELF && changes < changeLimit && rand(3) == 0) {
            if (player.faceType == Face.HUMAN) {
                outputText("[pg]");
                transformations.FaceElf.applyEffect();
            } else {
                outputText("[pg]");
                transformations.FaceHuman.applyEffect();
            }
            changes++;
        }
        if (player.lowerBody != LowerBody.ELF && changes < changeLimit && rand(3) == 0) {
            if (player.lowerBody == LowerBody.HUMAN) {
                outputText("[pg]");
                transformations.LowerBodyElf.applyEffect();
            } else {
            	outputText("[pg]");
            	transformations.LowerBodyHuman.applyEffect();
            }
            changes++;
        }
        if (player.lowerBody == LowerBody.ELF && player.arms.type != Arms.ELF && changes < changeLimit && rand(3) == 0) {
            outputText("[pg]");
            if (player.arms.type == Arms.HUMAN) {
                transformations.ArmsElf.applyEffect();
            } else {
                transformations.ArmsHuman.applyEffect();
            }
            changes++;
        }
        if (player.arms.type == Arms.ELF && player.ears.type != Ears.ELVEN && changes < changeLimit && rand(3) == 0) {
            outputText("[pg]");
            if (player.ears.type == Ears.HUMAN) {
			    transformations.EarsElven.applyEffect();
            } else {
                transformations.EarsHuman.applyEffect();
            }
            changes++;
        }
        if (player.ears.type == Ears.ELVEN && player.eyes.type != Eyes.ELF && changes < changeLimit && rand(3) == 0) {
            if (transformations.EyesHuman.isPresent()) {
                outputText("[pg]");
                transformations.EyesElf.applyEffect();
            } else {
                outputText("[pg]");
                transformations.EyesHuman.applyEffect();
            }
            changes++;
        }
        if (changes < changeLimit && !player.hasPerk(PerkLib.ElvenSense) && player.ears.type == Ears.ELVEN && player.eyes.type == Eyes.ELF) {
            outputText("[pg]Your acute hearing warns you of imminent danger and you dodge as a branch falls from a nearby tree missing your head by mere inches. You realise your newly sharpened senses granted you increased agility and precision.  <b>You gained the ability Elven Senses.</b>[pg]");
            outputText("<b>(Gained Perk: Elven Sense</b>)");
            player.createPerk(PerkLib.ElvenSense, 0, 0, 0, 0);
            changes++;
        }
        if (changes < changeLimit && !player.hasPerk(PerkLib.NaturalSpellcasting) && player.ears.type == Ears.ELVEN && player.eyes.type == Eyes.ELF) {
            outputText("[pg]As your body finishes changing you feel something fundamental shift in your essence. Magic… You somehow feel magic come to you more easily. Casting spells should be easier to you now that your voice sings the incantations and your hand weaves the signs with ideal precisions.  <b>You gained the ability Natural Spellcasting.</b>[pg]");
            outputText("<b>(Gained Perk: Natural Spellcasting</b>)");
            player.createPerk(PerkLib.NaturalSpellcasting, 0, 0, 0, 0);
            changes++;
        }
        if (player.tongue.type == Tongue.HUMAN && player.tongue.type != Tongue.ELF && changes < changeLimit && rand(3) == 0) {
            outputText("[pg]");
            transformations.TongueElf.applyEffect();
            changes++;
        }
        if (player.tongue.type != Tongue.HUMAN && player.tongue.type != Tongue.ELF && changes < changeLimit && rand(3) == 0) {
            outputText("[pg]");
            transformations.TongueHuman.applyEffect();
            changes++;
        }
        if (transformations.HairSilky.isPossible() && changes < changeLimit && rand(4) == 0) {
            outputText("[pg]");
            transformations.HairSilky.applyEffect();
            changes++;
        }
        if (player.lowerBody == LowerBody.ELF && player.arms.type == Arms.ELF && player.hasPlainSkinOnly() && player.skinAdj != "flawless" && changes < changeLimit && rand(3) == 0) {
            var color:String;
            color            = randomChoice(ElfRace.ElfSkinColors);
            player.skinColor = color;
            outputText("[pg]Your skin begins to change again, impurities, scars and bruises disappearing entirely as your skin color changes to a " + player.skinColor + " tone. You examine your body discovering with surprise your skin is now extremely sensitive but also flawless just like that of an elf. ");
            outputText("It is beautiful and inviting to the touch, surely your opponents would beg for a chance to get but a single taste of your flawless body. <b>Your " + player.skinColor + " skin is now flawless just like that of the elves.</b>");
            if (!player.hasPerk(PerkLib.FlawlessBody)) {
                player.createPerk(PerkLib.FlawlessBody, 0, 0, 0, 0);
                outputText("[pg]<b>(Gained Perk: Flawless Body</b>)");
            }
            player.skinAdj = "flawless";
            changes++;
        }
        if (!player.hasPlainSkinOnly() && changes < changeLimit && rand(3) == 0) {
            outputText("[pg]");
            transformations.SkinPlain.applyEffect();
            changes++;
        }
        //Hair Color
        if (!InCollection(player.hairColor, ElfRace.ElfHairColors) && changes < changeLimit && rand(3) == 0) {
            player.hairColor = randomChoice(ElfRace.ElfHairColors);
            outputText("[pg]Your scalp begins to tingle, and you gently grasp a strand of hair, pulling it out to check it.  Your hair has become [haircolor]!");
        }
        //wings tf for high elfs xD
        flags[kFLAGS.TIMES_TRANSFORMED] += changes;
    }

    public function orcMead(player:Player):void {
        player.slimeFeed();
        clearOutput();
        var changes:Number = 0;
        var changeLimit:Number = 2;
        if (rand(2) == 0) changeLimit++;
        if (rand(2) == 0) changeLimit++;
        changeLimit += player.additionalTransformationChances;
        outputText("You drink the mead, finding it to have a remarkably smooth yet potent taste.  You lick your lips and sneeze, feeling slightly tipsy.");
		DrunkenPowerEmpowerIfPossible();
		AelfwineEmpowerIfPossible();
        //Stats
        if (rand(3) == 0 && changes < changeLimit && MutagenBonus("str", 1)) {
            outputText("[pg]Your fill your muscles filling with orc might.");
            changes++;
        }
        if (rand(2) == 0 && changes < changeLimit && MutagenBonus("tou", 1)) {
            outputText("[pg]Your body and skin both thicken noticeably.  You pinch your [skin.type] experimentally and marvel at how much tougher it has gotten.");
            changes++;
        }
        if (rand(2) == 0 && changes < changeLimit && MutagenBonus("spe", 1)) {
            outputText("[pg]Hearing a sudden sound you suddenly move by reflex to the side with such speed you nearly trip.  Seems your reaction speed has increased as well as your mobile execution.");
            changes++;
        }
        if (player.inte > 15 && rand(3) == 0 && changes < changeLimit) {
            outputText("[pg]You shake your head and struggle to gather your thoughts, feeling a bit slow.");
            player.addCurse("int", 1, 1);
            changes++;
        }
        if (rand(3) == 0 && changes < changeLimit && player.thickness > 20) {
            outputText(player.modThickness(20, 3));
            changes++;
        }
        if (changes < changeLimit && rand(3) == 0 && player.tone < player.maxToneCap()) {
            outputText(player.modTone(player.maxToneCap(), 3));
        }
        if (rand(3) == 0 && changes < changeLimit && player.gender >= 2 && player.hips.type < 15) {
            outputText("[pg]Your gait shifts slightly to accommodate your widening [hips]. The change is subtle, but they're definitely broader.");
            player.hips.type++;
            changes++;
        }
        if (rand(3) == 0 && changes < changeLimit && player.butt.type < 12) {
            outputText("[pg]When you stand back, up your [ass] jiggles with a good bit of extra weight.");
            player.butt.type++;
            changes++;
        }
        if (rand(3) == 0 && changes < changeLimit && player.hasBalls() && player.ballSize < 6) {
            if (player.ballSize < 3)
                outputText("[pg]A flash of warmth passes through you and a sudden weight develops in your groin. You pause to examine the changes and your roving fingers discover your " + (player.balls == 4 ? "quartette" : "duo") + " of [balls] have grown larger than a human’s.");
            else
                outputText("[pg]A sudden onset of heat envelops your groin, focusing on your ballsack. Walking becomes difficult as you discover your " + (player.balls == 4 ? "quartette" : "duo") + " of testicles have enlarged again.");
            player.ballSize++;
            changes++;
        }
        if (player.blockingBodyTransformations()) changeLimit = 0;
        if (rand(3) == 0 && changes < changeLimit && player.cocks.length > player.pigCocks()) {
            transformations.CockPig(player.findFirstCockNotInType([CockTypesEnum.PIG])).applyEffect();
            changes++;
        }
        //Physical
        if (player.lowerBody != LowerBody.ORC && changes < changeLimit && rand(3) == 0) {
            outputText("[pg]");
            if (player.lowerBody == LowerBody.HUMAN) {
                transformations.LowerBodyOrc.applyEffect();
            } else {
            	transformations.LowerBodyHuman.applyEffect();
            }
            changes++;
        }
        if (player.lowerBody == LowerBody.ORC && player.arms.type != Arms.ORC && changes < changeLimit && rand(3) == 0) {
            outputText("[pg]");
            if (player.arms.type == Arms.HUMAN) {
                transformations.ArmsOrc.applyEffect();
            } else {
                transformations.ArmsHuman.applyEffect();
            }
            changes++;
        }
        if (player.arms.type == Arms.ORC && player.faceType != Face.ORC_FANGS && changes < changeLimit && rand(3) == 0) {
            outputText("[pg]");
            transformations.FaceOrcFangs.applyEffect();
            changes++;
        }
        if (player.ears.type != Ears.ELFIN && rand(3) == 0 && changes < changeLimit) {
            if (player.ears.type == Ears.HUMAN) {
                outputText("[pg]");
			    transformations.EarsElfin.applyEffect();
            } else {
            	outputText("[pg]");
            	transformations.EarsHuman.applyEffect();
            }
            changes++;
        }
        if (player.ears.type == Ears.ELFIN && transformations.EyesOrc.isPossible() && changes < changeLimit && rand(3) == 0) {
            outputText("[pg]");
            if (player.eyes.type == Eyes.HUMAN) {
                transformations.EyesOrc.applyEffect();
            } else {
                transformations.EyesHuman.applyEffect();
            }
            changes++;
        }
        if (player.hasPlainSkinOnly() && !InCollection(player.skinColor, OrcRace.OrcSkinColors) && changes < changeLimit && rand(3) == 0) {
            player.skinColor = randomChoice(OrcRace.OrcSkinColors);
            outputText("[pg]Whoah, that was weird.  You just hallucinated that your " + player.skinDesc + " turned " + player.skinColor + ".  No way!  It's staying, it really changed color!");
            changes++;
        }
        if (!player.hasPlainSkinOnly() && changes < changeLimit && rand(3) == 0) {
            outputText("[pg]");
            transformations.SkinPlain.applyEffect();
            changes++;
        }
        if (player.hasPlainSkinOnly() && !player.skin.hasScarShapedTattoo() && rand(3) == 0 && changes < changeLimit) {
            outputText("[pg]");
            transformations.SkinPatternOrc.applyEffect();
            changes++;
        }
        if (player.lowerBody == LowerBody.ORC && player.arms.type == Arms.ORC && player.faceType == Face.ORC_FANGS && player.eyes.type == Eyes.ORC && player.skin.hasScarShapedTattoo() && !player.hasPerk(PerkLib.Ferocity) && changes < changeLimit) {
            outputText("[pg]You feel a limitless energy fill your orcish limbs, as your body tenses, rippling muscle making your scar-like tattoos look even more realistic. Your [face] gains a look of reverence has you hear the all mighty words of your goddess, telling you to go and claim new lands, conquer all living things, bring them beneath your rule.");
            outputText("[pg]She tells you that as long as you bear her blessing, you will not fall in battle, even if fatal blows are dealt. Go forth and prove that puny human who said people die when they are killed wrong.");
            outputText("[pg]<b>(Gained Perk: Ferocity</b>)");
            player.createPerk(PerkLib.Ferocity, 0, 0, 0, 0);
            changes++;
        }
        flags[kFLAGS.TIMES_TRANSFORMED] += changes;
    }

    public function voltageTopaz(itemused:Boolean, player:Player):void {
        if (itemused) clearOutput();
        var changes:Number = 0;
        var changeLimit:Number = 2;
        var temp2:Number = 0;
        if (itemused) {
            if (rand(2) == 0) changeLimit++;
            if (rand(2) == 0) changeLimit++;
            changeLimit += player.additionalTransformationChances;
            outputText("As you admire the shiny jewel, you notice a flicker of energy flash across it, before a sudden jolt runs through your body! Letting out a howling moan, the jewel crumbles to dust as your body spasms in pleasure before the feeling subsides into dull ecstasy. You twitch and drool as something seems to be happening to your body...");
        }
        //Stats
        if (rand(4) == 0 && changes < changeLimit) {
            outputText("[pg]You roll your tongue over your lips as residual static run all over your body. Your nipples are tight and your groin warmed with jolting pleasure. You growl as you feel hornier and hornier before the feeling ebbs. Part of you says you should be concerned by this turn of events, but there are <i>sooo</i> many cuties out there to molest!");
            MutagenBonus("lib", 2);
            if (player.lib < 60) MutagenBonus("lib", 2);
            changes++;
        }
        if (player.sens < 70 && rand(4) == 0 && changes < changeLimit) {
            outputText("[pg]Your skin tingles with delight as every slight movement of the wind feels more distinct. Thoughts about how it would feel against your sexual spots slip into your mind before you can even stop them, and you start idly ");
            if (player.gender == 1 || player.gender == 3) outputText("stroking your [cock]");
            if (player.gender == 3) outputText(" and ");
            if (player.gender > 1) outputText("fingering your [clit]");
            outputText(". This is going to be fun.");
            player.addCurse("sen", 1, 1);
            if (player.sens < 40) player.addCurse("sen", 1, 1);
            changes++;
        }
        if (player.blockingBodyTransformations()) changeLimit = 0;
        //Sexual
        if (player.vaginas.length > 0 && player.breastRows[0].breastRating < 7 && changes < changeLimit && rand(3) == 0) {
            player.growTits(1 + rand(2), 1, false, 3);
            outputText("[pg]You feel a surge of energy and heat deep in your [breasts]. They wobble and tingle before suddenly bursting forward, almost throwing you off balance. They jostle a bit before settling into their new size.");
            if (player.breastRows.length == 0) {
                transformations.CreateBreastRow(2).applyEffect();
                outputText("\n");
            }
        }
        //Physical
        //Glowing Raiju Cock:
        if (player.raijuCocks() < player.cockTotal() && rand(4) == 0 && changes < changeLimit) {
            for (temp2 = 0; temp2 < player.cocks.length; temp2++) {
                //Stop loopahn when dick be found
                if (player.cocks[temp2].cockType != CockTypesEnum.RAIJU) break;
            }
            transformations.CockRaiju(temp2).applyEffect();
            changes++;
            dynStats("lus", 10, "scale", false);
            MutagenBonus("lib", 3);
        }
        //Vagina Turns Glowing:
        if (player.hasVagina() && player.vaginaType() != 16 && rand(4) == 0 && changes < changeLimit) {
            transformations.VaginaRaiju().applyEffect();
            dynStats("lus", 10, "scale", false);
            player.addCurse("sen", 2, 1);
            changes++;
        }
        //Physical changes:
        //Nipples Start Glowing:
        if (transformations.AssholeGlowing.isPossible() && rand(4) == 0 && changes < changeLimit) {
            transformations.AssholeGlowing.applyEffect();
            changes++;
        }
        //Nipples Start Glowing:
        if (transformations.NipplesGlowing.isPossible() && rand(4) == 0 && changes < changeLimit) {
            transformations.NipplesGlowing.applyEffect();
            changes++;
        }
        //Nipples Turn Back:
        if (player.hasStatusEffect(StatusEffects.BlackNipples) && changes < changeLimit && rand(3) == 0) {
            transformations.NipplesNoColor.applyEffect();
            changes++;
        }

        if (!InCollection(player.hairColor, RaijuRace.RaijuHairColors) && changes < changeLimit && rand(3) == 0) {
            player.hairColor = randomChoice(RaijuRace.RaijuHairColors);
            outputText("[pg]Your hair stands up on end as bolts of lightning run through each strand, changing them to a <b>[haircolor] color!</b>");
        }
        if (player.lowerBody != LowerBody.RAIJU && changes < changeLimit && rand(3) == 0) {
            if (player.lowerBody == LowerBody.HUMAN) {
                outputText("[pg]");
                transformations.LowerBodyRaiju(2).applyEffect();
            } else {
            	outputText("[pg]");
            	transformations.LowerBodyHuman.applyEffect();
            }
            changes++;
        }
        if (player.lowerBody == LowerBody.RAIJU && player.arms.type != Arms.RAIJU && player.arms.type != Arms.RAIJU_PAWS && changes < changeLimit && rand(3) == 0) {
            outputText("[pg]");
            if (player.arms.type == Arms.HUMAN) {
                transformations.ArmsRaiju.applyEffect();
            } else {
                transformations.ArmsHuman.applyEffect();
            }
            changes++;
        }
        if (player.arms.type == Arms.RAIJU && changes < changeLimit && rand(3) == 0) {
            outputText("[pg]");
            transformations.ArmsRaijuPaws.applyEffect();
            changes++;
        }
        if (player.arms.type == Arms.RAIJU_PAWS && changes < changeLimit && rand(3) == 0) {
            outputText("[pg]");
            transformations.ArmsRaiju.applyEffect();
            changes++;
        }
        if (player.arms.type == Arms.RAIJU && player.tailType != Tail.RAIJU && changes < changeLimit && rand(3) == 0) {
            outputText("[pg]");
            transformations.TailRaiju.applyEffect();
            changes++;
        }
        if (player.tailType == Tail.RAIJU && player.rearBody.type != RearBody.RAIJU_MANE && changes < changeLimit && rand(3) == 0) {
            outputText("[pg]");
            transformations.RearBodyRaijuMane.applyEffect();
            changes++;
        }
        if (player.rearBody.type == RearBody.RAIJU_MANE && player.wings.type == Wings.NONE && changes < changeLimit && rand(3) == 0) {
            outputText("[pg]");
            transformations.WingsThunderousAura.applyEffect();
            changes++;
        }
        if (player.wings.type != Wings.THUNDEROUS_AURA && player.wings.type > Wings.NONE && changes < changeLimit && rand(3) == 0) {
            outputText("[pg]");
            transformations.WingsNone.applyEffect();
            changes++;
        }
        if (player.rearBody.type == RearBody.RAIJU_MANE && player.faceType != Face.WEASEL && changes < changeLimit && rand(3) == 0) {
            outputText("[pg]");
            transformations.FaceWeasel.applyEffect();
            changes++;
        }
        if (player.faceType == Face.WEASEL && player.ears.type != Ears.RAIJU && changes < changeLimit && rand(3) == 0) {
            if (player.ears.type == Ears.HUMAN) {
                outputText("[pg]");
                transformations.EarsRaiju.applyEffect();
            } else {
            	outputText("[pg]");
            	transformations.EarsHuman.applyEffect();
            }
            changes++;
        }
        if (player.ears.type == Ears.RAIJU && transformations.EyesRaijuColors.isPossible() && changes < changeLimit && rand(3) == 0) {
            outputText("[pg]");
            transformations.EyesRaiju.applyEffect();
            changes++;
        }

        if (transformations.HairStorm.isPossible() && changes < changeLimit && rand(4) == 0) {
            outputText("[pg]");
            transformations.HairStorm.applyEffect();
            changes++;
        }
        if (!player.skin.hasLightningShapedTattoo() && rand(3) == 0 && changes < changeLimit) {
            outputText("[pg]");
            transformations.SkinPatternRaiju.applyEffect();
            changes++;
        }
        if (player.hairType != 4 && player.hairLength < 26 && changes < changeLimit && rand(4) == 0) {
            temp2 += 1 + rand(3);
            outputText("[pg]Your hair tingles as it grows longer, adding " + temp2 + " inches of length to your scalp.");
            player.hairLength += temp2;
            changes++;
        }
        flags[kFLAGS.TIMES_TRANSFORMED] += changes;
    }

    public function stormSeed(player:Player):void {
        player.slimeFeed();
        clearOutput();
        var changes:Number = 0;
        var changeLimit:Number = 2;
        var temp2:Number = 0;
        if (rand(2) == 0) changeLimit++;
        if (rand(2) == 0) changeLimit++;
        changeLimit += player.additionalTransformationChances;
        outputText("You eat up the seed and not to soon after let out a howling moan as your body spasms in pleasure before the feeling subsides into dull ecstasy. You twitch and drool as something seems to be happening to your body...");
        //Stats
        if (rand(3) == 0 && changes < changeLimit && MutagenBonus("spe", 1)) {
            changes++;
            if (player.spe >= 75) outputText("[pg]A familiar chill runs down your spine. Your muscles feel like well oiled machinery, ready to snap into action with lightning speed.");
            else outputText("[pg]A chill runs through your spine, leaving you feeling like your reflexes are quicker and your body faster.");
        }
        if (rand(3) == 0 && changes < changeLimit) {
            changes++;
            if (rand(2) == 0) outputText("[pg]A nice, slow warmth rolls from your gut out to your limbs, flowing through them before dissipating entirely. As it leaves, you note that your body feels softer and less resilient.");
            else outputText("[pg]You feel somewhat lighter, but consequently more fragile.  Perhaps your bones have changed to be more harpy-like in structure?");
            player.addCurse("tou", 1, 1);
        }
        if (rand(4) == 0 && changes < changeLimit && MutagenBonus("lib", 2)) {
            outputText("[pg]You roll your tongue over your lips as residual tingles run all over your body. Your nipples are tight and your groin warmed with jolting pleasure. You growl as you feel hornier and hornier before the feeling ebbs. Part of you says you should be concerned by this turn of events, but there are <i>sooo</i> many cuties out there to molest!");
            changes++;
        }
        if (player.sens < 70 && rand(4) == 0 && changes < changeLimit) {
            outputText("[pg]Your skin tingles with delight as every slight movement of the wind feels more distinct. Thoughts about how it would feel against your sexual spots slip into your mind before you can even stop them, and you start idly ");
            if (player.gender == 1 || player.gender == 3) outputText("stroking your [cock]");
            if (player.gender == 3) outputText(" and ");
            if (player.gender > 1) outputText("fingering your [clit]");
            outputText(". This is going to be fun.");
            player.addCurse("sen", 1, 1);
            if (player.sens < 40)  player.addCurse("sen", 1, 1);
            changes++;
        }
        if (player.blockingBodyTransformations()) changeLimit = 0;
        //Sexual
        //-Remove extra breast rows
        if (changes < changeLimit && player.breastRows.length > 1 && rand(3) == 0 && !flags[kFLAGS.HYPER_HAPPY]) {
            changes++;
            transformations.BreastRowsRemoveToOne.applyEffect();
        }
                //-Shrink tits if above DDs.
        //Cannot happen at same time as row removal
        else if (changes < changeLimit && player.breastRows.length == 1 && rand(3) == 0 && player.breastRows[0].breastRating >= 7 && !flags[kFLAGS.HYPER_HAPPY]) {
            changes++;
            //(Use standard breast shrinking mechanism if breasts are under 'h')
            if (player.breastRows[0].breastRating < 19) {
                player.shrinkTits();
            }
            //(H+)
            else {
                player.breastRows[0].breastRating -= (4 + rand(4));
                outputText("[pg]Your chest pinches tight, wobbling dangerously for a second before the huge swell of your bust begins to shrink into itself. The weighty mounds jiggle slightly as they shed cup sizes like old, discarded coats, not stopping until they're " + player.breastCup(0) + "s.");
            }
        }
        //-Grow tits to a B-cup if below.
        if (changes < changeLimit && player.breastRows[0].breastRating < 2 && rand(3) == 0) {
            changes++;
            outputText("[pg]Your chest starts to tingle, the [skin.type] warming under your [armor]. Reaching inside to feel the tender flesh, you're quite surprised when it puffs into your fingers, growing larger and larger until it settles into a pair of B-cup breasts.");
            if (player.breastRows[0].breastRating < 1) outputText("  <b>You have breasts now!</b>");
            player.breastRows[0].breastRating = 2;
        }//Physical
        var raiju_hair:Array = ["purple", "light blue", "yellow", "white", "turquoise", "emerald"];
        if (!InCollection(player.hairColor, raiju_hair) && changes < changeLimit && rand(3) == 0) {
            player.hairColor = randomChoice(raiju_hair);
            outputText("[pg]Your hair stands up on end as bolts of lightning run through each strand, changing them to a <b>[haircolor] color!</b>");
        }
        //SPECIAL:
        //Harpy Womb – All eggs are automatically upgraded to large, requires legs + tail to be harpy.
        if (!player.hasPerk(PerkLib.HarpyWomb) && player.lowerBody == LowerBody.HARPY && player.tailType == Tail.THUNDERBIRD && rand(4) == 0 && changes < changeLimit) {
            player.createPerk(PerkLib.HarpyWomb, 0, 0, 0, 0);
            outputText("[pg]There's a rumbling in your womb, signifying that some strange change has taken place in your most feminine area. No doubt something in it has changed to be more like a harpy. (<b>You've gained the Harpy Womb perk! All the eggs you lay will always be large so long as you have harpy legs and a thunderbird tail.</b>)");
            changes++;
        }
        if (changes < changeLimit && rand(4) == 0 && ((player.ass.analWetness > 0 && !player.hasPerk(PerkLib.MaraesGiftButtslut)) || player.ass.analWetness > 1)) {
            outputText("[pg]You feel a tightening up in your colon and your [asshole] sucks into itself.  You feel sharp pain at first but that thankfully fades.  Your ass seems to have dried and tightened up.");
            player.ass.analWetness--;
            if (player.ass.analLooseness > 1) player.ass.analLooseness--;
            changes++;
        }
        //-Harpy legs
        if (player.lowerBody != LowerBody.HARPY && changes < changeLimit && rand(3) == 0) {
            outputText("[pg]");
            transformations.LowerBodyHarpy.applyEffect();
            changes++;
        }
        //-Propah Wings
        if (player.wings.type == Wings.NONE && changes < changeLimit && rand(3) == 0) {
            outputText("[pg]");
			transformations.WingsFeatheredLarge.applyEffect();
            changes++;
        }
        //-Remove old wings
        if (player.wings.type != Wings.FEATHERED_LARGE && player.wings.type > Wings.NONE && changes < changeLimit && rand(3) == 0) {
            outputText("[pg]");
            transformations.WingsNone.applyEffect();
            changes++;
        }
        //-Feathery Arms
        if (!InCollection(player.arms.type, Arms.HARPY) && changes < changeLimit && rand(3) == 0) {
            outputText("[pg]You smile impishly as you lick the last bits of the seed from your teeth, but when you go to wipe your mouth, instead of the usual texture of your [skin.type] on your lips, you feel feathers! ");
            transformations.ArmsHarpy.applyEffect();
            changes++;
        }
        if (player.arms.type == Arms.HARPY && player.tailType != Tail.THUNDERBIRD && changes < changeLimit && rand(3) == 0) {
            outputText("[pg]");
            transformations.TailThunderbird.applyEffect();
            changes++;
        }
        if (player.tailType == Tail.THUNDERBIRD && player.rearBody.type != RearBody.RAIJU_MANE && changes < changeLimit && rand(3) == 0) {
            outputText("[pg]");
            transformations.RearBodyRaijuMane.applyEffect();
            changes++;
        }
        if (player.rearBody.type == RearBody.RAIJU_MANE && player.faceType != Face.HUMAN && player.faceType != Face.WEASEL && changes < changeLimit && rand(3) == 0) {
            outputText("[pg]");
            transformations.FaceHuman.applyEffect();
            changes++;
        }
        if (player.faceType == Face.HUMAN && player.ears.type != Ears.ELFIN && changes < changeLimit && rand(3) == 0) {
            outputText("[pg]");
			transformations.EarsElfin.applyEffect();
            changes++;
        }

        if (player.ears.type == Ears.ELFIN && transformations.EyesRaijuColors.isPossible() && changes < changeLimit && rand(3) == 0) {
            outputText("[pg]");
            transformations.EyesRaijuColors.applyEffect();
            changes++;
        }

        if (transformations.HairStorm.isPossible() && changes < changeLimit && rand(4) == 0) {
            outputText("[pg]");
            transformations.HairStorm.applyEffect();
            changes++;
        }
        if (!player.skin.hasLightningShapedTattoo() && rand(3) == 0 && changes < changeLimit) {
            outputText("[pg]");
            transformations.SkinPatternRaiju.applyEffect();
            changes++;
        }
        if (player.hairType != 4 && player.hairLength < 26 && changes < changeLimit && rand(4) == 0) {
            temp2 += 1 + rand(3);
            outputText("[pg]Your hair tingles as it grows longer, adding " + temp2 + " inches of length to your scalp.");
            player.hairLength += temp2;
            changes++;
        }
        flags[kFLAGS.TIMES_TRANSFORMED] += changes;
    }

	public function eyeDrops(type:Number, player:Player):void {
        player.slimeFeed();
        clearOutput();
        var changes:Number = 0;
        var changeLimit:Number = 2;
        if (rand(2) == 0) changeLimit++;
        if (rand(2) == 0) changeLimit++;
        changeLimit += player.additionalTransformationChances;
        outputText("You apply the eyedrops to your eye"+(player.eyes.type == Eyes.MONOEYE ? "":"s")+" pointlessly hoping it can help you wash away all the dirty things you have seen on Mareth. For a few seconds, your vision becomes… clearer? However this is not without other changes.");
        //Stats
		if (rand(3) == 0 && changes < changeLimit && MutagenBonus("str", 1)) {
            //(low str)
            if (player.str < 40) outputText("[pg]Shivering, you feel a feverish sensation that reminds you of the last time you got sick. Thankfully, it passes swiftly, leaving slightly enhanced strength in its wake.");
            //(hi str – 50+)
            else outputText("[pg]Heat builds in your muscles, their already-potent mass shifting slightly as they gain even more strength.");
            changes++;
        }
		if (rand(3) == 0 && changes < changeLimit && type == 0 && MutagenBonus("tou", 1)) {
            outputText("[pg]Your body and skin both thicken noticeably.  You pinch your [skin.type] experimentally and marvel at how much tougher it has gotten.");
            changes++;
        }
		if (rand(3) == 0 && changes < changeLimit && type == 1 && MutagenBonus("int", 3)) {
            outputText("[pg]It seems not only your eyes see better, your mind is clearer too. A paranoid thought suddenly comes to you as you realise just about anyone you know could be plotting your demise in secret"+((flags[kFLAGS.MARAE_QUEST_COMPLETE] >= 1 || flags[kFLAGS.MET_MARAE_CORRUPTED] == 1) ? " after all your village elders sold you off to the demons as a sacrifice":"")+". Come to think of it, who are your true friends even?");
            changes++;
        }
        if (changes < changeLimit && rand(3) == 0 && player.spe > 15 && type == 1) {
            outputText("[pg]Ugh, why are you even in such a hurry all the time? You should just relax and take your time instead of rushing ahead. The world ain't gonna end overnight.");
			if (player.wings.type != Wings.LEVITATION) outputText(" Heck, even walking takes so much effort... If you could levitate you would skip on that too.");
            player.addCurse("spe", 1, 1);
            if (player.str > 60) player.addCurse("spe", 1, 1);
            if (player.str > 80) player.addCurse("spe", 1, 1);
            if (player.str > 90) player.addCurse("spe", 1, 1);
            changes++;
        }
		if (rand(4) == 0 && changes < changeLimit && type == 1 && MutagenBonus("lib", 3)) {
            outputText("[pg]You can't help but think that if you wanted you could easily peep on someone having sex at any time. This whole place is an open sex display. All you need to do is keep your eye open and listen for the sound of a nearby orgy to find one. Then it's all about peeping without being spotted. The more you think about it the more this whole voyeurism fantasy has you aroused.");
            changes++;
        }
		if (player.blockingBodyTransformations()) changeLimit = 0;
        //Physical
		if (transformations.EyesMonoeye.isPresent() && transformations.EyesChangeColor(["red"]).isPossible() && changes < changeLimit && rand(3) == 0) {
            transformations.EyesChangeColor(["red"]).applyEffect();
            changes++;
        }
        if (player.eyes.type != Eyes.MONOEYE && changes < changeLimit && rand(3) == 0) {
            outputText("[pg]");
            if (transformations.EyesHuman.isPresent()) {
                transformations.EyesMonoeye.applyEffect();
            }
			else {
                transformations.EyesHuman.applyEffect();
            }
            changes++;
        }
		if (player.faceType != Face.ANIMAL_TOOTHS && rand(3) == 0 && changes < changeLimit) {
            outputText("[pg]");
            transformations.FaceAnimalTeeth.applyEffect();
            changes++;
        }
		if (((player.wings.type != Wings.NONE && type == 0) || (!InCollection(player.wings.type, Wings.LEVITATION, Wings.NONE) && type == 1)) && rand(3) == 0 && changes < changeLimit) {
            outputText("[pg]");
            transformations.WingsNone.applyEffect();
            changes++;
        }
        if (player.tailType > Tail.NONE && rand(3) == 0 && changes < changeLimit) {
            outputText("[pg]");
            transformations.TailNone.applyEffect();
            changes++;
        }
		if (player.wings.type == Wings.NONE && player.lowerBody == LowerBody.HUMAN && player.lowerBody != LowerBody.GAZER && player.rearBody.type == RearBody.TENTACLE_EYESTALKS && player.statusEffectv1(StatusEffects.GazerEyeStalksPlayer) >= 2 && changes < changeLimit && rand(3) == 0 && type == 1) {
            outputText("[pg]");
            transformations.WingsLevitation.applyEffect();
            outputText("[pg]");
            transformations.LowerBodyGazer.applyEffect();
            changes++;
        }
		if (player.lowerBody != LowerBody.HUMAN && ((type == 0) || (player.lowerBody != LowerBody.GAZER && type == 1)) && changes < changeLimit && rand(3) == 0) {
            outputText("[pg]");
            transformations.LowerBodyHuman.applyEffect();
            changes++;
        }
		if (changes < changeLimit && player.lowerBody == LowerBody.GAZER && player.arms.type == Arms.HUMAN && player.arms.type != Arms.GAZER && rand(3) == 0 && type == 1) {
            outputText("[pg]");
			transformations.ArmsGazer.applyEffect();
            changes++;
        }
		if (changes < changeLimit && ((player.arms.type != Arms.HUMAN && type == 0) || (!InCollection(player.arms.type, Arms.HUMAN, Arms.GAZER) && type == 1)) && rand(3) == 0) {
            outputText("[pg]");
            transformations.ArmsHuman.applyEffect();
            changes++;
        }
        if (!player.hasPlainSkinOnly() && rand(3) == 0 && changes < changeLimit) {
            if (player.skinAdj != "") player.skinAdj = "";
            outputText("[pg]");
            transformations.SkinPlain.applyEffect();
        }
		if (type == 1) {
			if (player.rearBody.type != RearBody.TENTACLE_EYESTALKS || (player.rearBody.type == RearBody.TENTACLE_EYESTALKS && player.statusEffectv1(StatusEffects.GazerEyeStalksPlayer) < 10) && changes < changeLimit && rand(3) == 0) {
				outputText("[pg]");
                transformations.RearBodyTentacleEyestalks.applyEffect();
				changes++;
			}
			if (!player.skin.hasOilySkin() && rand(3) == 0 && changes < changeLimit) {
				outputText("[pg]");
                transformations.SkinPatternOil.applyEffect();
				changes++;
			}
			if (!InCollection(player.skinColor, GazerRace.GazerSkinColors) && changes < changeLimit) {
				outputText("[pg]You feel a crawling sensation on the surface of your skin, starting at the small of your back and spreading to your extremities, ultimately reaching your face.  Holding an arm up to your face, you discover that <b>you now have ");
                player.skinColor = randomChoice(GazerRace.GazerSkinColors);
				outputText("[skin]!</b>");
				changes++;
			}
			if (!InCollection(player.hairColor, GazerRace.GazerHairColors) && changes < changeLimit && rand(3) == 0) {
				player.hairColor = randomChoice(GazerRace.GazerHairColors);
				outputText("[pg]Your hair tingles as the strands turns <b>[haircolor]!</b>");
			}
		}
		if (changes == 0) outputText(" Or so you thought, guess it was all in your imagination after all.");
        flags[kFLAGS.TIMES_TRANSFORMED] += changes;
    }

    public function smartyNuts(player:Player):void {
        clearOutput();
        var changes:Number = 0;
        var changeLimit:Number = 2;
        var Ratatoskr_Colour:Array = RatatoskrRace.RatatoskrHairColors;
        if (rand(2) == 0) changeLimit++;
        if (rand(2) == 0) changeLimit++;
        changeLimit += player.additionalTransformationChances;
        outputText("You chew at the nuts and begin to shake as your body is overcome with changes...");
        //Stats
        if (rand(4) == 0 && changes < changeLimit && MutagenBonus("int", 3)) {
            outputText("[pg]You begin to feel way smarter as you start remembering about anything you've read or heard with ever increasing clarity.");
            changes++;
        }
        if (rand(3) == 0 && changes < changeLimit && MutagenBonus("spe", 1)) {
            changes++;
            outputText("[pg]A chill runs through your spine, leaving you feeling like your reflexes are quicker and your body faster.");
        }
        //[decrease Strength] (to some floor) // I figured 15 was fair, but you're in a better position to judge that than I am.
        if (changes < changeLimit && rand(3) == 0 && player.str > 15) {
            outputText("[pg]You can feel your muscles softening as they slowly relax, becoming a tad weaker than before.  Who needs physical strength when you are this smart?  You tilt your head a bit, wondering where that thought came from.");
            player.addCurse("str", 1, 1);
            if (player.str > 60) player.addCurse("str", 1, 1);
            if (player.str > 80) player.addCurse("str", 1, 1);
            if (player.str > 90) player.addCurse("str", 1, 1);
            changes++;
        }
        //[decrease Toughness] (to some floor) // 20 or so was my thought here
        if (changes < changeLimit && rand(3) == 0 && player.tou > 20) {
            if (player.tou < 60) outputText("[pg]You feel your skin becoming noticeably softer.  A gentle exploratory pinch on your arm confirms it - your supple skin isn't going to offer you much protection.");
            else outputText("[pg]You feel your skin becoming noticeably softer.  A gentle exploratory pinch on your arm confirms it - your hide isn't quite as tough as it used to be.");
            player.addCurse("tou", 1, 1);
            if (player.tou > 60) player.addCurse("tou", 1, 1);
            if (player.tou > 80) player.addCurse("tou", 1, 1);
            if (player.tou > 90) player.addCurse("tou", 1, 1);
            changes++;
        }
        if (player.blockingBodyTransformations()) changeLimit = 0;
        //Physical
        if (!InCollection(player.hairColor, Ratatoskr_Colour) && changes < changeLimit && rand(3) == 0) {
            player.hairColor = randomChoice(Ratatoskr_Colour);
            outputText("[pg]Your hair tingles as the strands turn <b>[haircolor]!</b>");
        }
        if (!player.isFurCovered() && changes < changeLimit && rand(3) == 0) {
            var color1:String = randomChoice(Ratatoskr_Colour);
            outputText("[pg]");
            transformations.SkinFur(Skin.COVERAGE_LOW, {color: color1}).applyEffect();
        }
        //get partial fur from full if pc face is human
        if (player.isFurCovered() && rand(3) == 0 && changes < changeLimit && (player.skin.coverage == Skin.COVERAGE_COMPLETE || player.skin.coverage == Skin.COVERAGE_HIGH)) {
            var color2:String = randomChoice(Ratatoskr_Colour);
            outputText("[pg]What used to be a dense coat of fur begins to fall in patches on the ground leaving you with just enough fur to cover some area of your body.  <b>Some area of your body are now partially covered with fur!</b>");
            player.skin.coverage = Skin.COVERAGE_LOW;
            player.coatColor = color2;
            changes++;
        }
		if (rand(2) == 0 && player.tallness > 42) {
            changes++;
            outputText("[pg]Wait, is it just you or did the ground get closer? No way, you did become smaller!");
            player.tallness -= (1 + rand(5));
        }
        if (player.lowerBody != LowerBody.SQUIRREL && changes < changeLimit && rand(3) == 0) {
            outputText("[pg]");
            if (player.lowerBody == LowerBody.HUMAN) {
                transformations.LowerBodySquirrel.applyEffect();
			} else {
				transformations.LowerBodyHuman.applyEffect();
			}
            changes++;
        }
        if (player.lowerBody == LowerBody.SQUIRREL && player.arms.type != Arms.SQUIRREL && changes < changeLimit && rand(3) == 0) {
            outputText("[pg]");
            if (player.arms.type == Arms.HUMAN) {
                transformations.ArmsSquirrel.applyEffect();
            }
			else {
                transformations.ArmsHuman.applyEffect();
            }
            changes++;
        }
        if (player.faceType != Face.SMUG && changes < changeLimit && rand(3) == 0) {
            outputText("[pg]");
            transformations.FaceSmug.applyEffect();
            changes++;
        }
        if (player.faceType == Face.SMUG && changes < changeLimit && rand(3) == 0) {
            outputText("[pg]");
            transformations.FaceSquirrel.applyEffect();
            changes++;
        }
        if ((player.faceType == Face.SMUG || player.faceType == Face.SQUIRREL) && player.ears.type != Ears.SQUIRREL && changes < changeLimit && rand(3) == 0) {
            if (player.ears.type == Ears.HUMAN) {
                outputText("[pg]");
                transformations.EarsSquirrel.applyEffect();
            } else {
                outputText("[pg]");
                transformations.EarsHuman.applyEffect();
            }
            changes++;
        }
		if ((player.faceType == Face.SMUG || player.faceType == Face.SQUIRREL) && player.tongue.type != Tongue.RATATOSKR && changes < changeLimit && rand(3) == 0) {
			outputText("[pg]");
			transformations.TongueRatatoskr.applyEffect();
			changes++;
		}
        if (player.ears.type == Ears.SQUIRREL && transformations.EyesRatatoskr.isPossible() && changes < changeLimit && rand(3) == 0) {
            outputText("[pg]");
            if (player.eyes.type == Eyes.HUMAN) {
                transformations.EyesRatatoskr.applyEffect();
            } else {
                transformations.EyesHuman.applyEffect();
            }
            changes++;
        }

        if (transformations.HairRatatoskr.isPossible() && changes < changeLimit && rand(4) == 0) {
            outputText("[pg]");
            transformations.HairRatatoskr.applyEffect();
            changes++;
        }
        if (player.arms.type == Arms.SQUIRREL && player.tailType != Tail.SQUIRREL && changes < changeLimit && rand(3) == 0) {
            outputText("[pg]");
            transformations.TailSquirrel.applyEffect();
            changes++;
        }
        flags[kFLAGS.TIMES_TRANSFORMED] += changes;
    }

    public function windstormEmerald(itemused:Boolean, player:Player):void {
        if (itemused) clearOutput();
        var changes:Number = 0;
        var changeLimit:Number = 2;
        var kamaitachi_hair:Array = ["blonde","yellow","caramel","brown","emerald"];
        if (itemused) {
            if (rand(2) == 0) changeLimit++;
            if (rand(2) == 0) changeLimit++;
            changeLimit += player.additionalTransformationChances;
            outputText("As you admire the shiny jewel, the wind around you suddenly becomes stronger on sending debris around, before a sudden blade of winds runs through your body leaving a bleeding cut! Rather than pain the fresh wound begins to throb with increasing pleasure. You let out a howling moan, the jewel crumbles to dust before the feeling slowly subsides into dull ecstasy. You twitch and drool as something seems to be happening to your body...");
        }
        //Stats
        if (rand(4) == 0 && changes < changeLimit && MutagenBonus("lib", 3)) {
            outputText("[pg]You roll your tongue over your lips as residual static run all over your body. Your nipples are tight and your groin warmed with jolting pleasure. You growl as you feel hornier and hornier before the feeling ebbs. Part of you says you should be concerned by this turn of events, but there are <i>sooo</i> many cuties out there to molest!");
            changes++;
        }
        if (player.sens < 70 && rand(4) == 0 && changes < changeLimit) {
            outputText("[pg]Your skin tingles with delight as every slight movement of the wind feels more distinct. Thoughts about how it would feel against your sexual spots slip into your mind before you can even stop them, and you start idly ");
            if (player.gender == 1 || player.gender == 3) outputText("stroking your [cock]");
            if (player.gender == 3) outputText(" and ");
            if (player.gender > 1) outputText("fingering your [clit]");
            outputText(". This is going to be fun.");
            player.addCurse("sen", 1, 1);
            if (player.sens < 40) player.addCurse("sen", 1, 1);
            changes++;
        }
        if (player.blockingBodyTransformations()) changeLimit = 0;
        //Sexual
        if (player.vaginas.length > 0 && player.breastRows[0].breastRating < 7 && changes < changeLimit && rand(3) == 0) {
            player.growTits(1 + rand(2), 1, false, 3);
            outputText("[pg]You feel a surge of energy and heat deep in your [breasts]. They wobble and tingle before suddenly bursting forward, almost throwing you off balance. They jostle a bit before settling into their new size.");
            if (player.breastRows.length == 0) {
                transformations.CreateBreastRow(2).applyEffect();
                outputText("\n");
            }
        }
        //Physical
        if (!InCollection(player.hairColor, kamaitachi_hair) && changes < changeLimit && rand(3) == 0) {
            player.hairColor = randomChoice(kamaitachi_hair);
            outputText("[pg]Your hair tingles as the strands turns <b>[haircolor]!</b>");
        }

        if (!player.isFurCovered() && changes < changeLimit && rand(3) == 0) {
            var color1:String = randomChoice(kamaitachi_hair);
            outputText("[pg]");
            transformations.SkinFur(Skin.COVERAGE_LOW, {color: color1}).applyEffect();
        }

        //get partial fur from full if pc face is human
        if (player.isFurCovered() && rand(3) == 0 && changes < changeLimit && (player.skin.coverage == Skin.COVERAGE_COMPLETE || player.skin.coverage == Skin.COVERAGE_HIGH)) {
            outputText("[pg]");
            transformations.SkinFur(Skin.COVERAGE_LOW, {colors:kamaitachi_hair})
            changes++;
        }

        if (player.lowerBody != LowerBody.WEASEL && changes < changeLimit && rand(3) == 0) {
            if (player.lowerBody == LowerBody.HUMAN) {
                outputText("[pg]");
                transformations.LowerBodyWeasel(2).applyEffect();
            } else {
            	outputText("[pg]");
            	transformations.LowerBodyHuman.applyEffect();
            }
            changes++;
        }
        if (player.lowerBody == LowerBody.WEASEL && player.arms.type != Arms.WEASEL && player.arms.type != Arms.KAMAITACHI && changes < changeLimit && rand(3) == 0) {
            outputText("[pg]");
            if (player.arms.type == Arms.HUMAN) {
                transformations.ArmsWeasel.applyEffect();
            } else {
                transformations.ArmsHuman.applyEffect();
            }
            changes++;
        }
        if (player.arms.type == Arms.WEASEL && changes < changeLimit && rand(3) == 0) {
            outputText("[pg]");
            transformations.ArmsKamaitachi.applyEffect();
            changes++;
        }
        if (player.arms.type == Arms.KAMAITACHI && player.tailType != Tail.WEASEL && changes < changeLimit && rand(3) == 0) {
            outputText("[pg]");
            transformations.TailWeasel.applyEffect();
            changes++;
        }
        if (player.arms.type == Arms.KAMAITACHI && player.wings.type == Wings.NONE && changes < changeLimit && rand(3) == 0) {
            outputText("[pg]");
            transformations.WingsWindyAura.applyEffect();
            changes++;
        }
        if (player.wings.type != Wings.WINDY_AURA && player.wings.type > Wings.NONE && changes < changeLimit && rand(3) == 0) {
            outputText("[pg]");
            transformations.WingsNone.applyEffect();
            changes++;
        }
        if (player.faceType != Face.WEASEL && changes < changeLimit && rand(3) == 0) {
            outputText("[pg]");
            transformations.FaceWeasel.applyEffect();
            changes++;
        }
        if (player.faceType == Face.WEASEL && player.ears.type != Ears.WEASEL && changes < changeLimit && rand(3) == 0) {
            if (player.ears.type == Ears.HUMAN) {
                outputText("[pg]");
			    transformations.EarsWeasel.applyEffect();
            } else {
            	outputText("[pg]");
            	transformations.EarsHuman.applyEffect();
            }
            changes++;
        }
        if (player.ears.type == Ears.WEASEL && transformations.EyesWeasel.isPossible() && changes < changeLimit && rand(3) == 0) {
            outputText("[pg]");
            if (transformations.EyesHuman.isPresent()) {
                if (transformations.EyesKamaitachiColors.isPossible()) {
                    outputText("[pg]");
                    transformations.EyesKamaitachiColors.applyEffect();
                }
                transformations.EyesWeasel.applyEffect();
            } else {
                transformations.EyesHuman.applyEffect();
            }
            changes++;
        }
        if (transformations.HairWindswept.isPossible() && changes < changeLimit && rand(4) == 0) {
            outputText("[pg]");
            transformations.HairWindswept.applyEffect();
            changes++;
        }
        if (!player.skin.hasWindSweptScars() && player.wings.type == Wings.WINDY_AURA && rand(3) == 0 && changes < changeLimit) {
            outputText("[pg]");
            transformations.SkinPatternScarWindswept.applyEffect();
            changes++;
        }
        flags[kFLAGS.TIMES_TRANSFORMED] += changes;
    }

    public function strangeFlower(player:Player):void {
        clearOutput();
        if (player.lowerBody == LowerBody.PLANT_FLOWER && !player.blockingBodyTransformations()) {
            outputText("Having no idea of what could happen when you take a whiff of this obviously corrupted plant, you head to the forest in order to find some privacy.");
            if (silly()) outputText(" You have the feeling you might be taunting Murphy.");
            outputText("[pg]Finally, you smell the flower, glorious! A giddy smile grows on your face as arousal flushes your skin. As the unknown aphrodisiac gets to work on you,  " +
                    "you begin to release thick clouds of pollen all around you. " +
                    "The clouds spread a good distance with your aphrodisiac, trying to draw in anything to fuck you. Your efforts are rewarded when a clearly aroused succubus comes out of the nearby bush, " +
                    "though whether her arousal is actually from your pollen is anybody's guess. You pull the entranced demoness into your nectar bath with your vines. " +
                    "She barely resists, aroused as she is, rather she practically jumps in, of her own volition. You don’t waste any time closing your petals around your catch. " +
                    "As soon as she is secured, you begin to grind your pussy on the woman’s drooling snatch, eager to get going." +
                    " the succubus coos and begins kissing you, as you, in turn, wrap yourself around her, pulling her deeper into your bath, kissing all the way." +
                    " The two of you go at it with reckless abandon, grinding your cunts and splashing nectar everywhere, grabbing each other’s breasts, and drinking them dry of milk and nectar." +
                    " You eventually doze off in the arms of your blind date, falling asleep for a while.[pg]" +
                    "You wake up a good while later, your flower is still closed, so you decide to open it to let some sunlight in. " +
                    "You suddenly feel your hand touching your leftmost petal, but that shouldn’t be possible, since you are still on the far right of your flower. " +
                    "As you look over in confusion, you notice you’re no longer alone in your flower. " +
                    "On the other side is a second girl who happens to have exactly the same appearance as you. You poke her side, causing her to jump, startled by the contact. " +
                    "Once she recovers she shoots you a dirty look and speaks at the exact same time as you.[pg]" +
                    "\"<i>The fuck are you doing in my flower!? Out! Now!</i>\"[pg]" +
                    "\"<i>The fuck are you saying, you damn squatter?! This is <i>my</i> flower!</i>\"[pg]" +
                    "And you find yourself looking at your spitting image, much to your confusion. " +
                    "Apparently, you are not alone in that feeling, since she looks just as confused, prompting both of you to start trying to figure out what the fuck happened. " +
                    "You recall coming to the forest, smelling that weird flower, getting horny, fucking that succubus, and finally going off to sleep with her still in the flower. Meanwhile, your clone has absolutely no memory aside from waking up here in this flower. " +
                    "No memory doesn’t mean she doesn’t know anything since it’s evident you both share all your knowledge, abilities, and even your name.[pg]" +
                    "You try to figure out how this could have happened, coming to the conclusion that you probably assimilated the succubus’ soulless body into yours, converting it into your double." +
                    " Creepy... After the alarm fades off, you finally realize this is the perfect opportunity to make true a crazy fantasy you never thought you would be able to: literally fucking yourself." +
                    " No, masturbation doesn’t count, and since you two are sharing one body and soul, she should be having this very same idea as well, right? The thought is confirmed when you both dive in to kiss each other at the same time." +
                    " The two of you begin to make out and play with each other’s pussy, moving fingers with the perfect coordination only possible for those having shared senses. You never thought fucking yourself would feel so good." +
                    " You can feel everything she does and vice versa, riding a double orgasm as both your pussies gush with nectar, the pair of you cumming in perfect sync." +
                    " You and your sister sit in the flower bath, still tangled together from your recent fuck as you come to a conclusion.[pg]" +
                    "\"<i>Since we’re in this together we might as well team-up. We are stronger when we’re in sync.</i>\"[pg]" +
                    "She nods and adds.\"<i>Good! Perhaps the quicker one can utilize weapons more and the other can support with vines.</i>\"[pg]" +
                    "\"<i>What about sex? Do we take turns fucking, with some sharing thrown in from time to time?</i>\"[pg]" +
                    "\"<i>That works for me long as you don’t hog all the stamens.</i>\"[pg]" +
                    "\"<i>Does it even matter since whoever gets to fuck will share her senses with the other anyways?</i>\"[pg]" +
                    "\"<i>Fine, whoever is the benchwarmer gets priority the next time.</i>\"[pg]" +
                    "It then occurs to you one has to take the lead else there will be disputes. The obvious answer is to switch lead on every morning, something your twin agrees to right away. In town whoever leads gets to speak to people, and the other will need to stay under the nectar to avoid weirding everyone out." +
                    "Satisfied with the rules, the two of you do a high-five and head back to camp ready to tag-team your adventure. <b>You are now two but one, one but two. You have become a Liliraune.</b>");
            player.createPerk(PerkLib.DualMind, 0, 0, 0, 0);
            player.hairColor = "light purple";
            player.featherColor = "snow white";
            player.lowerBody = LowerBody.FLOWER_LILIRAUNE;
            player.refillHunger(20);
        } else {
            outputText("As you take a whif of the plant nothing happens guess this flower has property you can use at the time.");
            player.refillHunger(20);
        }
    }

    public function isabellaMilk(player:Player):void {
        player.slimeFeed();
        clearOutput();
        outputText("You swallow down the bottle of Isabella's milk.");
        if (player.fatigue > 0) outputText("  You feel much less tired! (-"+(Math.round(33*player.postConsumptionMlt()))+" fatigue)");
        fatigue(-Math.round(33*player.postConsumptionMlt()));
		if (player.perkv1(IMutationsLib.DisplacerMetabolismIM) >= 1) player.displacerFeedFromBottle();
        player.refillHunger(20);
    }

    public function excelliaMilk(player:Player):void {
        player.slimeFeed();
        clearOutput();
        outputText("You swallow down the bottle of Excellia's milk.");
        if (player.fatigue > 0) outputText("  You feel much less tired! (-"+(Math.round(50*player.postConsumptionMlt()))+" fatigue)");
        outputText("[pg]Inhuman vitality spreads through your body, invigorating you! ");
        HPChange((((player.level * 5) + 10) * (1 + player.newGamePlusMod()) * player.postConsumptionMlt()), true);
        dynStats("lus", Math.round(5*player.postConsumptionMlt()), "scale", false);
        fatigue(-Math.round(50*player.postConsumptionMlt()));
		if (player.perkv1(IMutationsLib.DisplacerMetabolismIM) >= 1) player.displacerFeedFromBottle();
        player.refillHunger(25);
    }


    //TF item - Shriveled Tentacle
    //tooltip:
    public function shriveledTentacle(player:Player):void {
        clearOutput();
        outputText("You chew on the rubbery tentacle; its texture and taste are somewhat comparable to squid, but the half-dormant nematocysts cause your mouth to tingle sensitively.");
        var changes:Number = 0;
        var changeLimit:Number = 2;
        if (rand(2) == 0) changeLimit++;
        if (rand(2) == 0) changeLimit++;
        changeLimit += player.additionalTransformationChances;
        //possible use effects:
        //- toughess up, sensitivity down
        if (rand(3) == 0 && changes < changeLimit && MutagenBonus("tou", 1)) {
            outputText("[pg]Your skin feels clammy and a little rubbery.  You touch yourself experimentally and notice that you can barely feel the pressure from your fingertips.  Consumed with curiosity, you punch yourself lightly in the arm; the most you feel is a dull throb!");
            dynStats("sen", -1);
            changes++;
        }
        //- speed down
        if (rand(3) == 0 && changes < changeLimit) {
            outputText("[pg]A pinprick sensation radiates from your stomach down to your knees, as though your legs were falling asleep.  Wobbling slightly, you stand up and take a few stumbling steps to work the blood back into them.  The sensation fades, but your grace fails to return and you stumble again.  You'll have to be a little more careful moving around for a while.");
            changes++;
            player.addCurse("spe", 1, 1);
        }
        //- corruption increases by 1 up to low threshold (~20)
        if (rand(3) == 0 && player.cor < 20 && changes < changeLimit) {
            outputText("[pg]You shiver, a sudden feeling of cold rushing through your extremities.");
            changes++;
            dynStats("cor", 1);
        }
        //-always increases lust by a function of sensitivity
        //"The tingling of the tentacle
        if (player.blockingBodyTransformations()) changeLimit = 0;
        //physical changes:
        //- may randomly remove bee abdomen, if present; always checks and does so when any changes to hair might happen
        if (rand(4) == 0 && changes < changeLimit && player.tailType == Tail.BEE_ABDOMEN) {
            outputText("[pg]As the gentle tingling of the tentacle's remaining venom spreads through your body, it begins to collect and intensify above the crack of your butt.  Looking back, you notice your abdomen shivering and contracting; with a snap, the chitinous appendage parts smoothly from your backside and falls to the ground.  <b>You no longer have a bee abdomen!</b>[pg]");
            transformations.TailNone.applyEffect(false);
            changes++;
        }
        //-may randomly remove bee wings:
        if (rand(4) == 0 && (player.wings.type == Wings.BEE_SMALL || player.wings.type == Wings.BEE_LARGE) && changes < changeLimit) {
            outputText("[pg]");
            transformations.WingsNone.applyEffect();
            changes++;
        }
        //-hair morphs to anemone tentacles, retains color, hair shrinks back to med-short('shaggy') and stops growing, lengthening treatments don't work and goblins won't cut it, but more anemone items can lengthen it one level at a time

        if (player.gills.type == Gills.ANEMONE && transformations.HairAnemone.isPossible() && changes < changeLimit && rand(5) == 0) {
            if (flags[kFLAGS.HAIR_GROWTH_STOPPED_BECAUSE_LIZARD] == 0)
                changes++;
            outputText("[pg]");
            transformations.HairAnemone.applyEffect();
            changes++;
            changes++;
            //(reset hair to 'shaggy', add tentacle hair status, stop hair growth)
            //appearance screen: replace 'hair' with 'tentacle-hair'
        }
        //-feathery gills sprout from chest and drape sensually over nipples (cumulative swimming power boost with fin, if swimming is implemented)
        if (rand(5) == 0 && player.gills.type != Gills.ANEMONE && player.skinColor == "aphotic blue-black" && changes < changeLimit) {
            outputText("[pg]");
            transformations.GillsAnemone.applyEffect();
            changes++;
        }
        //-[aphotic] skin tone (blue-black)
        if (rand(5) == 0 && changes < changeLimit && player.skinColor != "aphotic blue-black") {
            outputText("[pg]You absently bite down on the last of the tentacle, then pull your hand away, wincing in pain.  How did you bite your finger so hard?  Looking down, the answer becomes obvious; <b>your hand, along with the rest of your skin, is now the same aphotic color as the dormant tentacle was!</b>");
            player.skinColor = "aphotic blue-black";
            changes++;
        }
        //-eat more, grow more 'hair':
        if (player.hairType == 4 && player.hairLength < 36 &&
                rand(2) == 0 && changes < changeLimit) {
            var gain:int = 5 + rand(3);
            player.hairLength += gain;
            outputText("[pg]As you laboriously chew the rubbery dried anemone, your head begins to feel heavier.  Using your newfound control, you snake one of your own tentacles forward; holding it out where you can see it, the first thing you notice is that it appears quite a bit longer.  <b>Your head-tentacles are now " + num2Text(gain) + " inches longer!</b>");
            //(add one level of hairlength)
            changes++;
        }
        player.refillHunger(20);
        flags[kFLAGS.TIMES_TRANSFORMED] += changes;
    }

    //ITEMS START

    public function foxTF(enhanced:Boolean, player:Player):void {
        clearOutput();
        if (!enhanced) outputText("You examine the berry a bit, rolling the orangish-red fruit in your hand for a moment before you decide to take the plunge and chow down.  It's tart and sweet at the same time, and the flavors seem to burst across your tongue with potent strength.  Juice runs from the corners of your lips as you finish the tasty snack.");
        else outputText("You pop the cap on the enhanced \"Vixen's Vigor\" and decide to take a swig of it.  Perhaps it will make you as cunning as the crude fox Lumi drew on the front?");
        var changes:int = 0;
        var changeLimit:int = 1;
        if (enhanced) changeLimit += 2;
        if (rand(2) == 0) changeLimit++;
        if (rand(2) == 0) changeLimit++;
        changeLimit += player.additionalTransformationChances;
        //Used for dick and boob TFs
        var counter:int = 0;
        //Foxy Bad end
        if (player.faceType == Face.FOX && player.tailType == Tail.FOX && player.ears.type == Ears.FOX && player.lowerBody == LowerBody.FOX && player.isFurCovered() && !player.hasPerk(PerkLib.TransformationResistance)) {
            if (!player.hasStatusEffect(StatusEffects.TFWarning) || player.getStatusValue(StatusEffects.TFWarning, 1) != Races.FOX.id) {
                player.removeStatusEffect(StatusEffects.TFWarning);
                player.createStatusEffect(StatusEffects.TFWarning, Races.FOX.id, 0, BAD_END_COOLDOWN, 0);
            } else {
                player.changeStatusValue(StatusEffects.TFWarning, 3, BAD_END_COOLDOWN);
                player.addStatusValue(StatusEffects.TFWarning, 2, 1);
                if (player.getStatusValue(StatusEffects.TFWarning, 2) >= 3 && rand(3) == 0) {
                    outputText("[pg]You scarf down the ");
                    if (enhanced) outputText("fluid ");
                    else outputText("berries ");
                    outputText("with an uncommonly voracious appetite, taking particular enjoyment in the succulent, tart flavor.  As you carefully suck the last drops of ochre juice from your fingers, you note that it tastes so much more vibrant than you remember.  Your train of thought is violently interrupted by the sound of bones snapping, and you cry out in pain, doubling over as a flaming heat boils through your ribs.");
                    outputText("[pg]Writhing on the ground, you clutch your hand to your chest, looking on in horror through tear-streaked eyes as the bones in your fingers pop and fuse, rearranging themselves into a dainty paw covered in coarse black fur, fading to a ruddy orange further up.  You desperately try to call out to someone - anyone - for help, but all that comes out is a high-pitched, ear-splitting yap.");
                    if (player.tailCount > 1) outputText("  Your tails thrash around violently as they begin to fuse painfully back into one, the fur bristling back out with a flourish.");
                    outputText("[pg]A sharp spark of pain jolts through your spinal column as the bones shift themselves around, the joints in your hips migrating forward.  You continue to howl in agony even as you feel your intelligence slipping away.  In a way, it's a blessing - as your thoughts grow muddied, the pain is dulled, until you are finally left staring blankly at the sky above, tilting your head curiously.");
                    outputText("[pg]You roll over and crawl free of the [armor] covering you, pawing the ground for a few moments before a pang of hunger rumbles through your stomach.  Sniffing the wind, you bound off into the wilderness, following the telltale scent of a farm toward the certain bounty of a chicken coop.");
                    EventParser.gameOver();
                    return;
                }
                outputText("[pg]You get a massive headache and a craving to raid a henhouse.  Thankfully, both pass in seconds, but <b>maybe you should cut back on the vulpine items...</b>");
            }
        } else player.removeStatusEffect(StatusEffects.TFWarning);
        //[increase Intelligence, Libido and Sensitivity]
        if (changes < changeLimit && rand(3) == 0) {
            outputText("[pg]You close your eyes, smirking mischievously, as you suddenly think of several new tricks to try on your opponents; you feel quite a bit more cunning.  The mental picture of them helpless before your cleverness makes you shudder a bit, and you lick your lips and stroke yourself as you feel your skin tingling from an involuntary arousal.");
            if (MutagenBonus("int", 4) || MutagenBonus("lib", 1))
                changes++; //sounds fair
            if (player.sens < 80) player.addCurse("sen", 1, 1);
            //gain small lust also
            dynStats("lus", 10, "scale", false);
        }
        //[decrease Strength] (to some floor) // I figured 15 was fair, but you're in a better position to judge that than I am.
        if (changes < changeLimit && rand(3) == 0) {
            outputText("[pg]You can feel your muscles softening as they slowly relax, becoming a tad weaker than before.  Who needs physical strength when you can outwit your foes with trickery and mischief?  You tilt your head a bit, wondering where that thought came from.");
            player.addCurse("str", 1, 1);
            if (player.str > 60) player.addCurse("str", 1, 1);
            if (player.str > 80) player.addCurse("str", 1, 1);
            if (player.str > 90) player.addCurse("str", 1, 1);
            changes++;
        }
        //[decrease Toughness] (to some floor) // 20 or so was my thought here
        if (changes < changeLimit && rand(3) == 0) {
            if (player.tou < 60) outputText("[pg]You feel your skin becoming noticeably softer.  A gentle exploratory pinch on your arm confirms it - your supple skin isn't going to offer you much protection.");
            else outputText("[pg]You feel your skin becoming noticeably softer.  A gentle exploratory pinch on your arm confirms it - your hide isn't quite as tough as it used to be.");
            player.addCurse("tou", 1, 1);
            if (player.tou > 60) player.addCurse("tou", 1, 1);
            if (player.tou > 80) player.addCurse("tou", 1, 1);
            if (player.tou > 90) player.addCurse("tou", 1, 1);
            changes++;
        }
		if (player.blockingBodyTransformations()) changeLimit = 0;
        if (!InCollection(player.hairColor, FoxRace.FoxHairColors, KitsuneRace.KitsuneHairColors) && changes < changeLimit && rand(3) == 0) {
            if (player.tailType == Tail.FOX && player.tailCount > 1)
                if (player.tailCount < 9) player.hairColor = randomChoice(KitsuneRace.BasicKitsuneHairColors);
                else player.hairColor = randomChoice(KitsuneRace.ElderKitsuneColors);
            else player.hairColor = randomChoice(FoxRace.FoxHairColors);
            outputText("[pg]Your scalp begins to tingle, and you gently grasp a strand of hair, pulling it out to check it.  Your hair has become [haircolor]!");
            changes++;
        }
        //[Adjust hips toward 10 – wide/curvy/flared]
        if (changes < changeLimit && rand(3) == 0 && player.hips.type != 10) {
            //from narrow to wide
            if (player.hips.type < 10) {
                outputText("[pg]You stumble a bit as the bones in your pelvis rearrange themselves painfully.  Your waistline has widened into [hips]!");
                player.hips.type++;
                if (player.hips.type < 7) player.hips.type++;
            }
            //from wide to narrower
            else {
                outputText("[pg]You stumble a bit as the bones in your pelvis rearrange themselves painfully.  Your waistline has narrowed, becoming [hips].");
                player.hips.type--;
                if (player.hips.type > 15) player.hips.type--;
            }
            changes++;
        }
        //[Remove tentacle hair]
        //required if the hair length change below is triggered
        if (changes < changeLimit && player.hairType == Hair.ANEMONE && rand(3) == 0) {
            //-insert anemone hair removal into them under whatever criteria you like, though hair removal should precede abdomen growth; here's some sample text:
            outputText("[pg]Eerie flames of the jewel migrate up your body to your head, where they cover your [hair].  Though they burned nowhere else in their lazy orbit, your head begins to heat up as they congregate.  Fearful, you raise your hands to it just as the temperature peaks, but as you touch your hair, the searing heat is suddenly gone - along with your tentacles!  <b>Your hair is normal again!</b>");
            outputText("[pg]");
            transformations.HairHuman.applyEffect(false);
            changes++;
        }
        //[Adjust hair length toward range of 16-26 – very long to ass-length]
        if (player.hairType != 4 && (player.hairLength > 26 || player.hairLength < 16) && changes < changeLimit && rand(3) == 0) {
            if (player.hairLength < 16) {
                player.hairLength += 1 + rand(4);
                outputText("[pg]You experience a tingling sensation in your scalp.  Feeling a bit off-balance, you discover your hair has lengthened, becoming " + num2Text(Math.round(player.hairLength)) + " inches long.");
            } else {
                player.hairLength -= 1 + rand(4);
                outputText("[pg]You experience a tingling sensation in your scalp.  Feeling a bit off-balance, you discover your hair has shed a bit of its length, becoming " + num2Text(Math.round(player.hairLength)) + " inches long.");
            }
            changes++;
        }
        if (changes < changeLimit && rand(5) == 0) {
            outputText("[pg]You sigh as the exotic flavor washes through you, and unbidden, you begin to daydream.  Sprinting through the thicket, you can feel the corners of your muzzle curling up into a mischievous grin.  You smell the scent of demons, and not far away either.  With your belly full and throat watered, now is the perfect time for a little bit of trickery.   As the odor intensifies, you slow your playful gait and begin to creep a bit more carefully.");
            outputText("[pg]Suddenly, you are there, at a demonic camp, and you spy the forms of an incubus and a succubus, their bodies locked together at the hips and slowly undulating, even in sleep.  You carefully prance around their slumbering forms and find their supplies.  With the utmost care, you put your razor-sharp teeth to work, and slowly, meticulously rip through their packs - not with the intention of theft, but with mischief.  You make sure to leave small holes in the bottom of each, and after making sure your stealth remains unbroken, you urinate on their hooves.");
            outputText("[pg]They don't even notice, so lost in the subconscious copulation as they are.  Satisfied at your petty tricks, you scurry off into the night, a red blur amidst the foliage.");
            changes++;
            fatigue(-Math.round(player.fatigue * 0.05 * player.postConsumptionMlt()));
        }

        //fox cocks!
        if (changes < changeLimit && rand(3) == 0 && player.foxCocks() < player.cocks.length) {
            var choices:Array = [];
            counter = player.cockTotal();
            while (counter > 0) {
                counter--;
                //Add non-fox locations to the array
                if (!InCollection(player.cocks[counter].cockType, CockTypesEnum.FOX, CockTypesEnum.DOG)) choices[choices.length] = counter;
            }
            if (choices.length != 0) {
                var select:int = choices[rand(choices.length)];
                transformations.CockFox(select).applyEffect();
                changes++;
            }
        }
        //Cum Multiplier Xform
        if (player.cumQ() < 5000 && rand(3) == 0 && changes < changeLimit && player.hasCock()) {
            var mult:int = 2 + rand(4);
            //Lots of cum raises cum multiplier cap to 3 instead of 1.5
            if (player.hasPerk(PerkLib.MessyOrgasms)) mult += rand(20);
            player.cumMultiplier += mult;
            //Flavor text
            if (player.balls == 0) outputText("[pg]You feel a churning inside your gut as something inside you changes.");
            if (player.hasBalls()) outputText("[pg]You feel a churning in your [balls].  It quickly settles, leaving them feeling somewhat more dense.");
            outputText("  A bit of milky pre dribbles from your [cocks], pushed out by the change.");
            changes++;
        }
        if (changes < changeLimit && player.hasBalls() && player.ballSize > 4 && rand(3) == 0) {
            outputText("[pg]Your [sack] gets lighter and lighter, the skin pulling tight around your shrinking balls until you can't help but check yourself.");
            if (player.ballSize > 10) player.ballSize -= 5;
            if (player.ballSize > 20) player.ballSize -= 4;
            if (player.ballSize > 30) player.ballSize -= 4;
            if (player.ballSize > 40) player.ballSize -= 4;
            if (player.ballSize > 50) player.ballSize -= 8;
            if (player.ballSize > 60) player.ballSize -= 8;
            if (player.ballSize <= 10) player.ballSize--;
            changes++;
            outputText("  You now have a [balls].");
        }
        //Sprouting more!
        if (changes < changeLimit && enhanced && player.bRows() < 4 && player.breastRows[player.bRows() - 1].breastRating > 1) {
            outputText("[pg]Your belly rumbles unpleasantly for a second as the drink settles deeper inside you.  A second later, the unpleasant gut-gurgle passes, and you let out a tiny burp of relief.  Before you finish taking a few breaths, something starts happening.  ");
            transformations.CopyBreastRow(true).applyEffect();
            dynStats("lus", 30, "scale", false);
            player.addCurse("sen", 2, 1);
            changes++;
        }
        //Find out if tits are eligible for evening
        var tits:Boolean = false;
        counter = player.bRows();
        while (counter > 1) {
            counter--;
            //If the row above is 1 size above, can be grown!
            if (player.breastRows[counter].breastRating <= (player.breastRows[counter - 1].breastRating - 1) && changes < changeLimit && rand(2) == 0) {
                if (tits) outputText("[pg]They aren't the only pair to go through a change!  Another row of growing bosom goes through the process with its sisters, getting larger.");
                else {
                    var select2:Number = rand(3);
                    if (select2 == 1) outputText("[pg]A faint warmth buzzes to the surface of your " + breastDescript(counter) + ", the fluttering tingles seeming to vibrate faster and faster just underneath your [skin].  Soon, the heat becomes uncomfortable, and that row of chest-flesh begins to feel tight, almost thrumming like a newly-stretched drum.  You " + nippleDescript(counter) + "s go rock hard, and though the discomforting feeling of being stretched fades, the pleasant, warm buzz remains.  It isn't until you cup your tingly tits that you realize they've grown larger, almost in envy of the pair above.");
                    else if (select2 == 2) outputText("[pg]A faintly muffled gurgle emanates from your " + breastDescript(counter) + " for a split-second, just before your flesh shudders and shakes, stretching your " + player.skinFurScales() + " outward with newly grown breast.  Idly, you cup your hands to your swelling bosom, and though it stops soon, you realize that your breasts have grown closer in size to the pair above.");
                    else {
                        outputText("[pg]An uncomfortable stretching sensation spreads its way across the curves of your " + breastDescript(counter) + ", threads of heat tingling through your flesh.  Your heartbeat feels tenfold magnified within the expanding mounds, your [skin] flushed with arousal, and your " + nippleDescript(counter) + " filling with warmth.  As the tingling heat gradually fades, a few more inches of jiggling breast spill forth.  Cupping them experimentally, you confirm that they have indeed grown to be a bit more in line with the size of the pair above.")
                    }
                }
                //Bigger change!
                if (player.breastRows[counter].breastRating <= (player.breastRows[counter - 1].breastRating - 3))
                    player.breastRows[counter].breastRating += 2 + rand(2);
                //Smallish change.
                else player.breastRows[counter].breastRating++;
                outputText("  You do a quick measurement and determine that your " + num2Text2(counter + 1) + " row of breasts are now " + player.breastCup(counter) + "s.");

                if (!tits) {
                    tits = true;
                    changes++;
                }
                dynStats("lus", 10, "scale", false);
                player.addCurse("sen", 2, 1);
            }
        }
        //HEAT!
        if (player.statusEffectv2(StatusEffects.Heat) < 30 && rand(6) == 0 && changes < changeLimit) {
            if (player.goIntoHeat(true)) {
                changes++;
            }
        }
        //[Grow Fur]
        //FOURTH
        if ((enhanced || player.lowerBody == LowerBody.FOX) && !player.isFurCovered() && changes < changeLimit && rand(3) == 0) {
            if (player.racialScore(Races.KITSUNE, false) >= 4)
                if (InCollection(player.hairColor, KitsuneRace.KitsuneFurColors)) {
                    player.furColor = player.hairColor;
                } else if (player.tailType == Tail.FOX && player.tailCount == 9)
                    player.furColor = randomChoice(KitsuneRace.ElderKitsuneColors);
                else
                    player.furColor = randomChoice(KitsuneRace.BasicKitsuneFurColors);
            else {
                player.furColor = randomChoice(FoxRace.FoxFurColors);
            }
            outputText("[pg]");
            transformations.SkinFur().applyEffect();
            changes++;
        }
        //[Grow Fox Legs]
        //THIRD
        if ((enhanced || player.ears.type == Ears.FOX) && player.lowerBody != LowerBody.FOX && changes < changeLimit && rand(3) == 0) {
            outputText("[pg]");
            transformations.LowerBodyFox(2).applyEffect();
            changes++;
        }
        //Grow Fox Arms
        if (changes < changeLimit && player.arms.type != Arms.FOX && rand(3) == 0) {
            outputText("[pg]");
            transformations.ArmsFox.applyEffect();
            changes++;
        }
        //Grow Fox Ears]
        //SECOND
        if ((enhanced || player.tailType == Tail.FOX) && player.ears.type != Ears.FOX && changes < changeLimit && rand(3) == 0) {
            outputText("[pg]");
			transformations.EarsFox.applyEffect();
            changes++;
        }
        //[Grow Fox Tail](fairly common)
        //FIRST
        if (player.tailType != Tail.FOX && changes < changeLimit && rand(3) == 0) {
            outputText("[pg]");
            transformations.TailFox(1).applyEffect();
            changes++;
        }
        //[Grow Fox Face]
        //LAST - muzzlygoodness
        //should work from any face, including other muzzles
        if (player.tailType == Tail.FOX && player.faceType != Face.FOX && changes < changeLimit && rand(3) == 0) {
            outputText("[pg]");
            transformations.FaceFox.applyEffect();
            changes++;
        }
        //Fox Eyes
        if (player.faceType == Face.FOX && player.eyes.type != Eyes.FOX && changes < changeLimit && rand(3) == 0) {
            outputText("[pg]");
            transformations.EyesFox.applyEffect();
            changes++;
        }
        if (player.tone > 40 && changes < changeLimit && rand(3) == 0) {
            outputText("[pg]Moving brings with it a little more jiggle than you're used to.  You don't seem to have gained weight, but your muscles seem less visible, and various parts of you are pleasantly softer.");
            player.tone -= 4;
        }
        //Nipples Turn Back:
        if (transformations.NipplesNoColor.isPossible() && changes < changeLimit && rand(3) == 0) {
            transformations.NipplesNoColor.applyEffect();
            changes++;
        }
        //Debugcunt
        if (changes < changeLimit && rand(3) == 0 && (player.vaginaType() == 5 || player.vaginaType() == 6) && player.hasVagina()) {
            transformations.VaginaHuman().applyEffect();
            changes++;
        }
        if (changes == 0) {
            outputText("[pg]Well that didn't do much, but you do feel a little refreshed!");
            fatigue(-Math.round(50*player.postConsumptionMlt()));
        }
        player.refillHunger(15);
        flags[kFLAGS.TIMES_TRANSFORMED] += changes;
    }
	
	public function desertBerry(player:Player):void {
		clearOutput();
        outputText("You examine the berry a bit, rolling the orange fruit in your hand for a moment before you decide to take the plunge and chow down.  It's tart and sweet at the same time, and the flavors seem to burst across your tongue with potent strength.  Juice runs from the corners of your lips as you finish the tasty snack.");
		var changes:int = 0;
        var changeLimit:int = 1;
        if (rand(2) == 0) changeLimit++;
        if (rand(2) == 0) changeLimit++;
        changeLimit += player.additionalTransformationChances;
		//Used for dick and boob TFs
        var counter:int = 0;
        if (changes < changeLimit && rand(3) == 0) {
            outputText("[pg]You close your eyes, smirking mischievously, as you suddenly think of several new tricks to try on your opponents; you feel quite a bit more cunning.  The mental picture of them helpless before your cleverness makes you shudder a bit, and you lick your lips.");
            if (MutagenBonus("wis", 4)) changes++;
            if (player.sens < 200) player.addCurse("sen", 1, 1);
        }
		if (changes < changeLimit && rand(2) == 0 && MutagenBonus("tou", 4)) {
            if (player.tou < 50)
                outputText("[pg]Your body and skin both thicken noticeably.  You pinch your [skin.type] experimentally and marvel at how much tougher your hide has gotten.");
            else if (player.tou < 100)
                outputText("[pg]You grin as you feel your form getting a little more solid.  It seems like your whole body is toughening up quite nicely, and by the time the sensation goes away, you feel ready to take a hit.");
            else
                outputText("[pg]You snarl happily as you feel yourself getting even tougher.  It's a barely discernible difference, but you can feel your [skin.type] getting tough enough to make you feel invincible.");
            changes++;
        }
		if (rand(3) == 0 && changes < changeLimit && MutagenBonus("spe", 2)) {
            outputText("[pg]You feel fleet and lighter on your toes; you sense you could dodge, dart or skip away from anything.");
            changes++;
        }
        if (changes < changeLimit && rand(5) == 0) {
            outputText("[pg]You sigh as the exotic flavor washes through you, and unbidden, you begin to daydream.  Sprinting through the thicket, you can feel the corners of your muzzle curling up into a mischievous grin.  You smell the scent of demons, and not far away either.  With your belly full and throat watered, now is the perfect time for a little bit of trickery.   As the odor intensifies, you slow your playful gait and begin to creep a bit more carefully.");
            outputText("[pg]Suddenly, you are there, at a demonic camp, and you spy the forms of an incubus and a succubus, their bodies locked together at the hips and slowly undulating, even in sleep.  You carefully prance around their slumbering forms and find their supplies.  With the utmost care, you put your razor-sharp teeth to work, and slowly, meticulously rip through their packs - not with the intention of theft, but with mischief.  You make sure to leave small holes in the bottom of each, and after making sure your stealth remains unbroken, you urinate on their hooves.");
            outputText("[pg]They don't even notice, so lost in the subconscious copulation as they are.  Satisfied at your petty tricks, you scurry off into the night, a red blur amidst the foliage.");
            changes++;
            fatigue(-Math.round(player.fatigue * 0.05 * player.postConsumptionMlt()));
        }
		if (player.blockingBodyTransformations()) changeLimit = 0;
        if (!InCollection(player.hairColor, FoxRace.FoxHairColors) && changes < changeLimit && rand(3) == 0) {
            player.hairColor = randomChoice(FoxRace.FoxHairColors);
            outputText("[pg]Your scalp begins to tingle, and you gently grasp a strand of hair, pulling it out to check it.  Your hair has become [haircolor]!");
            changes++;
        }
		//fox cocks!
        if (changes < changeLimit && rand(3) == 0 && player.foxCocks() < player.cocks.length) {
            var choices:Array = [];
            counter = player.cockTotal();
            while (counter > 0) {
                counter--;
                //Add non-fox locations to the array
                if (!InCollection(player.cocks[counter].cockType, CockTypesEnum.FOX, CockTypesEnum.DOG)) choices[choices.length] = counter;
            }
            if (choices.length != 0) {
                var select:int = choices[rand(choices.length)];
                transformations.CockFox(select).applyEffect();
                changes++;
            }
        }
        //Cum Multiplier Xform
        if (player.cumQ() < 5000 && rand(3) == 0 && changes < changeLimit && player.hasCock()) {
            var mult:int = 2 + rand(4);
            //Lots of cum raises cum multiplier cap to 3 instead of 1.5
            if (player.hasPerk(PerkLib.MessyOrgasms)) mult += rand(20);
            player.cumMultiplier += mult;
            //Flavor text
            if (player.balls == 0) outputText("[pg]You feel a churning inside your gut as something inside you changes.");
            if (player.hasBalls()) outputText("[pg]You feel a churning in your [balls].  It quickly settles, leaving them feeling somewhat more dense.");
            outputText("  A bit of milky pre dribbles from your [cocks], pushed out by the change.");
            changes++;
        }
        if (changes < changeLimit && player.hasBalls() && player.ballSize > 4 && rand(3) == 0) {
            outputText("[pg]Your [sack] gets lighter and lighter, the skin pulling tight around your shrinking balls until you can't help but check yourself.");
            if (player.ballSize > 10) player.ballSize -= 5;
            if (player.ballSize > 20) player.ballSize -= 4;
            if (player.ballSize > 30) player.ballSize -= 4;
            if (player.ballSize > 40) player.ballSize -= 4;
            if (player.ballSize > 50) player.ballSize -= 8;
            if (player.ballSize > 60) player.ballSize -= 8;
            if (player.ballSize <= 10) player.ballSize--;
            changes++;
            outputText("  You now have a [balls].");
        }
		if (!player.isFurCovered() && changes < changeLimit && rand(3) == 0) {
            player.furColor = randomChoice(FoxRace.FoxFurColors);
            outputText("[pg]");
            transformations.SkinFur().applyEffect();
            changes++;
        }
		if (player.lowerBody != LowerBody.FOX && changes < changeLimit && rand(3) == 0) {
            outputText("[pg]");
            transformations.LowerBodyFox(2).applyEffect();
            changes++;
        }
        if (changes < changeLimit && player.arms.type != Arms.FOX && rand(3) == 0) {
            outputText("[pg]");
            transformations.ArmsFox.applyEffect();
            changes++;
        }
		if (player.ears.type != Ears.FENNEC_FOX && changes < changeLimit && rand(3) == 0) {
            outputText("[pg]");
			transformations.EarsFennecFox.applyEffect();
            changes++;
        }
        //[Grow Addtl. Fox Tail]
		var nFoxTails:int = (player.ears.type == Ears.FENNEC_FOX && player.tailType == Tail.FOX) ? player.tailCount : 0;
        //[Grow Addtl. Fox Tail]
        if (nFoxTails == 8 && player.level >= 42 && player.wis >= 240 && changes < changeLimit && rand(2) == 0) {
            outputText("[pg]");
            transformations.TailFox(9).applyEffect();
        }
        if (nFoxTails == 7 && player.level >= 36 && player.wis >= 210 && changes < changeLimit && rand(2) == 0) {
            outputText("[pg]");
            transformations.TailFox(8).applyEffect();
        }
        if (nFoxTails == 6 && player.level >= 30 && player.wis >= 180 && changes < changeLimit && rand(2) == 0) {
            outputText("[pg]");
            transformations.TailFox(7).applyEffect();
        }
        if (nFoxTails == 5 && player.level >= 24 && player.wis >= 150 && changes < changeLimit && rand(2) == 0) {
            outputText("[pg]");
            transformations.TailFox(6).applyEffect();
        }
        if (nFoxTails == 4 && player.level >= 18 && player.wis >= 120 && changes < changeLimit && rand(2) == 0) {
            outputText("[pg]");
            transformations.TailFox(5).applyEffect();
        }
        if (nFoxTails == 3 && player.level >= 12 && player.wis >= 90 && changes < changeLimit && rand(2) == 0) {
            outputText("[pg]");
            transformations.TailFox(4).applyEffect();
        }
        if (nFoxTails == 2 && player.level >= 6 && player.wis >= 60 && changes < changeLimit && rand(2) == 0) {
            outputText("[pg]");
            transformations.TailFox(3).applyEffect();
        }
        if (nFoxTails == 1 && player.wis >= 30 && changes < changeLimit && rand(2) == 0) {
            outputText("[pg]");
            transformations.TailFox(2).applyEffect();
        }
        //[Grow Fox Tail]
        if (player.ears.type == Ears.FENNEC_FOX && player.tailType != Tail.FOX && changes < changeLimit && rand(3) == 0) {
            outputText("[pg]");
            transformations.TailFox(1).applyEffect();
        }
		//
		if (player.faceType != Face.FOX_FANGS && changes < changeLimit && rand(3) == 0) {
            outputText("[pg]");
            transformations.FaceFoxFangs.applyEffect();
            changes++;
        }
		if (player.faceType == Face.FOX_FANGS && player.eyes.type != Eyes.FERAL && changes < changeLimit && rand(3) == 0) {
            outputText("[pg]");
            transformations.EyesFeral.applyEffect();
            changes++;
        }
        if (player.rearBody.type != RearBody.WOLF_COLLAR && changes < changeLimit && rand(3) == 0) {
            outputText("[pg]");
            transformations.RearBodyWolfCollar.applyEffect();
            changes++;
        }
        if (player.ears.type == Ears.FENNEC_FOX && player.faceType == Face.FOX_FANGS && player.eyes.type == Eyes.FERAL && !player.hasPerk(PerkLib.Vulpesthropy) && changes < changeLimit) {
            outputText("[pg]Scarcely audible sounds of slumber shuffle distantly around you before being followed by mischevious laughter. At the corner of your eye, you spot some subtle movement before you notice a figure clad in white adornments with a face paler than snow. Her smiling face beckons you forth as she points above herself. ");
            outputText("You watch as glowing orbs she gestured toward shift as they gradually sharpen into a clearer figure, resembling the eyes of a large beast before a second pair of eyes open.");
            outputText("[pg]\"<i>Open your eyes, newborn, and gaze upon the world. Do not look with your eyes, but open your mind so that it may marvel at the beauty of the world you're already living in. Feel it pulsate, constantly changing and grab it... Grab it to make it yours. Weave it into any form you want. One day, the White-Faced One and The One That Sleeps Below shall lay waste to this world, and until then: Learn, adapt, survive until our return.</i>\"");
			outputText("[pg]With her last words, your vision starts to blur before you awaken from your intruded slumber. Your world seems to quake and tremor as you fall back into yourself, landing flat onto the earth below you. As the tremors fade, you feel... strange... different. Something has changed within you.");
            outputText("[pg]<b>(Gained Perk: Vulpesthropy</b>)");
			var ngM:Number = (player.newGamePlusMod() + 1);
			var bonusStats:Number = 0;
			if (flags[kFLAGS.LUNA_MOON_CYCLE] == 3 || flags[kFLAGS.LUNA_MOON_CYCLE] == 5) bonusStats += 10;
			if (flags[kFLAGS.LUNA_MOON_CYCLE] == 2 || flags[kFLAGS.LUNA_MOON_CYCLE] == 6) bonusStats += 20;
			if (flags[kFLAGS.LUNA_MOON_CYCLE] == 1 || flags[kFLAGS.LUNA_MOON_CYCLE] == 7) bonusStats += 30;
			if (flags[kFLAGS.LUNA_MOON_CYCLE] == 8) bonusStats += 40;
			if (player.hasPerk(PerkLib.VulpesthropyDormant)) player.removePerk(PerkLib.VulpesthropyDormant);
            player.createPerk(PerkLib.Vulpesthropy, 0, 0, 0, 0);
			if (player.hasPerk(PerkLib.Lycanthropy)) {
				player.createPerk(PerkLib.LycanthropyDormant,0,0,0,0);
				player.removePerk(PerkLib.Lycanthropy);
			}
			if (player.hasPerk(PerkLib.Selachimorphanthropy)) {
				player.createPerk(PerkLib.SelachimorphanthropyDormant,0,0,0,0);
				player.removePerk(PerkLib.Selachimorphanthropy);
			}
			player.createStatusEffect(StatusEffects.HumanForm,1,0,0,0);
			player.statStore.replaceBuffObject({ 'str.mult': bonusStats*0.01*ngM,'tou.mult': bonusStats*0.1*ngM,'spe.mult': bonusStats*0.04*ngM, 'minlustx': bonusStats * 0.005}, 'Vulpesthropy', { text: 'Vulpesthropy'});
			player.trainStat('str', +5, 100);
			player.trainStat('tou', +5, 100);
			player.trainStat('spe', +5, 100);
			player.trainStat('wis', +5, 100);
            changes++;
        }
        if (changes == 0) {
            outputText("[pg]Well that didn't do much, but you do feel a little refreshed!");
            fatigue(-Math.round(50*player.postConsumptionMlt()));
        }
        player.refillHunger(15);
        flags[kFLAGS.TIMES_TRANSFORMED] += changes;
	}

    public function rubycrystal(player:Player):void {
        player.slimeFeed();
        //init variables
        var changes:Number = 0;
        var changeLimit:Number = 2;
        var temp2:Number = 0;
        //Randomly choose affects limit
        if (rand(2) == 0) changeLimit++;
        if (rand(2) == 0) changeLimit++;
        if (rand(2) == 0) changeLimit++;
        changeLimit += player.additionalTransformationChances;
        //clear screen
        clearOutput();
        outputText("You examine the jewel for a bit, rolling it around in your hand as you ponder its mysteries.  You hold it up to the light with fascinated curiosity, watching the eerie red fluid swirling within.  Without warning, the gem splits into four pieces, dissolving into nothing in your hand.  Liquid from within quickly seeps into your skin leaving you a bit tipsy.");
		DrunkenPowerEmpowerIfPossible();
		AelfwineEmpowerIfPossible();
        //Statistical changes:
		//-Reduces speed down to 70.
        if (player.spe > 70 && changes < changeLimit && rand(2) == 0) {
            outputText("[pg]You start to feel sluggish.  Lying down and enjoying liquor your skin absorbed might make you feel better.");
            player.addCurse("spe", 1, 1);
            changes++;
        }
        //-Increase intelligence
        if (player.inte > 60 && changes < changeLimit && rand(2) == 0) {
            outputText("[pg]You close your eyes, smirking mischievously, as you suddenly think of several new tricks to try on your opponents; you feel quite a bit more cunning.  The mental image of them helpless before your cleverness makes you shudder a bit, and you lick your lips and stroke yourself as you feel your skin tingling from an involuntary arousal.");
            //Raise INT, WIS, Lib, Sens. and +10 LUST
            dynStats("sen", 1, "lus", 10);
            MutagenBonus("int", 1);
            MutagenBonus("wis", 1);
            MutagenBonus("lib", 1);
            changes++;
        }
        //-Raises libido up to 90.
        if (changes < changeLimit && rand(2) == 0) {
            outputText("[pg]A knot of fire in your gut doubles you over but passes after a few moments.  As you straighten you can feel the heat seeping into you, ");
            //(DICK)
            if (player.cocks.length > 0 && (player.gender != 3 || rand(2) == 0)) {
                outputText("filling ");
                if (player.cocks.length > 1) outputText("each of ");
                outputText("your [cocks] with the desire to breed.  You get a bit hornier when you realize your sex-drive has gotten a boost.");
            }
            //(COOCH)
            else if (player.hasVagina()) outputText("puddling in your [vagina].  An instinctive desire to mate spreads through you, increasing your lust and boosting your sex-drive.");
            //(TARDS)
            else outputText("puddling in your featureless crotch for a split-second before it slides into your [ass].  You want to be fucked, filled, and perhaps even gain a proper gender again.  Through the lust you realize your sex-drive has been permanently increased.");
            if (MutagenBonus("lib", 2))
                changes++; //only if really changed, but doesn't lock the scene
        }
        //-Raises toughness
        if (changes < changeLimit && rand(2) == 0 && MutagenBonus("tou", 2)) {
            if (player.tou < 40)
                outputText("[pg]Your body and skin both thicken noticeably.  You pinch your [skin.type] experimentally and marvel at how much tougher your hide has gotten.");
            else if (player.tou < 55)
                outputText("[pg]You grin as you feel your form getting a little more solid.  It seems like your whole body is toughening up quite nicely, and by the time the sensation goes away, you feel ready to take a hit.");
            else
                outputText("[pg]You snarl happily as you feel yourself getting even tougher.  It's a barely discernible difference, but you can feel your [skin.type] getting tough enough to make you feel invincible.");
            changes++;
        }
        //-Raises strength to 80.
        if (rand(2) == 0 && changes < changeLimit && MutagenBonus("str", 1)) {
            outputText("[pg]While heat builds in your muscles, their already-potent mass shifting slightly as they gain even more strength than before.");
            changes++;
        }
        if (player.blockingBodyTransformations()) changeLimit = 0;
        //Sexual Changes:
        //-Lizard dick - first one
        if (player.lizardCocks() == 0 && player.cockTotal() > 0 && changes < changeLimit && rand(2) == 0) {
            //Find the first non-lizzy dick
            for (temp2 = 0; temp2 < player.cocks.length && player.cocks[temp2].cockType == CockTypesEnum.LIZARD; temp2++) { }
            transformations.CockLizard(temp2).applyEffect();
            changes++;
            dynStats("lus", 10, "scale", false);
            MutagenBonus("lib", 3);
        }
        //(CHANGE OTHER DICK)
        //Requires 1 lizard cock, multiple cocks
        if (player.lizardCocks() > 0 && player.cockTotal() > player.lizardCocks() && rand(2) == 0 && changes < changeLimit) {
            transformations.CockLizard(player.findCockNotIn([CockTypesEnum.LIZARD])).applyEffect();
            changes++;
            dynStats("lus", 10, "scale", false);
            MutagenBonus("lib", 3);
        }
        //-Breasts vanish to 0 rating if male
        if (player.biggestTitSize() >= 1 && player.gender == 1 && changes < changeLimit && rand(2) == 0) {
            //(HUEG)
            if (player.biggestTitSize() > 8) {
                outputText("[pg]The flesh on your chest tightens up, losing nearly half its mass in the span of a few seconds.  With your center of balance shifted so suddenly, you stagger about trying not to fall on your ass.  You catch yourself and marvel at the massive change in breast size.");
                //Half tit size
            }
            //(NOT HUEG < 4)
            else outputText("[pg]In an instant, your chest compacts in on itself, consuming every ounce of breast-flesh.  You're left with a  smooth, masculine torso, though your nipples remain.");
            //(BOTH – no new PG)
            outputText("  With the change in weight and gravity, you find it's gotten much easier to move about.");
            //Loop through behind the scenes and adjust all tits.
            for (temp2 = 0; temp2 < player.breastRows.length; temp2++) {
                if (player.breastRows[temp2].breastRating > 8) player.breastRows[temp2].breastRating /= 2;
                else player.breastRows[temp2].breastRating = 0;
            }
            //(+2 speed)
            MutagenBonus("lib", 2);
            changes++;
        }
        //-Nipples reduction to 1 per tit.
        if (player.averageNipplesPerBreast() > 1 && changes < changeLimit && rand(2) == 0) {
            transformations.NipplesPerBreastOne.applyEffect();
            changes++;
        }
        //Increase player's breast size, if they are big EE or smaller
        if (player.smallestTitSize() <= 9 && player.gender == 2 && changes < changeLimit && rand(2) == 0) {
            outputText("[pg]After absorbing it, your chest aches and tingles, and your hands reach up to scratch at it unthinkingly.  Silently, you hope that you aren't allergic to it.  Just as you start to scratch at your " + breastDescript(player.smallestTitRow()) + ", your chest pushes out in slight but sudden growth.");
            player.breastRows[player.smallestTitRow()].breastRating++;
            changes++;
        }
        //Physical changes:
        //Tail - unlocks enhanced with fire tail whip attack
		var nCinderFoxTails:int = (player.ears.type == Ears.FOX && player.tailType == Tail.KITSHOO) ? player.tailCount : 0;
        //[Grow Addtl. Cinder Fox Tail]
        if (nCinderFoxTails == 8 && player.level >= 42 && player.inte >= 120 && player.wis >= 120 && changes < changeLimit && rand(2) == 0) {
            outputText("[pg]");
            transformations.TailKitshoo(9).applyEffect();
        }
        if (nCinderFoxTails == 7 && player.level >= 36 && player.inte >= 105 && player.wis >= 105 && changes < changeLimit && rand(2) == 0) {
            outputText("[pg]");
            transformations.TailKitshoo(8).applyEffect();
        }
        if (nCinderFoxTails == 6 && player.level >= 30 && player.inte >= 90 && player.wis >= 90 && changes < changeLimit && rand(2) == 0) {
            outputText("[pg]");
            transformations.TailKitshoo(7).applyEffect();
        }
        if (nCinderFoxTails == 5 && player.level >= 24 && player.inte >= 75 && player.wis >= 75 && changes < changeLimit && rand(2) == 0) {
            outputText("[pg]");
            transformations.TailKitshoo(6).applyEffect();
        }
        if (nCinderFoxTails == 4 && player.level >= 18 && player.inte >= 60 && player.wis >= 60 && changes < changeLimit && rand(2) == 0) {
            outputText("[pg]");
            transformations.TailKitshoo(5).applyEffect();
        }
        if (nCinderFoxTails == 3 && player.level >= 12 && player.inte >= 45 && player.wis >= 45 && changes < changeLimit && rand(2) == 0) {
            outputText("[pg]");
            transformations.TailKitshoo(4).applyEffect();
        }
        if (nCinderFoxTails == 2 && player.level >= 6 && player.inte >= 30 && player.wis >= 30 && changes < changeLimit && rand(2) == 0) {
            outputText("[pg]");
            transformations.TailKitshoo(3).applyEffect();
        }
        if (nCinderFoxTails == 1 && player.inte >= 15 && player.wis >= 15 && changes < changeLimit && rand(2) == 0) {
            outputText("[pg]");
            transformations.TailKitshoo(2).applyEffect();
        }
        //[Grow Cinder Fox Tail]
        if (player.tailType != Tail.KITSHOO && changes < changeLimit && rand(2) == 0) {
            outputText("[pg]");
            transformations.TailKitshoo(1).applyEffect();
        }
        //Legs
        if (player.lowerBody != LowerBody.SALAMANDER && player.tailType == Tail.KITSHOO && changes < changeLimit && rand(2) == 0) {
            outputText("[pg]");
            transformations.LowerBodySalamander(2).applyEffect();
            changes++;
        }
        //Arms
        if (player.arms.type != Arms.SALAMANDER && player.lowerBody == LowerBody.SALAMANDER && changes < changeLimit && rand(2) == 0) {
            outputText("[pg]");
            transformations.ArmsSalamander.applyEffect();
            changes++;
        }
        //Fox eyes
        if (changes < changeLimit && rand(2) == 0 && transformations.EyesHuman.isPresent()) {
            transformations.EyesFox.applyEffect();
            changes++;
        }
        //Remove odd eyes
        if (changes < changeLimit && rand(2) == 0 && player.eyes.type > Eyes.HUMAN && player.eyes.type != Eyes.FOX) {
            outputText("[pg]");
            transformations.EyesHuman.applyEffect();
            changes++;
        }
        //Fanged face
        if (player.faceType == Face.HUMAN && player.faceType != Face.SALAMANDER_FANGS && changes < changeLimit && rand(2) == 0) {
            outputText("[pg]");
            transformations.FaceSalamanderFangs.applyEffect();
            changes++;
        }
        if (player.faceType != Face.HUMAN && player.faceType != Face.SALAMANDER_FANGS && changes < changeLimit && rand(2) == 0) {
            outputText("[pg]");
            transformations.FaceHuman.applyEffect();
            changes++;
        }
        //Fox ears
        if (player.faceType == Face.SALAMANDER_FANGS && player.ears.type != Ears.FOX && changes < changeLimit && rand(2) == 0) {
            outputText("[pg]");
            transformations.EarsFox.applyEffect();
            changes++;
        }
        //Tattoo
        if (player.hasPlainSkinOnly() && !player.skin.hasMagicalTattoo() && rand(2) == 0 && changes < changeLimit) {
            outputText("[pg]");
            transformations.SkinPatternKitsune.applyEffect();
            changes++;
        }
        //Plain skin
        if (!player.hasPlainSkinOnly() && rand(2) == 0 && changes < changeLimit) {
            outputText("[pg]");
            transformations.SkinPlain.applyEffect();
            changes++;
        }
        if (!InCollection(player.hairColor, KitshooRace.KitshooHairColors) && changes < changeLimit && rand(2) == 0) {
            player.hairColor = randomChoice(KitshooRace.KitshooHairColors);
            outputText("[pg]Your scalp begins to tingle, and you gently grasp a strand, pulling it forward to check it.  Your hair has become the same [haircolor] as a kitsumori!");
            changes++;
        }
		//Scales & Fur color
        if ((player.arms.type == Arms.SALAMANDER || player.lowerBody == LowerBody.SALAMANDER) && !InCollection(player.scaleColor, KitshooRace.KitshooScaleColors) && changes < changeLimit && rand(2) == 0) {
            player.scaleColor = randomChoice(KitshooRace.KitshooScaleColors);
            outputText("[pg]Woa! Your scales suddenly changed color to <b>[scale color]</b>!");
            changes++;
        }
        if (player.tailType == Tail.KITSHOO && !InCollection(player.furColor, KitshooRace.KitshooFurColors) && changes < changeLimit && rand(2) == 0) {
            player.furColor = randomChoice(KitshooRace.KitshooScaleColors);
            outputText("[pg]Woa! Your fur suddenly changed color to <b>[fur color]</b>!");
            changes++;
        }
        //Removing gills
        if (rand(2) == 0 && player.hasGills() && changes < changeLimit) {
            outputText("[pg]");
            transformations.GillsNone.applyEffect();
            changes++;
        }
        //FAILSAFE CHANGE
        if (changes == 0) {
            outputText("[pg]Inhuman vitality spreads through your body, invigorating you!\n");
            HPChange((100*player.postConsumptionMlt()), true);
            dynStats("lus", Math.round(5*player.postConsumptionMlt()), "scale", false);
        }
        player.refillHunger(10);
        flags[kFLAGS.TIMES_TRANSFORMED] += changes;
    }

    public function godMead(player:Player):void {
        player.slimeFeed();
        clearOutput();
        outputText("You take a hearty swig of mead, savoring the honeyed taste on your tongue.  Emboldened by the first drink, you chug the remainder of the horns's contents in no time flat.  You wipe your lips, satisfied, and let off a small belch as you toss the empty horns aside.  ");

        //Libido: No desc., always increases.
        //Corruption: No desc., always decreases.
        dynStats("cor", -2);
        MutagenBonus("lib", 2);
        //Health/HP(Large increase; always occurs):
        outputText("[pg]You feel suddenly invigorated by the potent beverage, like you could take on a whole horde of barbarians or giants and come out victorious! ");
        HPChange(Math.round(player.maxHP() * .25 * player.postConsumptionMlt()), true);
        if (rand(3) == 0) {
            outputText("[pg]The alcohol fills your limbs with vigor, making you feel like you could take on the world with just your fists!");
            if (silly()) outputText("  Maybe you should run around shirtless, drink, and fight!  Saxton Hale would be proud.");
            MutagenBonus("str", 2);
        }
        //Tough:
        else {
            outputText("[pg]You thump your chest and grin - your foes will have a harder time taking you down while you're fortified by liquid courage.");
            MutagenBonus("tou", 2);
        }
        //Grow Beard [ONLY if PC has a masculine face & a dick.)( -- Why? Bearded ladies are also a fetish [That's just nasty.] (I want a lady beard)): A sudden tingling runs along your chin. You rub it with your hand, and find a thin layer of bristles covering your lower face. You now sport a fine [player.HairColor] beard!
        if (rand(6) == 0 && player.beardLength < 4) {
            if (player.beardLength <= 0) outputText("A sudden tingling runs along your chin. You rub it with your hand, and find a thin layer of bristles covering your lower face. <b>You now sport a fine [haircolor] beard!</b>");
            else outputText("[pg]A sudden tingling runs along your chin. You stroke your beard proudly as it slowly grows in length and lustre.");
            player.beardLength += 0.5;
        }
        //Grow hair: Your scalp is beset by pins and needles as your hair grows out, stopping after it reaches [medium/long] length.}
		DrunkenPowerEmpowerIfPossible();
		AelfwineEmpowerIfPossible();
        player.refillHunger(20);
    }

    public function proMead(player:Player):void {
        clearOutput();
        outputText("You take a hearty swig of mead, savoring the honeyed taste on your tongue.  Emboldened by the first drink, you chug the remainder of the horns's contents in no time flat.  You wipe your lips, satisfied, and let off a small belch as you toss the empty horns aside.");

        //Libido: No desc., always increases.
        //Corruption: No desc., always decreases.
        dynStats("cor", -10);
        MutagenBonus("lib", 10);
        //Health/HP(Large increase; always occurs):
        outputText("[pg]You feel suddenly invigorated by the potent beverage, like you could take on a whole horde of barbarians or giants and come out victorious!");
        HPChange(Math.round(player.maxOverHP()), false);
        dynStats("lus=", Math.round((50 + rand(16))*player.postConsumptionMlt()));
        if (rand(3) == 0) {
            outputText("[pg]The alcohol fills your limbs with vigor, making you feel like you could take on the world with just your fists!");
            if (silly()) outputText("  Maybe you should run around shirtless, drink, and fight!  Saxton Hale would be proud.");
            MutagenBonus("str", 10);
        }
        //Tough:
        else {
            outputText("[pg]You thump your chest and grin - your foes will have a harder time taking you down while you're fortified by liquid courage.");
            MutagenBonus("tou", 10);
        }
        //Grow Beard [ONLY if PC has a masculine face & a dick.)( -- Why? Bearded ladies are also a fetish [That's just nasty.] (I want a lady beard)): A sudden tingling runs along your chin. You rub it with your hand, and find a thin layer of bristles covering your lower face. You now sport a fine [player.HairColor] beard!
        if (rand(6) == 0 && player.beardLength < 6) {
            if (player.beardLength <= 0) outputText("A sudden tingling runs along your chin. You rub it with your hand, and find a thin layer of bristles covering your lower face. <b>You now sport a fine [haircolor] beard!</b>");
            else outputText("[pg]A sudden tingling runs along your chin. You stroke your beard proudly as it slowly grows in length and lustre.");
            player.beardLength += 0.5;
        }
        //Grow hair: Your scalp is beset by pins and needles as your hair grows out, stopping after it reaches [medium/long] length.}
		DrunkenPowerEmpowerIfPossible();
		AelfwineEmpowerIfPossible();
        player.refillHunger(80);
    }

    public function zenjiHunt(player:Player):void {
        player.slimeFeed();
        clearOutput();
        outputText("You unwrap the food before eating the piece of meat Zenji gave to you. The meat is well done, presumably to make sure that it’s not contaminated, despite this it’s not as chewy as you thought it would be. It has a pleasant savory taste and you finish the delectable morsel rather quickly.  ");
		//Health/HP(Large increase; always occurs):
        HPChange(Math.round(player.maxHP() * (.25*player.postConsumptionMlt())), true);
        player.refillHunger(45);
    }

    public function sheepMilk(player:Player):void {
        player.slimeFeed();
        clearOutput();
        outputText("You gulp the bottle's contents, and its sweet taste immediately invigorates you, making you feel calm and concentrated");
        //-60 fatigue, -2 libido, -20 lust]
        fatigue(-(Math.round(((player.maxOverFatigue() * 0.05) + 180)*player.postConsumptionMlt())));
        dynStats("lus", -(Math.round(((player.maxLust() * 0.05) + 90)*player.postConsumptionMlt())), "cor", -2);
        player.addCurse("lib", 2, 1);
		if (player.perkv1(IMutationsLib.DisplacerMetabolismIM) >= 1) player.displacerFeedFromBottle();
        player.refillHunger(40);
    }

    public function springWater(player:Player):void {
        player.slimeFeed();
        clearOutput();
        outputText("The water is cool and sweet to the taste, and every swallow makes you feel calmer, cleaner, and refreshed.  You drink until your thirst is quenched, feeling purer in both mind and body. ");
        //-30 fatigue, -2 libido, -10 lust]
        fatigue(-(Math.round(((player.maxOverFatigue() * 0.02) + 40)*player.postConsumptionMlt())));
        dynStats("lus", -(Math.round(((player.maxLust() * 0.06) + 100)*player.postConsumptionMlt())), "cor", (-4 - rand(3)));
        player.addCurse("lib", 2, 1);
        HPChange(((100 + (10 * player.level) + rand(10 * player.level))*player.postConsumptionMlt()), true);
        player.refillHunger(30);
        if (player.cor > 50) dynStats("cor", -2);
        if (player.cor > 75) dynStats("cor", -2);
    }

    //Item: Dragon Egg (Z) (FEN CODED TO HERE - OR AT LEAST COPIED INTO THE CODE FOR FUTURE CODING)
    //Itemdescription - "A large, solid egg, easily the size of your clenched fist.  Its shell color is reddish-white, with blue splotches."
    public function eatEmberEgg(player:Player):void {
        clearOutput();
        //Effect:
        //Boosts the special effect of Dragonbreath by 20% for 1 use. ie: if Tainted's breath weapon has a 80% chance to stun on hit, +20% equals 100% chance to stun.
        outputText("You crack the shell easily and swallow the large yolk and the copious amounts of albumen - the yolk is blue, while the rest is crimson-tinted.  It tastes like... well, it tastes mostly of spiced mint, you think.");
        if (player.hasPerk(PerkLib.DragonFireBreath) || player.hasPerk(PerkLib.DragonIceBreath) || player.hasPerk(PerkLib.DragonLightningBreath) || player.hasPerk(PerkLib.DragonDarknessBreath)) {
            var changes:int = 0;
            var changeLimit:int = 1;
            if (!player.hasStatusEffect(StatusEffects.DragonFireBreathCooldown) && !player.hasStatusEffect(StatusEffects.DragonIceBreathCooldown) && !player.hasStatusEffect(StatusEffects.DragonLightningBreathCooldown) && !player.hasStatusEffect(StatusEffects.DragonDarknessBreathCooldown) && !player.hasStatusEffect(StatusEffects.DragonBreathCooldown) && !player.hasStatusEffect(StatusEffects.DragonBreathBoost) && changes < changeLimit) {
                player.createStatusEffect(StatusEffects.DragonBreathBoost, 0, 0, 0, 0);
                changes++;
            }
            if (player.hasStatusEffect(StatusEffects.DragonFireBreathCooldown) && changes < changeLimit) {
                player.removeStatusEffect(StatusEffects.DragonFireBreathCooldown);
                changes++;
            }
            if (player.hasStatusEffect(StatusEffects.DragonIceBreathCooldown) && changes < changeLimit) {
                player.removeStatusEffect(StatusEffects.DragonIceBreathCooldown);
                changes++;
            }
            if (player.hasStatusEffect(StatusEffects.DragonLightningBreathCooldown) && changes < changeLimit) {
                player.removeStatusEffect(StatusEffects.DragonLightningBreathCooldown);
                changes++;
            }
            if (player.hasStatusEffect(StatusEffects.DragonDarknessBreathCooldown) && changes < changeLimit) {
                player.removeStatusEffect(StatusEffects.DragonDarknessBreathCooldown);
                changes++;
            }
            if (player.hasStatusEffect(StatusEffects.DragonBreathCooldown) && changes < changeLimit) {
                player.removeStatusEffect(StatusEffects.DragonBreathCooldown);
                changes++;
            }
            outputText("[pg]A sudden surge of energy fills your being and you feel like you could blast anything to atoms with a single breath, like the mighty dragons of legends.");
        }
        fatigue(-Math.round(20*player.postConsumptionMlt()));
        player.refillHunger(50);
    }

    //Inventory Description:
    //9999A shining teardrop-shaped jewel.  An eerie blue flame dances beneath the surface.
    //Fox Jewel (Magatama)

    //Consume:
    public function foxJewel(mystic:Boolean, player:Player):void {
        clearOutput();
        mutationStart("foxJewel" + (mystic ? "M" : ""), 3);
        if (mystic) changeLimit += 2;
        if (mystic) outputText("You examine the jewel for a bit, rolling it around in your hand as you ponder its mysteries.  You hold it up to the light with fascinated curiosity, watching the eerie purple flame dancing within.  Without warning, the gem splits down the center, dissolving into nothing in your hand.  As the pale lavender flames swirl around you, the air is filled with a sickly sweet scent that drips with the bitter aroma of licorice, filling you with a dire warmth.");
        else outputText("You examine the jewel for a bit, rolling it around in your hand as you ponder its mysteries.  You hold it up to the light with fascinated curiosity, watching the eerie blue flame dancing within.  Without warning, the gem splits down the center, dissolving into nothing in your hand.  As the pale azure flames swirl around you, the air is filled with a sweet scent that drips with the aroma of wintergreen, sending chills down your spine.");

        //**********************
        //BASIC STATS
        //**********************
        //[increase Intelligence, Libido and Sensitivity]
        mutationStep(1 == 1, mystic ? 2 : 4, function ():void {
            outputText("[pg]You close your eyes, smirking mischievously, as you suddenly think of several new tricks to try on your opponents; you feel quite a bit more cunning.  The mental image of them helpless before your cleverness makes you shudder a bit, and you lick your lips and stroke yourself as you feel your skin tingling from an involuntary arousal.");
            //Raise INT, WIS, Lib, Sens. and +10 LUST
            dynStats("sen", 1, "lus", 10);
            MutagenBonus("int", 1);
            MutagenBonus("wis", 1);
            MutagenBonus("lib", 1);
        });
        //[decrease Strength toward 15]
        mutationStep(player.str > 15, mystic ? 2 : 3, function ():void {
            outputText("[pg]You can feel your muscles softening as they slowly relax, becoming a tad weaker than before.  Who needs physical strength when you can outwit your foes with trickery and mischief?  You tilt your head a bit, wondering where that thought came from.");
            player.addCurse("str", 1, 1);
            if (player.str > 70) player.addCurse("str", 1, 1);
            if (player.str > 50) player.addCurse("str", 1, 1);
            if (player.str > 30) player.addCurse("str", 1, 1);
        });
        //[decrease Toughness toward 20]
        mutationStep(player.tou > 20, mystic ? 2 : 3, function ():void {
            //from 66 or less toughness
            if (player.tou <= 66) outputText("[pg]You feel your " + player.skinFurScales() + " becoming noticeably softer.  A gentle exploratory pinch on your arm confirms it - your " + player.skinFurScales() + " won't offer you much protection.");
            //from 66 or greater toughness
            else outputText("[pg]You feel your " + player.skinFurScales() + " becoming noticeably softer.  A gentle exploratory pinch on your arm confirms it - your hide isn't quite as tough as it used to be.");
            player.addCurse("tou", 1, 1);
            if (player.tou > 66) player.addCurse("tou", 1, 1);
        });
        mutationStep(mystic && player.cor < 100, 2, function ():void {
            if (player.cor < 33) outputText("[pg]A sense of dirtiness comes over you, like the magic of this gem is doing some perverse impropriety to you.");
            else if (player.cor < 66) outputText("[pg]A tingling wave of sensation rolls through you, but you have no idea what exactly just changed.  It must not have been that important.");
            else outputText("[pg]Thoughts of mischief roll across your consciousness, unbounded by your conscience or any concern for others.  You should really have some fun - who cares who it hurts, right?");
            dynStats("cor", 1);
        });
		if (player.blockingBodyTransformations()) changeLimit = 0;


        //**********************
        //MEDIUM/SEXUAL CHANGES
        //**********************
        //[adjust Femininity toward 50]
        //from low to high
        //Your facial features soften as your body becomes more androgynous.
        //from high to low
        //Your facial features harden as your body becomes more androgynous.
        mutationStep(player.femininity != 50, mystic ? 2 : 4, function ():void {
            outputText(player.modFem(50, 2));
        });
        //[decrease muscle tone toward 40]
        mutationStep(player.tone >= 40, mystic ? 2 : 4, function ():void {
            outputText("[pg]Moving brings with it a little more jiggle than you're used to.  You don't seem to have gained weight, but your muscles seem less visible, and various parts of you are pleasantly softer.");
            player.tone -= 2 + rand(3);
        });

        //[Adjust hips toward 10 – wide/curvy/flared]
        //from narrow to wide
        mutationStep(player.hips.type < 10, mystic ? 2 : 3, function ():void {
            player.hips.type++;
            if (player.hips.type < 7) player.hips.type++;
            if (player.hips.type < 4) player.hips.type++;
            outputText("[pg]You stumble a bit as the bones in your pelvis rearrange themselves painfully.  Your hips have widened nicely!");
        });
        //from wide to narrower
        mutationStep(player.hips.type > 10, mystic ? 2 : 3, function ():void {
            player.hips.type--;
            if (player.hips.type > 14) player.hips.type--;
            if (player.hips.type > 19) player.hips.type--;
            if (player.hips.type > 24) player.hips.type--;
            outputText("[pg]You stumble a bit as the bones in your pelvis rearrange themselves painfully.  Your hips have narrowed.");
        });

        //[Adjust hair length toward range of 16-26 – very long to ass-length]
        mutationStep((player.hairLength < 16 || player.hairLength > 26), mystic ? 2 : 3, function ():void {
            //from short to long
            if (player.hairLength < 16) {
                player.hairLength += 3 + rand(3);
                outputText("[pg]You experience a tingling sensation in your scalp.  Feeling a bit off-balance, you discover your hair has lengthened, becoming [hair].");
            }
            //from long to short
            else {
                player.hairLength -= 3 + rand(3);
                outputText("[pg]You experience a tingling sensation in your scalp.  Feeling a bit off-balance, you discover your hair has shed a bit of its length, becoming [hair].");
            }
        });
        //[Increase Vaginal Capacity] - requires vagina, of course
        mutationStep(player.hasVagina() && player.statusEffectv1(StatusEffects.BonusVCapacity) < 200, mystic ? 2 : 3, function ():void {
            outputText("[pg]A gurgling sound issues from your abdomen, and you double over as a trembling ripple passes through your womb.  The flesh of your stomach roils as your internal organs begin to shift, and when the sensation finally passes, you are instinctively aware that your [vagina] is a bit deeper than it was before.");
            if (!player.hasStatusEffect(StatusEffects.BonusVCapacity)) {
                player.createStatusEffect(StatusEffects.BonusVCapacity, 0, 0, 0, 0);
            }
            player.addStatusValue(StatusEffects.BonusVCapacity, 1, 5 + rand(10));
        });


        //**********************
        //BIG APPEARANCE CHANGES
        //**********************
        //[Grow Fox Tail]
        mutationStep(player.tailType != Tail.FOX, mystic ? 2 : 4, function ():void {
            outputText("[pg]");
            transformations.TailFox(1).applyEffect();
        });
        var nFoxTails:int = (player.ears.type == Ears.FOX && player.tailType == Tail.FOX) ? player.tailCount : 0;
        if (nFoxTails == 8 && !mystic && rand(3) == 0) {
            outputText("[pg]You have the feeling that if you could grow a ninth tail you would be much more powerful, but you would need to find a way to enhance one of these gems or meditate with one to have a chance at unlocking your full potential.");
        }
        //[Grow Addtl. Fox Tail]
        //(rare effect, up to max of 8 tails, requires PC level and int*10 = number of tail to be added)
        mutationStep(nFoxTails == 1 && player.inte >= 15 && player.wis >= 15, mystic ? 2 : 3, function ():void {
            outputText("[pg]");
            transformations.TailFox(2).applyEffect();
        });
        mutationStep(nFoxTails == 2 && player.level >= 6 && player.inte >= 30 && player.wis >= 30, mystic ? 2 : 3, function ():void {
            outputText("[pg]");
            transformations.TailFox(3).applyEffect();
        });
        mutationStep(nFoxTails == 3 && player.level >= 12 && player.inte >= 45 && player.wis >= 45, mystic ? 2 : 3, function ():void {
            outputText("[pg]");
            transformations.TailFox(4).applyEffect();
        });
        mutationStep(nFoxTails == 4 && player.level >= 18 && player.inte >= 60 && player.wis >= 60, mystic ? 2 : 3, function ():void {
            outputText("[pg]");
            transformations.TailFox(5).applyEffect();
        });
        mutationStep(nFoxTails == 5 && player.level >= 24 && player.inte >= 75 && player.wis >= 75, mystic ? 2 : 3, function ():void {
            outputText("[pg]");
            transformations.TailFox(6).applyEffect();
        });
        mutationStep(nFoxTails == 6 && player.level >= 30 && player.inte >= 90 && player.wis >= 90 && (!player.hasPerk(PerkLib.EnlightenedKitsune) || player.perkv4(PerkLib.EnlightenedKitsune) > 0) && (!player.hasPerk(PerkLib.EnlightenedNinetails) || player.perkv4(PerkLib.EnlightenedNinetails) > 0), mystic ? 1 : 3, function ():void {
            outputText("[pg]");
            transformations.TailFox(7).applyEffect();
            corruptKitsunecheck();
        });
        mutationStep(nFoxTails == 7 && player.level >= 36 && player.inte >= 105 && player.wis >= 105 && (!player.hasPerk(PerkLib.EnlightenedKitsune) || player.perkv4(PerkLib.EnlightenedKitsune) > 0) && (!player.hasPerk(PerkLib.EnlightenedNinetails) || player.perkv4(PerkLib.EnlightenedNinetails) > 0), mystic ? 1 : 4, function ():void {
            outputText("[pg]");
            transformations.TailFox(8).applyEffect();
            corruptKitsunecheck();
        });
        //[Grow 9th tail and gain Corrupted Nine-tails perk]
        mutationStep(nFoxTails == 8 && player.level >= 42 && player.inte >= 120 && player.wis >= 120 && (!player.hasPerk(PerkLib.EnlightenedNinetails) || player.perkv4(PerkLib.EnlightenedNinetails) > 0), mystic ? 1 : 4, function ():void {
            outputText("[pg]");
            transformations.TailFox(9).applyEffect();
            corruptKitsunecheck();
            if (!player.hasPerk(PerkLib.CorruptedNinetails)) {
                outputText("[pg]But something is strange...  The cosmic power radiating from your body feels... somehow more tainted than before. The corruption pouring off your body feels... amazingly good.</b>");
                outputText("[pg]You have the inexplicable urge to set fire to the world, just to watch it burn. with your newfound power, this goal is well within reach.");
                outputText("[pg](Perk Gained: Corrupted Nine-tails - Grants boosts to your racial special attacks.)");
                player.createPerk(PerkLib.CorruptedNinetails, 0, 0, 0, 0);
                dynStats("lus", 10, "cor", 10);
                MutagenBonus("lib", 2);
            }

        });
        function corruptKitsunecheck():void{
            if (!player.hasPerk(PerkLib.CorruptedKitsune)) {
                outputText("[pg]But something is wrong...  The cosmic power radiating from your body feels... tainted somehow. The corruption pouring off your body feels... good.</b>");
                outputText("[pg](Perk Gained: Corrupted Kitsune - Grants Corrupted Fox Fire and Terror special attacks.)");
                player.createPerk(PerkLib.CorruptedKitsune, 0, 0, 0, 0);
                dynStats("lus", 5, "cor", 5);
                MutagenBonus("lib", 1);
            }
        }
        //Kitsune Human face
        mutationStep(player.faceType != Face.FOX && player.faceType != Face.HUMAN, 3, function ():void {
            outputText("[pg]");
            transformations.FaceHuman.applyEffect();
        });
        //Kitsune fanged face
        mutationStep(player.faceType == Face.HUMAN, 3, function ():void {
            outputText("[pg]");
            transformations.FaceAnimalTeeth.applyEffect();
        });
        //Fox Eyes
        mutationStep(player.ears.type == Ears.FOX && player.eyes.type != Eyes.FOX, 3, function ():void {
            outputText("[pg]");
            transformations.EyesFox.applyEffect();
        });
        //Kitsune arms
        mutationStep(player.arms.type == Arms.HUMAN, 2, function ():void {
            outputText("[pg]");
            transformations.ArmsKitsune.applyEffect();
        });
        //-Remove feather-arms (copy this for goblin ale, mino blood, equinum, centaurinum, canine pepps, demon items)
        mutationStep(!InCollection(player.arms.type, Arms.HUMAN, Arms.FOX, Arms.KITSUNE), 4, function ():void {
            outputText("[pg]");
            transformations.ArmsHuman.applyEffect();
        });
        //[Grow Fox Ears]
        mutationStep(player.tailType == Tail.FOX && player.ears.type != Ears.FOX, mystic ? 2 : 4, function ():void {
            outputText("[pg]");
			transformations.EarsFox.applyEffect();
        });
        //[Change Hair Color: Golden-blonde, SIlver Blonde, White, Black, Red]
        mutationStep(!InCollection(player.hairColor, KitsuneRace.KitsuneHairColors), mystic ? 2 : 4, function ():void {
            if (player.tailType == Tail.FOX && player.tailCount == 9) player.hairColor = randomChoice(KitsuneRace.ElderKitsuneColors);
            else player.hairColor = randomChoice(KitsuneRace.BasicKitsuneHairColors);
            outputText("[pg]Your scalp begins to tingle, and you gently grasp a strand, pulling it forward to check it.  Your hair has become the same [haircolor] as a kitsune's!");
        });
        var tone:Array = mystic ? KitsuneRace.ElderKitsuneSkinColors : KitsuneRace.BasicKitsuneSkinColors;
        //[Change Skin Type: remove fur or scales, change skin to Tan, Olive, or Light]
        var changed:Boolean = mutationStep(player.skin.isFurCovered()
                && !InCollection(player.coatColor, KitsuneRace.KitsuneFurColors,["tan", "brown"])
                || !player.skin.isFurCovered() && player.skin.hasCoat(), mystic ? 1 : 2, function ():void {
            outputText("[pg]You begin to tingle all over your [skin], starting as a cool, pleasant sensation but gradually worsening until you are furiously itching all over.");
            if (player.isFurCovered()) outputText("  You stare in horror as you pull your fingers away holding a handful of [fur color] fur!  Your fur sloughs off your body in thick clumps, falling away to reveal patches of bare, " + player.skinColor + " skin.");
            else if (player.isScaleCovered()) outputText("  You stare in horror as you pull your fingers away holding a handful of dried up scales!  Your scales continue to flake and peel off your skin in thick patches, revealing the tender " + player.skinColor + " skin underneath.");
            outputText("  Your skin slowly turns raw and red under your severe scratching, the tingling sensations raising goosebumps across your whole body.  Over time, the itching fades, and your flushed skin resolves into a natural-looking ");
            player.skin.setBaseOnly({type: Skin.PLAIN});
            if (!InCollection(player.skinColor, tone)) player.skinColor = randomChoice(tone);
            outputText(player.skinColor + " complexion.");
            outputText("  <b>You now have [skin]!</b>");
        });
        //Change skin tone if not changed you!
        if (!changed) mutationStep(!InCollection(player.skinColor, tone) && !player.blockingBodyTransformations(), mystic ? 2 : 3, function ():void {
            outputText("[pg]You feel a crawling sensation on the surface of your skin, starting at the small of your back and spreading to your extremities, ultimately reaching your face.  Holding an arm up to your face, you discover that <b>you now have ");
            player.skinColor = randomChoice(tone);
            outputText("[skin]!</b>");
        });
        //[Change Skin Color: add "Tattoos"]
        //From Tan, Olive, or Light skin tones
        mutationStep(player.skin.base.type == Skin.PLAIN && !player.skin.hasMagicalTattoo(), 3, function ():void {
            outputText("[pg]");
            transformations.SkinPatternKitsune.applyEffect();
        });
        //Nipples Turn Back:
        mutationStep(player.hasStatusEffect(StatusEffects.BlackNipples), 3, function ():void {
            transformations.NipplesNoColor.applyEffect();
        });
        //Debugcunt
        mutationStep((player.vaginaType() == 5 || player.vaginaType() == 6) && player.hasVagina(), 3, function ():void {
            transformations.VaginaHuman().applyEffect();
        });
        if (changes == 0) {
            outputText("[pg]Odd.  You don't feel any different.");
        }
        flags[kFLAGS.TIMES_TRANSFORMED] += changes;
    }
    /*
         Perk

         Corrupted Nine-tails:
         Description: The mystical energy of the nine-tails surges through you, filling you with phenomenal cosmic power!  Your boundless magic allows you to recover quickly after casting spells, but your method of attaining it has corrupted the transformation, preventing you from achieving true enlightenment.
         Effect: Recover 1-3 Fatigue per Round in combat, 3 per hour out of combat.  Victory sex recovers fatigue equal to 2x the enemy's level.  Also applies Masochist and Sadist perks, if they are not already.
         //Alternatively, add the same effects as Masochist and Sadist but don't allow stacking, this way the effects can be removed if the player loses the corrupted nine-tails perk.
         Requirements: Have fox ears and obtain your 9th tail from the Mystic Jewel item.  Must maintain at least 80 corruption and 80 intelligence, fox ears and 9 tails, or lose the perk.

         Corrupted Fox Fire
         Fatigue Cost: 35
         Deals direct damage and lust regardless of enemy defenses.  Especially effective against non-corrupted targets.
         Cast: outputText( "Holding out your palm, you conjure corrupted purple flame that dances across your fingertips.  You launch it at the " + monster.short + " with a ferocious throw, and it bursts on impact, showering dazzling lavender sparks everywhere." );

         Terror
         Fatigue Cost: 25
         Inflicts fear and reduces enemy SPD.
         Cast: outputText( "The world goes dark, an inky shadow blanketing everything in sight as you fill the " + monster.short + "'s mind with visions of otherworldly terror that defy description."  + ((succeed) ? "They cower in horror as they succumb to your illusion, believing themselves beset by eldritch horrors beyond their wildest nightmares." : "The dark fog recedes as quickly as it rolled in as they push back your illusions, resisting your hypnotic influence.") );

         Seal
         Fatigue Cost: 35
         Seals enemy abilities, preventing them from using their specials.
         Cast: outputText( "You make a series of gestures, chanting in a strange tongue.  " + ((succeed) ? "A symbol made of flames appears on the " + monster.short + "'s body, temporarily preventing them from using any special abilities!" : "A symbol made of flames appears on the " + monster.short + "'s body, but it dissipates as quickly as it was formed, failing to properly seal them." ) );

         Enlightened Nine-tails:
         Description: The mystical energy of the nine-tails surges through you, filling you with phenomenal cosmic power!  Your boundless magic allows you to recover quickly after casting spells.
         Effect: Recover 1-3 Fatigue per Round in combat, 3 per hour out of combat.  Provides a buff to Tease.  Victory sex recovers fatigue equal to 2x the enemy's level.
         Requirements: Have fox ears and obtain your 9th tail from spiritual enlightenment.  Must maintain at least 80 intelligence, fox ears and 9 tails, or lose the perk.

         Fox Fire
         Fatigue Cost: 35
         Deals direct damage and lust regardless of enemy defenses.  Especially effective against corrupted targets.
         Cast: outputText( "Holding out your palm, you conjure an ethereal blue flame that dances across your fingertips.  You launch it at the " + monster.short + " with a ferocious throw, and it bursts on impact, showering dazzling azure sparks everywhere.");

         Illusion
         Fatigue Cost: 25
         Decrease enemy hit chance and increase their susceptibility to lust attacks.
         Cast: outputText( "The world begins to twist and distort around you as reality bends to your will, the " + monster.short + "'s mind blanketed in the thick fog of your illusions." + ((succeed) ? "They stumble humorously to and fro, unable to keep pace with the shifting illusions that cloud their perceptions" : "Like the snapping of a rubber band, reality falls back into its rightful place as they resist your illusory conjurations." ) );

         Seal
         Fatigue Cost: 35
         Seals enemy abilities, preventing them from using their specials.
         Cast: outputText( "You make a series of gestures, chanting in a strange tongue.  " + ((succeed) ? "A symbol made of flames appears on the " + monster.short + "'s body, temporarily preventing them from using any special abilities!" : "A symbol made of flames appears on the " + monster.short + "'s body, but it dissipates as quickly as it was formed, failing to properly seal them." ) );
         Teases

         // Specific to tentacle beasts
         outputText( "You find yourself unable to stifle a flirtatious giggle, waggling your fingers at the tentacle beast and grinning.  You stroll fearlessly up to the writhing abomination and run your hands through its thick, foliage-like coat, your tail" + ((player.tailVenum > 1) ? "s" : "" ) + " curling around its wriggling limbs.  " + ((succeed) ? "The creature's wild thrashing is quelled by confusion and arousal, a few of its limbs running along your face tenderly before you break away.  The beast resumes its savage flailing, but you can tell your touch had an effect on it." : "The creature is unmoved by your tender caresses, swinging a thick limb at you violently.  Thankfully, you are able to break away from it unscathed, but it's obvious that you're going to have to try harder to fluster this beast.") );
         */

    //Fish Fillet
    public function fishFillet(player:Player):void {
        clearOutput();
        if (!CoC.instance.inCombat) outputText("You sit down and unwrap your fish fillet. It's perfectly flaky, allowing you to break it off in bite-sized chunks.  The salty meal disappears quickly, and your stomach gives an appreciative gurgle.");
        //(In combat?)
        else outputText("You produce the fish fillet from your bag.  Rather than unwrap it and savor the taste as you normally would, you take a large bite out of it, leaf wrapping and all.  In no time your salty meal is gone, your stomach giving an appreciative gurgle.  ");
        //Increase HP by quite a bit!)
        //(Slight chance at increasing Toughness?)
        //(If lake has been tainted, +1 Corruption?)
        if (flags[kFLAGS.FACTORY_SHUTDOWN] == 2) dynStats("cor", 0.5);
        if (flags[kFLAGS.FACTORY_SHUTDOWN] == 1) dynStats("cor", -0.1);
        dynStats("cor", 0.1);
        HPChange(Math.round(player.maxHP() * .25 * player.postConsumptionMlt()), true);
        player.refillHunger(30);
    }

    //Behemoth Cum
    public function behemothCum(player:Player):void {
        clearOutput();
        outputText("You uncork the bottle and drink the behemoth cum; it tastes great and by the time you've finished drinking, you feel a bit stronger. ");
        dynStats("lus", Math.round((5 + (player.cor / 5))*player.postConsumptionMlt()), "scale", false);
        MutagenBonus("str", 1);
        MutagenBonus("tou", 1);
        HPChange(Math.round(player.maxHP() * .25 * player.postConsumptionMlt()), true);
        player.slimeFeed();
        player.refillHunger(25);
    }

    //Urta's Cum
    public function urtaCum(player:Player):void {
        clearOutput();
        outputText("You uncork the bottle and drink the vulpine cum; it tastes great. Urta definitely produces good-tasting cum!");
        dynStats("lus", Math.round((5 + (player.cor / 5))*player.postConsumptionMlt()), "scale", false);
        player.addCurse("sen", 1, 1);
        HPChange(Math.round(player.maxHP() * .25 * player.postConsumptionMlt()), true);
        player.slimeFeed();
        player.refillHunger(25);
    }

    //Fresh Fish
    public function freshFish(player:Player):void {
        clearOutput();
        if (!CoC.instance.inCombat) outputText("You sit down and unbag your fresh fish. It's perfectly flaky, allowing you to break it off in bite-sized chunks.  The salty meal disappears quickly, and your stomach gives an appreciative gurgle.");
        //(In combat?)
        else {
            if (player.isRace(Races.ORCA, 1, false) || player.isRace(Races.SEA_DRAGON, 1, false)) outputText("You produce the fresh fish from your bag and prety much just open wide your hungry mouth and toss it in. Your salty meal is gone in a flash, your stomach giving an appreciative gurgle.  ");
            else outputText("You produce the fresh fish from your bag. Instead of eating slowly it and savor the taste as you normally would, you take a large bite out of it.  In no time your salty meal is gone, your stomach giving an appreciative gurgle.  ");
        }
        //Increase HP by quite a bit!)
        HPChange(Math.round(player.maxHP() * .2 * player.postConsumptionMlt()), true);
        player.refillHunger(30);
    }

    //Trap Oil
    public function trapOil(player:Player):void {
        clearOutput();
        var changes:int = 0;
        var changeLimit:int = 1;
        if (rand(2) == 0) changeLimit++;
        if (rand(2) == 0) changeLimit++;
        if (rand(2) == 0) changeLimit++;
        changeLimit += player.additionalTransformationChances;
        outputText("You pour some of the oil onto your hands and ");
        if (player.cor < 30) outputText("hesitantly ");
        else if (player.cor > 70) outputText("eagerly ");
        outputText("rub it into your arms and chest.  The substance is warm, coating and ever so slightly numbing; it quickly sinks into your skin, leaving you feeling smooth and sleek.");
        //Speed Increase:
        if (rand(3) == 0 && changes < changeLimit && MutagenBonus("spe", 1)) {
            outputText("[pg]You feel fleet and lighter on your toes; you sense you could dodge, dart or skip away from anything.");
            changes++;
        }
        //Strength Loss:
        else if (player.str > 40 && rand(3) == 0 && changes < changeLimit) {
            outputText("[pg]A sense of helplessness settles upon you as your limbs lose mass, leaving you feeling weaker and punier.");
            player.addCurse("str", 1, 1);
            changes++;
        }
        //Sensitivity Increase:
        if (player.sens < 70 && player.hasCock() && rand(3) == 0 && changes < changeLimit) {
            outputText("[pg]A light breeze brushes over you and your skin tingles.  You have become more sensitive to physical sensation.");
            player.addCurse("sen", 5, 1);
            changes++;
        }
        //Libido Increase:
        if (player.hasVagina() && rand(3) == 0 && changes < changeLimit) {
            outputText("[pg]You feel your blood quicken and rise, and a desire to... hunt builds within you.");
            MutagenBonus("lib", 2);
            if (player.lib < 30) MutagenBonus("lib", 2);
            changes++;
        }
        if (player.blockingBodyTransformations()) changeLimit = 0;
        //Body Mass Loss:
        if (player.thickness > 40 && rand(3) == 0 && changes < changeLimit) {
            outputText("[pg]You feel an odd tightening sensation in your midriff, as if you were becoming narrower and lither.  You frown downwards, and then turn your arms around, examining them closely.  Is it just you or have you lost weight?");
            player.modThickness(40, 3);
            changes++;
        }
        //Thigh Loss: (towards \"girly\")
        if (player.hips.type >= 10 && rand(4) == 0 && changes < changeLimit) {
            outputText("[pg]You touch your thighs speculatively.  It's not just your imagination; you've lost a bit of weight around your waist.");
            player.hips.type--;
            if (player.hips.type > 15) player.hips.type -= 2 + rand(3);
            changes++;
        }
        //Thigh Gain: (towards \"girly\")
        if (player.hips.type < 6 && rand(4) == 0 && changes < changeLimit) {
            outputText("[pg]You touch your thighs speculatively.  You think you may have gained a little weight around your waist.");
            player.hips.type++;
            changes++;
        }
        //Breast Loss: (towards A cup)
        if (player.biggestTitSize() > 1 && rand(4) == 0 && changes < changeLimit) {
            outputText("[pg]You gasp as you feel a compressing sensation in your chest and around your [fullChest].  The feeling quickly fades however, leaving you feeling like you have lost a considerable amount of weight from your upper body.");
            var index:int = 0;
            while (index < player.bRows()) {
                if (player.breastRows[index].breastRating > 70) player.breastRows[index].breastRating -= rand(3) + 15;
                else if (player.breastRows[index].breastRating > 50) player.breastRows[index].breastRating -= rand(3) + 10;
                else if (player.breastRows[index].breastRating > 30) player.breastRows[index].breastRating -= rand(3) + 7;
                else if (player.breastRows[index].breastRating > 15) player.breastRows[index].breastRating -= rand(3) + 4;
                else player.breastRows[index].breastRating -= 2 + rand(2);
                if (player.breastRows[index].breastRating < 1) player.breastRows[index].breastRating = 1;
                index++;
            }
            changes++;
        }
        //Breast Gain: (towards A cup)
        if (player.biggestTitSize() < 1 || player.breastRows[0].breastRating < 1 && rand(4) == 0 && changes < changeLimit) {
            outputText("[pg]You feel a vague swelling sensation in your [fullChest], and you frown downwards.  You seem to have gained a little weight on your chest.  Not enough to stand out, but- you cup yourself carefully- certainly giving you the faintest suggestion of boobs.");
            player.breastRows[0].breastRating = 1;
            if (player.bRows() > 1) {
                index = 1;
                while (index < player.bRows()) {
                    if (player.breastRows[index].breastRating < 1) player.breastRows[index].breastRating = 1;
                }
            }
            changes++;
        }
        //Penis Reduction towards 3.5 Inches:
        if (player.longestCockLength() >= 3.5 && player.hasCock() && rand(2) == 0 && changes < changeLimit) {
            outputText("[pg]You flinch and gasp as your [cocks] suddenly become");
            if (player.cockTotal() == 1) outputText("s");
            outputText(" incredibly sensitive and retract into your body.  Anxiously you pull down your underclothes to examine your nether regions.  To your relief ");
            if (player.cockTotal() == 1) outputText("it is");
            else outputText("they are");
            outputText(" still present, and as you touch ");
            if (player.cockTotal() == 1) outputText("it");
            else outputText("them");
            outputText(", the sensitivity fades, however - a blush comes to your cheeks - ");
            if (player.cockTotal() == 1) outputText("it seems");
            else outputText("they seem");
            outputText(" to have become smaller.");
            index = 0;
            while (index < player.cockTotal()) {
                if (player.cocks[index].cockLength >= 3.5) {
                    //Shrink said cock
                    if (player.cocks[index].cockLength < 6 && player.cocks[index].cockLength >= 2.9) {
                        player.cocks[index].cockLength -= .5;
                        if (player.cocks[index].cockThickness * 6 > player.cocks[index].cockLength) player.cocks[index].cockThickness -= .2;
                        if (player.cocks[index].cockThickness * 8 > player.cocks[index].cockLength) player.cocks[index].cockThickness -= .2;
                        if (player.cocks[index].cockThickness < .5) player.cocks[index].cockThickness = .5;
                    }
                    player.cocks[index].cockLength -= 0.5;
                    player.growCock(index, Math.round(player.cocks[index].cockLength * 0.33) * -1);
                }
                index++;
            }
            changes++;
        }
        //Testicle Reduction:
        if (player.hasBalls() && player.hasCock() && (player.ballSize > 1 || !player.hasStatusEffect(StatusEffects.Uniball)) && rand(4) == 0 && changes < changeLimit) {
            outputText("[pg]You feel a delicate tightening sensation around your [balls].  The sensation upon this most sensitive part of your anatomy isn't painful, but the feeling of your balls getting smaller is intense enough that you stifle anything more than a sharp intake of breath only with difficulty.");
            player.ballSize--;
            if (player.ballSize > 8) player.ballSize--;
            if (player.ballSize > 10) player.ballSize--;
            if (player.ballSize > 12) player.ballSize--;
            if (player.ballSize > 15) player.ballSize--;
            if (player.ballSize > 20) player.ballSize--;
            //Testicle Reduction final:
            if (player.ballSize <= 1 && !player.hasStatusEffect(StatusEffects.Uniball)) {
                //[Note: Balls description should no longer say \"swings heavily beneath\".  For simplicity's sake sex scenes should continue to assume two balls]
                transformations.BallsTrap.applyEffect(false);
            } else if (player.ballSize < 1) player.ballSize = 1;
            changes++;
        }
        //Anal Wetness Increase:
        if (player.ass.analWetness < 5 && rand(4) == 0 && changes < changeLimit) {
            if (player.ass.analWetness < 4) outputText("[pg]Your eyes widen in shock as you feel oily moisture bead out of your [asshole].  Your asshole has become wetter and more pliable.");
            //Anal Wetness Increase Final (always loose):
            else outputText("[pg]You moan as clear, odorless oil dribbles out of your [asshole], this time in enough quantity to stain your [armor].  Your back passage feels incredibly sensitive, wet and accommodating.  Your ass is ready to be plowed by anything, and always will be.");
            player.ass.analWetness++;
            //buttChange(30,false,false,false);
            if (player.ass.analLooseness < 3) player.ass.analLooseness++;
            changes++;
            player.addCurse("sen", 2, 1);
        }
        //Fertility Decrease:
        if (player.hasVagina() && rand(4) == 0 && changes < changeLimit) {
            outputText("[pg]The vague numbness in your skin sinks slowly downwards, and you put a hand on your lower stomach as the sensation centers itself there.  ");
            dynStats("sen", -2);
            //High fertility:
            if (player.fertility >= 30) outputText("It feels like your overcharged reproductive organs have simmered down a bit.");
            //Average fertility:
            else if (player.fertility >= 5) outputText("You feel like you have dried up a bit inside; you are left feeling oddly tranquil.");
            //[Low/No fertility:
            else {
                outputText("Although the numbness makes you feel serene, the trap oil has no effect upon your ");
                if (player.fertility > 0) outputText("mostly ");
                outputText("sterile system.");
                //[Low/No fertility + Trap/Corruption  >70:
                if (player.cor > 70) outputText("  For some reason the fact that you cannot function as nature intended makes you feel helpless and submissive.  Perhaps the only way to be a useful creature now is to find a dominant, fertile being willing to plow you full of eggs? You shake the alien, yet oddly alluring thought away.");
            }
            player.fertility -= 1 + rand(3);
            if (player.fertility < 4) player.fertility = 4;
            changes++;
        }
        //Male Effects
        if (player.gender == 1) {
            //Femininity Increase Final (max femininity allowed increased by +10):
            if (rand(4) == 0 && changes < changeLimit) {
                if (player.femininity < 70 && player.femininity >= 60) {
                    outputText("[pg]You laugh as you feel your features once again soften, before stopping abruptly.  Your laugh sounded more like a girly giggle than anything else.  Feeling slightly more sober, you touch the soft flesh of your face prospectively.  The trap oil has changed you profoundly, making your innate maleness... difficult to discern, to say the least.  You suspect you could make yourself look even more like a girl now if you wanted to.");
                    if (!player.hasPerk(PerkLib.Androgyny)) {
                        player.createPerk(PerkLib.Androgyny, 0, 0, 0, 0);
                        outputText("[pg](<b>Perk Gained: Androgyny</b>)");
                    }
                    player.femininity += 10;
                    if (player.femininity > 70) player.femininity = 70;
                    changes++;
                }
                //Femininity Increase:
                else {
                    outputText("[pg]Your face softens as your features become more feminine.");
                    player.femininity += 10;
                    changes++;
                }
            }
            //Muscle tone reduction:
            if (player.tone > 20 && rand(4) == 0 && changes < changeLimit) {
                outputText("[pg]You sink a finger into your arm inquiringly.  You seem to have lost some of your muscle definition, leaving you looking softer.");
                player.tone -= 10;
                changes++;
            }
        }
        //Female Effects
        else if (player.gender == 2) {
            //Masculinity Increase:
            if (player.femininity > 30 && rand(4) == 0 && changes < changeLimit) {
                player.femininity -= 10;
                if (player.femininity < 30) {
                    player.femininity = 30;
                    //Masculinity Increase Final (max masculinity allowed increased by +10):
                    outputText("[pg]You laugh as you feel your features once again soften, before stopping abruptly.  Your laugh sounded more like a boyish crow than anything else.  Feeling slightly more sober, you touch the defined lines of your face prospectively.  The trap oil has changed you profoundly, making your innate femaleness... difficult to discern, to say the least.  You suspect you could make yourself look even more like a boy now if you wanted to.");
                    if (!player.hasPerk(PerkLib.Androgyny)) {
                        player.createPerk(PerkLib.Androgyny, 0, 0, 0, 0);
                        outputText("[pg](<b>Perk Gained: Androgyny</b>)");
                    }
                } else {
                    outputText("[pg]Your face becomes more set and defined as your features turn more masculine.");
                }
                changes++;
            }
            //Muscle tone gain:
            if (player.tone < 80 && rand(4) == 0 && changes < changeLimit) {
                outputText("[pg]You flex your arm in interest.  Although you have become thinner, your muscles seem to have become more defined.");
                player.tone += 10;
                changes++;
            }
        }
        //Nipples Turn Black:
        if (!player.hasStatusEffect(StatusEffects.BlackNipples) && rand(6) == 0 && changes < changeLimit) {
            transformations.NipplesBlack.applyEffect();
            changes++;
        }
        //Remove odd eyes
        if ((player.eyes.type == Eyes.SPIDER || player.eyes.type == Eyes.CAT) && rand(2) == 0 && changes < changeLimit) {
            outputText("[pg]");
            transformations.EyesHuman.applyEffect();
            changes++;
        }
        //PC Trap Effects
        if (transformations.EyesSandTrap.isPossible() && rand(4) == 0 && changes < changeLimit) {
            outputText("[pg]");
            transformations.EyesSandTrap.applyEffect();
            changes++;
        }
        //Vagina Turns Black:
        if (player.hasVagina() && player.vaginaType() != VaginaClass.BLACK_SAND_TRAP && rand(4) == 0 && changes < changeLimit) {
            transformations.VaginaSandTrap().applyEffect();
            dynStats("lus", 10, "scale", false);
            player.addCurse("sen", 2, 1);
            changes++;
        }
        //Dragonfly Wings:
        if (!InCollection(player.wings.type, Wings.GIANT_DRAGONFLY) && rand(4) == 0 && changes < changeLimit) {
            outputText("[pg]");
            transformations.WingsGiantDragonfly.applyEffect();
            changes++;
        }
        if (changes == 0) {
            outputText("[pg]Well... that didn't amount to much.");
        }
        flags[kFLAGS.TIMES_TRANSFORMED] += changes;
    }

    //Purity Peach - Inventory
    public function purityPeach(player:Player):void {
        clearOutput();
        outputText("You bite into the sweet, juicy peach, feeling a sensation of energy sweeping through your limbs and your mind.  You feel revitalized, refreshed, and somehow cleansed.  ");
        fatigue(-(Math.round(((player.maxOverFatigue() * 0.01)+10)*player.postConsumptionMlt())));
        HPChange(Math.round(player.maxHP() * 0.2 * player.postConsumptionMlt()), true);
        player.refillHunger(20);
    }

    //>When Used
    public function purpleFruitEssrayle(player:Player):void {
        player.slimeFeed();
        clearOutput();
        outputText("You bite into the fruit Essrayle gave you with little hesitation.  It's amazingly sweet, with a texture that's rather gummy.  The juice is a candied grape syrup that fills your cheeks and flows down your throat with far more fluid than the size of the plant should allow.  You hastily devour the entire thing, unable to stop yourself once you've started.");
        outputText("[pg]A tingling warmth shifts to a roaring inferno in your veins, your heart-rate spiking abruptly.  The intensity of it almost makes your body feel molten!  But, as quickly as it came, the sensation fades into merely a pleasing warmth that settles in your chest.");
        if (player.averageNipplesPerBreast() < 4) {
            outputText("  At first you think nothing has changed, but a second look confirms that your breasts now sport the same quartet of cow-like nipples the bovine plant-girl bears.");
            if (player.nippleLength < 4) player.nippleLength = 4;
            transformations.NipplesPerBreastFour.applyEffect(false);
        }
        //[Player gains quad nipples, milk production and libido way up]
        MutagenBonus("lib", 5);
        player.boostLactation(3 * player.bRows());
        player.refillHunger(30);
    }

    public function ringtailFig(player:Player):void {
        clearOutput();
        //eat it:
        outputText("You split the fruit and scoop out the pulp, eating it greedily.  It's sweet and slightly gritty with seeds, and you quickly finish both halves.");

        var changes:int = 0;
        var changeLimit:int = 1;
        if (rand(2) == 0) changeLimit++;
        if (rand(2) == 0) changeLimit++;
        if (rand(2) == 0) changeLimit++;
        changeLimit += player.additionalTransformationChances;
        var Coon_HairColor:Array = ["brown", "chocolate", "tan", "caramel"];
        //stat gains:
        //gain speed to ceiling of 80
        if (rand(3) == 0 && changes < changeLimit && MutagenBonus("spe", 2)) {
            outputText("[pg]You twitch and turn your head this way and that, feeling a bit more alert.  This will definitely help when defending your personal space from violators.");
            changes++;
        }
        //gain sensitivity
        if (player.sens < 80 && rand(3) == 0 && changes < changeLimit) {
            outputText("[pg]The wrinkled rind suddenly feels alarmingly distinct in your hands, and you drop the remnants of the fruit.  Wonderingly, you touch yourself with a finger - you can feel even the lightest pressure on your " + player.skinFurScales() + " much more clearly now!");
            player.addCurse("sen", 2, 1);
            changes++;
        }
        //lose toughness to floor of 50
        if (rand(4) && player.tou > 50 && changes < changeLimit) {
            outputText("[pg]You find yourself wishing you could just sit around and eat all day, and spend a while lazing about and doing nothing before you can rouse yourself to get moving.");
            if (player.tou > 75) player.addCurse("tou", 1, 1);
            player.addCurse("tou", 1, 1);
            changes++;
        }
		if (player.blockingBodyTransformations()) changeLimit = 0;

        //Sex stuff
        if (player.hasCock()) {
            //gain ball size
            if (player.hasBalls() && player.ballSize < 15 && rand(4) == 0 && changes < changeLimit) {
                outputText("[pg]Your [balls] inflate, stretching the skin of your sack.  Exposing them, you can see that they've grown several inches!  How magical!");
                changes++;
                player.ballSize += 2 + rand(3);
                MutagenBonus("lib", 1);
            }
            //gain balls up to 2 (only if full-coon face and fur; no dick required)
            if (player.balls == 0 && player.isFurCovered() && 9999 == 9999 && rand(3) == 0 && changes < changeLimit) {
                outputText("[pg]As you eat, you contemplate your masked appearance; it strikes you that you're dangerously close to the classic caricature of a thief.  Really, all it would take is a big, nondescript sack and a hurried gait and everyone would immediately think the worst of you.  In a brief fit of pique, you wish you had such a bag to store your things in, eager to challenge a few assumptions.  A few minutes into that line of thought, a twisting ache in your crotch bends you double, and you expose yourself hurriedly to examine the region.  As you watch, a balloon of flesh forms on your crotch, and two lumps migrate from below your navel down into it.  <b>Looks like you have a sack, after all.</b>");
                transformations.BallsDuo.applyEffect(false);
                player.ballSize = 1;
                changes++;
            }
        }
        //gain thickness or lose tone or whatever - standard message
        if (rand(4) == 0 && player.thickness < 80 && changes < changeLimit) {
            outputText(player.modThickness(80, 2));
            changes++;
        }
        //bodypart changes:
        if (player.tailType != Tail.RACCOON && rand(4) == 0 && changes < changeLimit) {
            outputText("[pg]");
            transformations.TailRaccoon.applyEffect();
            changes++;
        }

        //Dye those hairs
        if (!InCollection(player.hairColor, Coon_HairColor) && changes < changeLimit && rand(3) == 0) {
            player.hairColor = randomChoice(Coon_HairColor);
            outputText("[pg]Your hairs seems to have changed color to " + player.hairColor + "!");
            changes++;
        }

        //Eyes Color
        if (transformations.EyesRaccoonColors.isPossible() || transformations.EyesHuman.isPossible()) {
            if (transformations.EyesRaccoonColors.isPossible()) {
                outputText("[pg]");
                transformations.EyesRaccoonColors.applyEffect();
            }
            if (transformations.EyesHuman.isPossible()) {
                outputText("[pg]");
                transformations.EyesHuman.applyEffect();
            }
            changes++;
        }

        //gain coon ears
        if (player.tailType == Tail.RACCOON && player.ears.type != Ears.RACCOON && rand(4) == 0 && changes < changeLimit) {
            outputText("[pg]");
            transformations.EarsRaccoon.applyEffect();
            changes++;
        }
        //gain feet-coon
        if (player.ears.type == Ears.RACCOON && player.lowerBody != LowerBody.RACCOON && changes < changeLimit && rand(4) == 0) {
            outputText("[pg]");
            transformations.LowerBodyRaccoon.applyEffect();
            changes++;
        }

        //Grow coon Arms
        if (changes < changeLimit && player.arms.type == Arms.HUMAN && player.arms.type != Arms.RACCOON && rand(4) == 0) {
            outputText("[pg]");
            transformations.ArmsRaccoon.applyEffect();
            changes++;
        }

        //gain half-coon face (prevented if already full-coon)
        if (player.faceType != Face.RACCOON_MASK && player.faceType != Face.RACCOON && (player.skin.coverage != Skin.COVERAGE_COMPLETE || player.skin.coverage != Skin.COVERAGE_HIGH) && rand(4) == 0 && changes < changeLimit) {
            outputText("[pg]");
            transformations.FaceRaccoonMask.applyEffect();
            changes++;
        }
                //gain full-coon face (requires half-coon and fur)
        //from humanoid - should be the only one possible
        else if (player.faceType == Face.RACCOON_MASK && player.lowerBody == LowerBody.RACCOON && player.isFurCovered() && (player.skin.coverage == Skin.COVERAGE_COMPLETE || player.skin.coverage == Skin.COVERAGE_HIGH) && rand(4) == 0 && changes < changeLimit) {
            outputText("[pg]");
            transformations.FaceRaccoon.applyEffect();
            changes++;
        }
        //Reset coon face
        if (player.faceType == Face.RACCOON && rand(4) == 0 && (player.skin.coverage == Skin.COVERAGE_COMPLETE || player.skin.coverage == Skin.COVERAGE_HIGH) && changes < changeLimit) {
            outputText("[pg]");
            transformations.FaceHuman.applyEffect();
            changes++;
        }

        //FUR TIME
        var color1:String;
            var Coon_HairColor1:Array = ["brown", "chocolate", "tan", "caramel"];
        //get partial fur from full if pc face is human
        if (player.faceType == Face.HUMAN && player.isFurCovered() && rand(3) == 0 && changes < changeLimit && (player.skin.coverage == Skin.COVERAGE_COMPLETE || player.skin.coverage == Skin.COVERAGE_HIGH)) {
            outputText("[pg]What used to be a dense coat of fur begins to fall in patches on the ground leaving you with just enough fur to cover some area of your body.  <b>Some area of your body are now partially covered with fur!</b>");
            player.skin.coverage = Skin.COVERAGE_LOW;
            changes++;
        }
        //get partial fur from nothing
        if (player.faceType == Face.RACCOON_MASK && !player.isFurCovered() && rand(3) == 0 && changes < changeLimit) {
            color1 = randomChoice(Coon_HairColor1);
            outputText("[pg]");
            transformations.SkinFur(Skin.COVERAGE_LOW, {color: color1}).applyEffect();
        }
        //gain full fur
        if (player.faceType == Face.RACCOON_MASK && (player.lowerBody == LowerBody.RACCOON && player.ears.type == Ears.RACCOON) && player.isFurCovered() && player.skin.coverage == Skin.COVERAGE_LOW && changes < changeLimit && rand(4) == 0) {
            color1 = randomChoice(Coon_HairColor1);
            outputText("[pg]");
            transformations.SkinFur(Skin.COVERAGE_COMPLETE, {color: color1}).applyEffect();
            changes++;
        }

        //fatigue damage (only if face change was not triggered)
        else if (rand(2) == 0 && changes < changeLimit && (player.faceType != Face.RACCOON_MASK && player.faceType != Face.RACCOON)) {
            outputText("[pg]You suddenly feel tired and your eyelids are quite heavy.  Checking your reflection, you can see small dark rings have begun to form under your eyes.");
            fatigue(Math.round(10*player.postConsumptionMlt()));
            changes++;
        }
        if (changes == 0) {
            outputText("[pg]Yawning, you figure you could really use a nap.");
            fatigue(Math.round(5*player.postConsumptionMlt()));
        }
        player.refillHunger(30);
        flags[kFLAGS.TIMES_TRANSFORMED] += changes;
    }

    //Mouse
    public function mouseCocoa(type:Number, player:Player):void {
        clearOutput();
        var changes:int = 0;
        var changeLimit:int = 1;
        if (rand(2) == 0) changeLimit++;
        if (rand(2) == 0) changeLimit++;
        if (rand(2) == 0) changeLimit++;
        changeLimit += player.additionalTransformationChances;
        //use:
        if (type == 0) {
            outputText("You pop several of the beans in your mouth and suck; they immediately reward you by giving up an oily, chocolatey flavor with a hint of bitterness.  For several minutes you ");
            if (!player.isTaur()) outputText("sit and ");
            outputText("enjoy the taste.");
        }
        if (type == 1) outputText("You heat yourself a cup of the exotic alcohol and sip it. It tastes great, but leaves you somewhat tipsy. You also feel yourself pleasantly warming up from the sake as something changes in you.");
        //stat changes:
        //lose height + gain speed (42" height floor, no speed ceiling but no speed changes without height change)
        if (player.tallness >= 45 && changes < changeLimit && rand(5) > 2) {
            //not horse
            if (!player.isTaur()) outputText("[pg]You tap your [feet] idly against the rock you sit upon as you enjoy the treat; it takes several minutes before you realize you don't reach as far down as you did when you sat down!  In shock, you jerk upright and leap off, nearly falling forward as your body moves more responsively than before!  Experimentally, you move in place as you look down at your now-closer [feet]; the sensation of a more compact agility stays with you.");
            //horse
            else outputText("[pg]You trot idly in place as you eat, moving quicker and quicker as you become increasingly bored; on one step, the ground sneaks up on you and you hit it sharply, expecting a few more inches before contact!  Looking down, you notice better resolution than before - you can make out the dirt a bit more clearly.  It looks like you just shed some height, but... you're feeling too jittery to care.  You just want to run around.");
            MutagenBonus("spe", 1);
            player.tallness -= 2;
            if (player.tallness > 50) player.tallness--;
            if (player.tallness > 60) player.tallness--;
            if (player.tallness > 70) player.tallness -= 2;
            if (player.tallness > 80) player.tallness -= 2;
            if (player.tallness > 90) player.tallness -= 2;
            changes++;
        }
        //lose tough
        if (player.tou > 50 && changes < changeLimit && rand(3) == 0) {
            outputText("[pg]You feel a bit less sturdy, both physically and mentally.  In fact, you'd prefer to have somewhere to hide for the time being, until your confidence returns.  The next few minutes are passed in a mousey funk - even afterward, you can't quite regain the same sense of invincibility you had before.");
            changes++;
            player.addCurse("tou", 1, 1);
            if (player.tou >= 75) player.addCurse("tou", 1, 1);
            if (player.tou >= 90) player.addCurse("tou", 1, 1);
        }
		if (player.blockingBodyTransformations()) changeLimit = 0;

        //SEXYYYYYYYYYYY
        //vag-anal capacity up for non-goo (available after PC < 5 ft; capacity ceiling reasonable but not horse-like or gooey)
        if (player.tallness < 60 && (player.analCapacity() < 100 || (player.vaginalCapacity() < 100 && player.hasVagina())) && changes < changeLimit && rand(3) == 0) {
            outputText("[pg]Your ");
            if (player.vaginalCapacity() < 100 && player.hasVagina()) outputText("[vagina]");
            else outputText("[asshole]");
            outputText(" itches, and you shyly try to scratch it, looking around to see if you're watched.  ");
            if (player.isTaur()) outputText("Backing up to a likely rock, you rub your hindquarters against it, only to be surprised when you feel your hole part smoothly against the surface, wider than you're used to!");
            else outputText("Slipping a hand in your [armor], you rub vigorously; your hole opens more easily and your fingers poke in farther than you're used to!");
            outputText("  It feels unusual - not bad, really, but definitely weird.  You can see how it would come in handy, now that you're smaller than most prospective partners, but... shaking your head, you ");
            if (player.isTaur()) outputText("back away from your erstwhile sedimentary lover");
            else outputText("pull your hand back out");
            outputText(".");
            //adds some lust
            dynStats("lus", 10 + player.sens / 5, "scale", false);
            if (player.vaginalCapacity() < 100 && player.hasVagina()) {
                if (!player.hasStatusEffect(StatusEffects.BonusVCapacity)) player.createStatusEffect(StatusEffects.BonusVCapacity, 0, 0, 0, 0);
                player.addStatusValue(StatusEffects.BonusVCapacity, 1, 5);
            } else {
                if (!player.hasStatusEffect(StatusEffects.BonusACapacity)) player.createStatusEffect(StatusEffects.BonusACapacity, 0, 0, 0, 0);
                player.addStatusValue(StatusEffects.BonusACapacity, 1, 5);
            }
            changes++;
        }
        //fem fertility up and heat (suppress if pregnant)
        //not already in heat (add heat and lust)
        if (player.statusEffectv2(StatusEffects.Heat) < 30 && rand(2) == 0 && changes < changeLimit) {

            var intensified:Boolean = player.inHeat;
            if (player.goIntoHeat(false)) {
                if (intensified) {
                    outputText("[pg]Your womb feels achingly empty, and your temperature shoots up.  Try as you might, you can't stop fantasizing about being filled with semen, drenched inside and out with it, enough to make a baker's dozen offspring.  ");
                    //[(no mino cum in inventory)]
                    if (!player.hasItem(consumables.MINOCUM)) {
                        outputText("<b>Your heat has intensified as much as your fertility has increased, which is a considerable amount!</b>");
                    } else if (player.lust < player.maxLust() || player.isTaur()) outputText("You even pull out a bottle of minotaur jism and spend several minutes considering the feasibility of pouring it directly in your [vagina], but regain your senses as you're unsealing the cap, setting it aside.  <b>Still, your heat is more intense than ever and your increasingly-fertile body is practically begging for dick - it'll be hard to resist any that come near!</b>");
                    //(mino cum in inventory and non-horse, 100 lust)
                    else {
                        outputText("Desperately horny, you pull out your bottle of minotaur jism and break the seal in two shakes, then lie down with your hips elevated and upend it over your greedy vagina.  The gooey seed pours into you, and you orgasm fitfully, shaking and failing to hold the bottle in place as it coats your labia.  <b>As a hazy doze infiltrates your mind, you pray the pregnancy takes and dream of the sons you'll bear with your increasingly fertile body... you're going to go insane if you don't get a baby in you</b>.");
                        //(consumes item, increment addiction/output addict message, small chance of mino preg, reduce lust)]", false);
                        player.minoCumAddiction(5);
                        if (player.isGargoyle() && player.hasPerk(PerkLib.GargoyleCorrupted)) player.refillGargoyleHunger(25);
                        player.knockUp(PregnancyStore.PREGNANCY_MINOTAUR, PregnancyStore.INCUBATION_MINOTAUR, 175);
                        player.consumeItem(consumables.MINOCUM);
                    }
                } else {
                    outputText("[pg]Your insides feel... roomy.  Accomodating, even.  You could probably carry a whole litter of little [name]s right now.  Filled with a sudden flush of desire, you look around furtively for any fertile males.  With a shake of your head, you try to clear your thoughts, but daydreams of being stuffed with seed creep right back in - it looks like your body is intent on probing the limits of your new fertility.  <b>You're in heat, and pregnable in several senses of the word!</b>");
                    // Also make a permanent nudge.
                    player.fertility++;
                }
                changes++;
            }
        }
        //bodypart changes:
        //gain ears
        if (player.ears.type != Ears.MOUSE && changes < changeLimit && rand(3) == 0) {
            outputText("[pg]");
            transformations.EarsMouse.applyEffect();
            changes++;
        }
        //gain tail
        //from no tail
        if (player.ears.type == Ears.MOUSE && player.tailType != Tail.MOUSE && changes < changeLimit && rand(3) == 0 && type == 0) {
            outputText("[pg]");
            transformations.TailMouse.applyEffect();
            changes++;
        }
        if (player.ears.type == Ears.MOUSE && player.tailType != Tail.HINEZUMI && changes < changeLimit && rand(3) == 0 && type == 1) {
            outputText("[pg]");
            transformations.TailHinezumi.applyEffect();
            changes++;
        }
        //gain legs
        if (player.lowerBody != LowerBody.MOUSE && player.tailType == Tail.MOUSE && changes < changeLimit && rand(3) == 0 && type == 0) {
            outputText("[pg]");
            transformations.LowerBodyMouse.applyEffect();
        }
        if (player.lowerBody != LowerBody.HINEZUMI && player.tailType == Tail.HINEZUMI && changes < changeLimit && rand(3) == 0 && type == 1) {
            outputText("[pg]");
            transformations.LowerBodyHinezumi.applyEffect();
        }
        //gain arms
        if (player.arms.type != Arms.HINEZUMI && player.lowerBody == LowerBody.HINEZUMI && changes < changeLimit && rand(3) == 0 && type == 1) {
            outputText("[pg]");
            transformations.ArmsHinezumi.applyEffect();
        }
        //get hinezumi eyes
        if (transformations.EyesHinezumi.isPossible() && transformations.EyesHuman.isPresent() && rand(3) == 0 && changes < changeLimit && type == 1) {
            outputText("[pg]");
            transformations.EyesHinezumi.applyEffect();
            changes++;
        }
        //Remove odd eyes
        if (player.eyes.type != Eyes.HUMAN && player.eyes.type != Eyes.HINEZUMI && rand(2) == 0 && changes < changeLimit && type == 1) {
            outputText("[pg]");
            transformations.EyesHuman.applyEffect();
            changes++;
        }
        //Hair
        var Hinezumi_HairColor:Array = ["red", "orange", "platinum crimson", "pinkish orange"];
        var color1:String = randomChoice(Hinezumi_HairColor);
        if ((player.faceType == Face.BUCKTEETH || player.faceType == Face.MOUSE) && transformations.HairBurning.isPossible() && changes < changeLimit && rand(3) == 0 && type == 1) {
            player.hairColor = color1;
            outputText("[pg]");
            transformations.HairBurning.applyEffect();
            changes++;
        }
        //get fur
        if ((!player.isFurCovered() || (player.isFurCovered() && (player.coatColor != "brown" && player.coatColor != "white"))) && changes < changeLimit && rand(3) == 0) {
            if (rand(10) < 8) {
                player.coatColor = "brown";
            } else {
                player.coatColor = "white";
            }
            //from skinscales
            if (!player.isFurCovered()) {
                outputText("[pg]");
                transformations.SkinFur(Skin.COVERAGE_COMPLETE).applyEffect();
            }
            //from other color fur
            else {
                player.furColor = color1;
                outputText("[pg]Your fur stands on end, as if trying to leap from your body - which it does next.  You watch, dumb with shock, as your covering deserts you, but it's quickly replaced with another layer of " + player.furColor + " fuzz coming in behind it that soon grows to full-fledged fur.");
            }
            changes++;
        }
        //get partial fur form full or full from partial fur
        if (player.isFurCovered() && rand(3) == 0 && changes < changeLimit) {
            if (player.skin.coverage == Skin.COVERAGE_COMPLETE || player.skin.coverage == Skin.COVERAGE_HIGH) {
                outputText("[pg]What used to be a dense coat of fur begins to fall in patches on the ground leaving you with just enough fur to cover some area of your body.  <b>Some area of your body are now partially covered with fur!</b>");
                player.skin.coverage = Skin.COVERAGE_LOW;
                changes++;
            } else {
                outputText("[pg]You feel your skin tickle as more fur grows to cover the areas you did not already had fur at. Guess you have truly joined the furry club now.  <b>Your skin is now entirely coated with fur.</b>");
                player.skin.coverage = Skin.COVERAGE_COMPLETE;
                changes++;
            }
        }
        //get teeth - from human, bunny, coonmask, or other humanoid teeth faces
        if (player.ears.type == Ears.MOUSE && (player.faceType == Face.HUMAN || player.faceType == Face.SHARK_TEETH || player.faceType == Face.BUNNY || player.faceType == Face.SPIDER_FANGS || player.faceType == Face.RACCOON_MASK) && rand(3) == 0 && changes < changeLimit) {
            outputText("[pg]");
            transformations.FaceBuckteeth.applyEffect();
            changes++;
        }
        //get mouse muzzle from mouse teeth or other muzzle
        if (player.isFurCovered() && player.faceType != Face.MOUSE && (player.faceType != Face.HUMAN || player.faceType != Face.SHARK_TEETH || player.faceType != Face.BUNNY || player.faceType != Face.SPIDER_FANGS || player.faceType != Face.RACCOON_MASK) && rand(3) == 0 && changes < changeLimit) {
            outputText("[pg]");
            transformations.FaceMouse.applyEffect();
            changes++;
        }
        //get mouse teeth from mouse muzzle
        if (player.isFurCovered() && player.faceType == Face.MOUSE && rand(3) == 0 && changes < changeLimit) {
            outputText("[pg]Your mouse face begins to change as if melting. When you pass your hand over it you discover to your surprise its back to being human.or well it would be if not for your buck teeth way larger than normal.  <b>Your face is now human save for your two incisor like buck teeth.</b>");
            transformations.FaceBuckteeth.applyEffect(false);
            changes++;
        }
        player.refillHunger(10);
        flags[kFLAGS.TIMES_TRANSFORMED] += changes;
    }

    //Demon
    private function demonChanges(player:Player):void {
        //Change tail if already horned.
        if (player.tailType != Tail.DEMONIC && player.horns.count > 0) {
            outputText("[pg]");
            transformations.TailDemonic.applyEffect();
            dynStats("cor", 4);
            flags[kFLAGS.TIMES_TRANSFORMED]++;
        }
        //grow horns!
        if (player.horns.count == 0 || (rand(player.horns.count + 3) == 0 && player.horns.count < 12) && player.horns.type != Horns.ORCHID) {
            outputText("[pg]");
            transformations.HornsDemonic.applyEffect();
            dynStats("cor", 3);
            flags[kFLAGS.TIMES_TRANSFORMED]++;
        }
        //Nipples Turn Back:
        if (player.hasStatusEffect(StatusEffects.BlackNipples) && rand(2) == 0) {
            outputText("[pg]Something invisible brushes against your " + nippleDescript(0) + ", making you twitch.  Undoing your clothes, you take a look at your chest and find that your nipples have turned back to their natural flesh colour.");
            player.removeStatusEffect(StatusEffects.BlackNipples);
            flags[kFLAGS.TIMES_TRANSFORMED]++;
        }
        //remove fur
        if (!player.hasPlainSkinOnly() && rand(2) == 0) {
            outputText("[pg]");
            if (player.isFurCovered()) outputText("Your skin suddenly feels itchy as your fur begins falling out in clumps, <b>revealing inhumanly smooth skin</b> underneath.");
            if (player.isScaleCovered()) outputText("Your scales begin to itch as they begin falling out in droves, <b>revealing your inhumanly smooth " + player.skinColor + " skin</b> underneath.");
            player.skin.setBaseOnly({type: Skin.PLAIN});
            flags[kFLAGS.TIMES_TRANSFORMED]++;
        }
        //Demon face
        if (player.faceType != Face.HUMAN && player.faceType != Face.DEMON && rand(2) == 0) {
            outputText("[pg]");
            transformations.FaceHuman.applyEffect();
            flags[kFLAGS.TIMES_TRANSFORMED]++;
        }
        if (player.faceType == Face.HUMAN && rand(2) == 0) {
            outputText("[pg]");
            transformations.FaceDemon.applyEffect();
            flags[kFLAGS.TIMES_TRANSFORMED]++;
        }
        //Demon tongue
        if (player.tongue.type != Tongue.DEMONIC && rand(2) == 0) {
            outputText("[pg]");
            transformations.TongueDemonic.applyEffect();
            flags[kFLAGS.TIMES_TRANSFORMED]++;
        }
		//Demon/Devil eyes
		if (player.faceType == Face.DEMON && (transformations.EyesDemon.isPossible() || transformations.EyesDevil.isPossible() || transformations.EyesDemonColors.isPossible()) && changes < changeLimit && rand(3) == 0) {
			if (transformations.EyesDemonColors.isPossible()) {
				transformations.EyesDemonColors.applyEffect();
			}
			if (transformations.EyesDemon.isPossible() || transformations.EyesDevil.isPossible()) {
				if (rand(2) == 0) transformations.EyesDemon.applyEffect();
				else transformations.EyesDevil.applyEffect();
			}
			changes++;
		}
        //-Remove feather-arms (copy this for goblin ale, mino blood, equinum, centaurinum, canine pepps, demon items)
        if (changes < changeLimit && !InCollection(player.arms.type, Arms.HUMAN) && rand(4) == 0) {
            outputText("[pg]");
            transformations.ArmsHuman.applyEffect();
            changes++;
        }
		//arms changes - requires furless
		if (player.hasPlainSkinOnly() && player.arms.type == Arms.HUMAN && player.arms.type != Arms.DEMON && rand(3) == 0) {
			outputText("[pg]");
            transformations.ArmsDemon.applyEffect();
            changes++;
		}
        //foot changes - requires furless
        if (player.hasPlainSkinOnly() && rand(3) == 0) {
            //Males/genderless get clawed feet
            if (player.gender <= 1 || (player.gender == 3 && player.mf("m", "f") == "m")) {
                if (player.lowerBody != LowerBody.DEMONIC_CLAWS) {
                    outputText("[pg]");
                    transformations.LowerBodyDemonClawed.applyEffect();
                }
            }
            //Females/futa get high heels
            else if (player.lowerBody != LowerBody.DEMONIC_HIGH_HEELS && player.lowerBody != LowerBody.DEMONIC_GRACEFUL_FEET) {
                outputText("[pg]");
                if (rand(2) == 0) transformations.LowerBodyDemonHighHeels.applyEffect();
				else transformations.LowerBodyDemonGracefulFeet.applyEffect();
            }
            flags[kFLAGS.TIMES_TRANSFORMED]++;
        }
        //Demon wings
        if ((InCollection(player.wings.type, Wings.DRACONIC_LARGE, Wings.BEE_LARGE, Wings.MANTIS_LARGE, Wings.MANTICORE_LARGE) && player.cor >= (50-player.corruptionTolerance) || player.wings.type == Wings.BAT_LIKE_TINY && player.cor >= (75-player.corruptionTolerance)) && rand(3) == 0) {
            outputText("[pg]");
            transformations.WingsDemonicLarge.applyEffect();
            flags[kFLAGS.TIMES_TRANSFORMED]++;
        }
        if ((player.wings.type == Wings.DRACONIC_SMALL || player.wings.type == Wings.BEE_SMALL || player.wings.type == Wings.MANTIS_SMALL || player.wings.type == Wings.MANTICORE_SMALL) && player.cor >= (50-player.corruptionTolerance) && rand(3) == 0) {
            outputText("[pg]");
            transformations.WingsDemonicTiny.applyEffect();
            flags[kFLAGS.TIMES_TRANSFORMED]++;
        }
        if (player.wings.type == Wings.NONE && player.cor >= (50-player.corruptionTolerance) && rand(3) == 0) {
            outputText("[pg]");
            transformations.WingsDemonicTiny.applyEffect();
            flags[kFLAGS.TIMES_TRANSFORMED]++;
        }
        if (!InCollection(player.wings.type, [Wings.NONE, Wings.BAT_LIKE_LARGE, Wings.BAT_LIKE_TINY]) && rand(3) == 0) {
            outputText("[pg]");
            transformations.WingsNone.applyEffect();
            flags[kFLAGS.TIMES_TRANSFORMED]++;
        }
    }

    //Ferret Fruit
    public function ferretTF(player:Player):void {
        //CoC Ferret TF (Ferret Fruit)
        //Finding Ferret Fruit
        //- Ferret Fruit may be randomly found while exploring the plains.
        //- Upon finding Ferret Fruit: \"While searching the plains, you find an odd little tree with a curved trunk. The shape of its fruit appears to mimic that of the tree. A few of the fruits seem to have fallen off. You brush the dirt off of one of the fruits before placing in in your (x) pouch. (if there is no room in your inventory, you get the generic option to use now or abandon)
        //- If you hover over the fruit in your inventory, this is its description:  \"This fruit is curved oddly, just like the tree it came from.  The skin is fuzzy and brown, like the skin of a peach.\"
        //-Upon eating the fruit:
        clearOutput();
        outputText("Feeling parched, you gobble down the fruit without much hesitation. Despite the skin being fuzzy like a peach, the inside is relatively hard, and its taste reminds you of that of an apple.  It even has a core like an apple. Finished, you toss the core aside.");
        //BAD END:
        if (player.racialScore(Races.FERRET, false) >= 6 && !player.hasPerk(PerkLib.TransformationResistance)) {
            if (!player.hasStatusEffect(StatusEffects.TFWarning) || player.getStatusValue(StatusEffects.TFWarning, 1) != Races.FERRET.id) {
                player.removeStatusEffect(StatusEffects.TFWarning);
                player.createStatusEffect(StatusEffects.TFWarning, Races.FERRET.id, 0, BAD_END_COOLDOWN, 0);
            } else {
                player.changeStatusValue(StatusEffects.TFWarning, 3, BAD_END_COOLDOWN);
                player.addStatusValue(StatusEffects.TFWarning, 2, 1);
                if (player.getStatusValue(StatusEffects.TFWarning, 2) >= 3 && rand(3) == 0) {
                    outputText("[pg]As you down the fruit, you begin to feel all warm and fuzzy inside.  You flop over on your back, eagerly removing your clothes.  You laugh giddily, wanting nothing more than to roll about happily in the grass.  Finally finished, you attempt to get up, but something feels...  different.  Try as you may, you find yourself completely unable to stand upright for a long period of time.  You only manage to move about comfortably on all fours.  Your body now resembles that of a regular ferret.  That can’t be good!  As you attempt to comprehend your situation, you find yourself less and less able to focus on the problem.  Your attention eventually drifts to a rabbit in the distance.  You lick your lips. Never mind that, you have warrens to raid!");
                    EventParser.gameOver();
                    return;
                }
            }
            outputText("[pg]You find yourself staring off into the distance, dreaming idly of chasing rabbits through a warren.  You shake your head, returning to reality.  <b>Perhaps you should cut back on all the Ferret Fruit?</b>");
            player.addCurse("int", (5 + rand(3)), 1);
        } else player.removeStatusEffect(StatusEffects.TFWarning);
        var changes:int = 0;
        var changeLimit:int = 1;
        var temp:int = 0;
        var x:int = 0;
        if (rand(2) == 0) changeLimit++;
        if (rand(2) == 0) changeLimit++;
        if (rand(2) == 0) changeLimit++;
        changeLimit += player.additionalTransformationChances;
        //Ferret Fruit Effects
        //- + Thin:
        if (player.thickness > 15 && changes < changeLimit && rand(3) == 0) {
            outputText("[pg]Each movement feels a tiny bit easier than the last. Did you just lose a little weight!? (+2 thin)");
            player.thickness -= 2;
            changes++;
        }
        //- If speed is > 80, increase speed:
        if (rand(3) == 0 && changes < changeLimit && MutagenBonus("spe", 1)) {
            outputText("[pg]Your muscles begin to twitch rapidly, but the feeling is not entirely unpleasant.  In fact, you feel like running.");
            changes++;
        }
		if (player.blockingBodyTransformations()) changeLimit = 0;
        //- If male with a hip rating >4 or a female/herm with a hip rating >6:
        if (((!player.hasCock() && player.hips.type > 6) || (player.hasCock() && player.hips.type > 4)) && rand(3) == 0 && changes < changeLimit) {
            outputText("[pg]A warm, tingling sensation arises in your [hips].  Immediately, you reach down to them, concerned.  You can feel a small portion of your [hips] dwindling away under your hands.");
            player.hips.type--;
            if (player.hips.type > 10) player.hips.type--;
            if (player.hips.type > 15) player.hips.type--;
            if (player.hips.type > 20) player.hips.type--;
            if (player.hips.type > 23) player.hips.type--;
            changes++;
        }
        //- If butt rating is greater than \"petite\":
        if (player.butt.type >= 8 && rand(3) == 0 && changes < changeLimit) {
            outputText("[pg]You cringe as your [butt] begins to feel uncomfortably tight.  Once the sensation passes, you look over your shoulder, inspecting yourself.  It would appear that your ass has become smaller!");
            player.butt.type--;
            if (player.butt.type > 10) player.butt.type--;
            if (player.butt.type > 15) player.butt.type--;
            if (player.butt.type > 20) player.butt.type--;
            if (player.butt.type > 23) player.butt.type--;
            changes++;
        }
        //-If male with breasts or female/herm with breasts > B cup:
        if (!flags[kFLAGS.HYPER_HAPPY] && (player.biggestTitSize() > 2 || (player.hasCock() && player.biggestTitSize() >= 1)) && rand(2) == 0 && changes < changeLimit) {
            outputText("[pg]You cup your tits as they begin to tingle strangely.  You can actually feel them getting smaller in your hands!");
            for (x = 0; x < player.bRows(); x++) {
                if (player.breastRows[x].breastRating > 2 || (player.hasCock() && player.breastRows[x].breastRating >= 1)) {
                    player.breastRows[x].breastRating--;
                }
            }
            changes++;
            //(this will occur incrementally until they become flat, manly breasts for males, or until they are A or B cups for females/herms)
        }
        //-If penis size is > 6 inches:
        if (player.hasCock()) {
            //Find longest cock
            temp = -1;
            for (x = 0; x < player.cockTotal(); x++) {
                if (temp == -1 || player.cocks[x].cockLength > player.cocks[temp].cockLength) temp = x;
            }
            if (temp >= 0 && rand(2) == 0 && changes < changeLimit) {
                if (player.cocks[temp].cockLength > 6 && !flags[kFLAGS.HYPER_HAPPY]) {
                    outputText("[pg]A pinching sensation racks the entire length of your " + cockDescript(temp) + ".  Within moments, the sensation is gone, but it appears to have become smaller.");
                    player.cocks[temp].cockLength--;
                    if (rand(2) == 0) player.cocks[temp].cockLength--;
                    if (player.cocks[temp].cockLength >= 9) player.cocks[temp].cockLength -= rand(3) + 1;
                    if (player.cocks[temp].cockLength / 6 >= player.cocks[temp].cockThickness) {
                        outputText("  Luckily, it doen’t seem to have lost its previous thickness.");
                    } else {
                        player.cocks[temp].cockThickness = player.cocks[temp].cockLength / 6;
                    }
                    changes++;
                }
            }
        }
        //-If the PC has quad nipples:
        if (player.averageNipplesPerBreast() > 1 && rand(4) == 0 && changes < changeLimit) {
            transformations.NipplesPerBreastOne.applyEffect();
            changes++;
        }
        //If the PC has gills:
        if (player.hasGills() && rand(4) == 0 && changes < changeLimit) {
            outputText("[pg]");
            transformations.GillsNone.applyEffect();
            changes++;
        }
        if (player.hairType == Hair.ANEMONE && rand(4) == 0 && changes < changeLimit) {
            outputText("[pg]");
            transformations.HairHuman.applyEffect();
            changes++;
        }
        //If the PC has goo hair:
        if (player.hairType == Hair.GOO && rand(3) == 0 && changes < changeLimit) {
            outputText("[pg]");
            transformations.HairHuman.applyEffect();
            changes++;
        }
        //If the PC has four eyes:
        if (player.eyes.type == Eyes.SPIDER && rand(3) == 0 && changes < changeLimit) {
            outputText("[pg]Your two forehead eyes start throbbing painfully, your sight in them eventually going dark.  You touch your forehead to inspect your eyes, only to find out that they have disappeared.  <b>You only have two eyes now!</b>");
            outputText("[pg]");
            transformations.EyesHuman.applyEffect();
            changes++;
        }
        if (player.ears.type == Ears.FERRET && transformations.EyesHuman.isPresent() && transformations.EyesWeasel.isPossible() && changes < changeLimit && rand(3) == 0) {
            outputText("[pg]");
            if (transformations.EyesKamaitachiColors.isPossible()) {
                outputText("[pg]");
                transformations.EyesKamaitachiColors.applyEffect();
            }
            transformations.EyesWeasel.applyEffect();
            changes++;
        }
        //Go into heat
        if (rand(3) == 0 && changes < changeLimit) {
            if (player.goIntoHeat(true)) {
                changes++;
            }
        }
        //Turn ferret mask to full furface.
        if (player.faceType == Face.FERRET_MASK && player.isFurCovered() && player.ears.type == Ears.FERRET && player.tailType == Tail.FERRET && player.lowerBody == LowerBody.FERRET && rand(4) == 0 && changes < changeLimit) {
            outputText("[pg]");
            transformations.FaceFerret.applyEffect();
            changes++;
        }
        //If face is human:
        if (player.faceType == 0 && rand(3) == 0 && changes < changeLimit) {
            outputText("[pg]");
            transformations.FaceFerretMask.applyEffect();
            changes++;
        }
        //If face is not ferret, has ferret ears, tail, and legs:
        if (player.faceType != Face.HUMAN && player.faceType != Face.FERRET_MASK && player.faceType != Face.FERRET && rand(3) == 0 && changes < changeLimit) {
            outputText("[pg]");
            transformations.FaceHuman.applyEffect();
            changes++;
        }
        //No fur, has ferret ears, tail, and legs:
        if (!player.isFurCovered() && player.ears.type == Ears.FERRET && player.tailType == Tail.FERRET && player.lowerBody == LowerBody.FERRET && rand(4) == 0 && changes < changeLimit) {
            if (player.hairColor != "sandy brown" && player.hairColor != "silver" && player.hairColor != "white" && player.hairColor != "brown") {
                outputText("[pg]");
                transformations.HairChangeColor(["sandy brown", "silver", "white", "brown"]).applyEffect();
            }
            outputText("[pg]");
            transformations.SkinFur(Skin.COVERAGE_COMPLETE, {color: player.hairColor}).applyEffect();
            changes++;
        }
        //Tail TFs!
        if (player.tailType != Tail.FERRET && player.ears.type == Ears.FERRET && rand(3) == 0 && changes < changeLimit) {
            outputText("[pg]");
            transformations.TailFerret.applyEffect();
            changes++;
        }
                //If naga, has ferret ears:
        //(NOTE: this is the only exception to the legs coming after the tail, as the ferret tail will only go away right after it appears because of your snake lower half)
        else if (player.isNaga() && player.ears.type == Ears.FERRET && rand(4) == 0 && changes < changeLimit) {
            outputText("[pg]");
            transformations.LowerBodyFerret.applyEffect();
            changes++;
        } else if (player.lowerBody == LowerBody.MELKIE) {
            outputText("[pg]");
            transformations.LowerBodyFerret.applyEffect();
            changes++;
        }
        //If legs are not ferret, has ferret ears and tail
        if (player.lowerBody != LowerBody.FERRET && player.ears.type == Ears.FERRET && player.tailType == Tail.FERRET && rand(4) == 0 && changes < changeLimit) {
            outputText("[pg]");
            transformations.LowerBodyFerret.applyEffect();
            changes++;
        }
        //If ears are not ferret:
        if (player.ears.type != Ears.FERRET && rand(3) == 0 && changes < changeLimit) {
            outputText("[pg]");
            transformations.EarsFerret.applyEffect();
            changes++;
        }
        //If no other effect occurred, fatigue decreases:
        if (changes == 0) {
            outputText("[pg]Your eyes widen.  With the consumption of the fruit, you feel much more energetic.  You’re wide awake now!");
            changes++;
            fatigue(-(10*player.postConsumptionMlt()));
        }
        player.refillHunger(20);
        flags[kFLAGS.TIMES_TRANSFORMED] += changes;
    }

    public function pigTruffle(boar:Boolean, player:Player):void {
        var changes:int = 0;
        var changeLimit:int = 1;
        if (rand(2) == 0) changeLimit++;
        if (rand(2) == 0) changeLimit++;
        if (rand(2) == 0) changeLimit++;
        if (boar) changeLimit++;
        changeLimit += player.additionalTransformationChances;
        outputText("You take a bite into the pigtail truffle. It oddly tastes like bacon. You eventually finish eating. ");
        player.refillHunger(20);
        if (rand(3) == 0 && changes < changeLimit && MutagenBonus("str", 1)) {
            outputText("[pg]You feel your muscles growing with newfound might.");
            changes++;
        }
        if (rand(2) == 0 && changes < changeLimit && MutagenBonus("tou", 1)) {
            outputText("[pg]Your body and skin both thicken noticeably.  You pinch your [skin.type] experimentally and marvel at how much tougher it has gotten.");
            changes++;
        }
        if (player.spe > 50 && changes < changeLimit && rand(4) == 0) {
            outputText("[pg]You start to feel sluggish and cold.  Lying down to bask in the sun might make you feel better.");
            player.addCurse("spe", (1 + rand(3)), 1);
            changes++;
        }
        if (player.inte > 15 && rand(3) == 0 && changes < changeLimit) {
            outputText("[pg]You shake your head and struggle to gather your thoughts, feeling a bit slow.");
            player.addCurse("int", (1 + rand(3)), 1);
            changes++;
        }
        //-----------------------
        // BAD END ALERT!
        //-----------------------
        if (player.isRace(Races.PIG, 1, false) && !player.hasPerk(PerkLib.TransformationResistance)) {
            if (!player.hasStatusEffect(StatusEffects.TFWarning) || player.getStatusValue(StatusEffects.TFWarning, 1) != Races.PIG.id) {
                player.removeStatusEffect(StatusEffects.TFWarning);
                player.createStatusEffect(StatusEffects.TFWarning, Races.PIG.id, 0, BAD_END_COOLDOWN, 0);
            } else {
                player.changeStatusValue(StatusEffects.TFWarning, 3, BAD_END_COOLDOWN);
                player.addStatusValue(StatusEffects.TFWarning, 2, 1);
                if (player.getStatusValue(StatusEffects.TFWarning, 2) >= 3 && rand(3) == 0) {
                    outputText("[pg]As you down the last of your truffle, your entire body begins to convulse violently. Your vision becomes blurry, and you black out.");
                    outputText("[pg]When you awaken, you are greeted by a large dog licking at your face. The dog seems oddly familiar. \"<i>Bessy, whatcha doin’ girl?</i>\" a voice calls. The voice seems familiar as well. A funny-looking pig on two legs soon appears at the dog’s side. \"<i>Now, now, what do we have here?</i>\" The pig inspects you for a moment, eventually finding a hint of pigtail truffle on your snout.");
                    outputText("[pg]\"<i>Ah no...</i>\" he says sadly, shaking his head. \"<i>Come with me little " + player.mf("guy", "gal") + ",  I’ve got a place for ya.</i>\"  He then leads you to his shack, nestled in a small clearing in a nearby forest. \"<i>You don’t need ‘ta worry about a thing.  Come ‘ta think of it...</i>\"  he taps his chin for a moment,  \"<i>I know what I could use you for. You could be my own personal truffle hog! The more truffles, the better!</i>\"");
                    outputText("[pg]You take wonderfully to your new job. Finding truffles is fun, and the funny pig takes great care of you. You couldn’t ask for better. Sure, the world is full of demons and the like, but here, you’re safe, and that’s all you care about.");
                    EventParser.gameOver();
                    return;
                }
            }
            outputText("[pg]You find yourself idly daydreaming of flailing about in the mud, letting go of all of your troubles. Eventually, you shake off the thought. Why would you do something like that? Maybe you should cut back on all the truffles?");
            player.addCurse("int", 3, 1);
        } else player.removeStatusEffect(StatusEffects.TFWarning);
        //-----------------------
        // SIZE MODIFICATIONS
        //-----------------------
        //Increase thickness
        if (rand(3) == 0 && changes < changeLimit && player.thickness < 75) {
            outputText(player.modThickness(player.maxThicknessCap(), 3));
            changes++;
        }
        //Decrease muscle tone
        if (rand(3) == 0 && changes < changeLimit && player.gender >= 2 && player.tone > 20) {
            outputText(player.modTone(20, 4));
            changes++;
        }
        //Increase hip rating
        if (rand(3) == 0 && changes < changeLimit && player.gender >= 2 && player.hips.type < 15) {
            outputText("[pg]Your gait shifts slightly to accommodate your widening [hips]. The change is subtle, but they're definitely broader.");
            player.hips.type++;
            changes++;
        }
        //Increase ass rating
        if (rand(3) == 0 && changes < changeLimit && player.butt.type < 12) {
            outputText("[pg]When you stand back, up your [ass] jiggles with a good bit of extra weight.");
            player.butt.type++;
            changes++;
        }
        //Increase ball size if you have balls.
        if (rand(3) == 0 && changes < changeLimit && player.hasBalls() && player.ballSize < 4) {
            if (player.ballSize < 3)
                outputText("[pg]A flash of warmth passes through you and a sudden weight develops in your groin. You pause to examine the changes and your roving fingers discover your " + (player.balls == 4 ? "quartette" : "duo") + " of [balls] have grown larger than a human’s.");
            else
                outputText("[pg]A sudden onset of heat envelops your groin, focusing on your ballsack. Walking becomes difficult as you discover your " + (player.balls == 4 ? "quartette" : "duo") + " of testicles have enlarged again.");
            player.ballSize++;
            changes++;
        }
		if (player.blockingBodyTransformations()) changeLimit = 0;
        //-----------------------
        // TRANSFORMATIONS
        //-----------------------
        //Gain pig cock, independent of other pig TFs.
        if (rand(3) == 0 && changes < changeLimit && player.cocks.length > player.pigCocks()) {
            transformations.CockPig(player.findFirstCockNotInType([CockTypesEnum.PIG])).applyEffect();
            changes++;
        }
        //Gain pig ears!
        if (rand(boar ? 2 : 3) == 0 && changes < changeLimit && player.ears.type != Ears.PIG) {
            outputText("[pg]");
			transformations.EarsPig.applyEffect();
            changes++;
        }
        //Gain pig tail if you already have pig ears!
        if (rand(boar ? 2 : 3) == 0 && changes < changeLimit && player.ears.type == Ears.PIG && player.tailType != Tail.PIG) {
            outputText("[pg]");
            transformations.TailPig.applyEffect();
            changes++;
        }
        //Gain pig tail even when centaur, needs pig ears.
        if (rand(boar ? 2 : 3) == 0 && changes < changeLimit && player.ears.type == Ears.PIG && player.tailType != Tail.PIG && player.isTaur() && (player.lowerBody == LowerBody.HOOFED || player.lowerBody == LowerBody.PONY)) {
            outputText("[pg]");
            transformations.TailPig.applyEffect();
            changes++;
        }
        //Turn your lower body into pig legs if you have pig ears and tail.
        if (rand(boar ? 2 : 3) == 0 && changes < changeLimit && player.ears.type == Ears.PIG && player.tailType == Tail.PIG && player.lowerBody != LowerBody.CLOVEN_HOOFED) {
            outputText("[pg]");
            transformations.LowerBodyClovenHoofed(2).applyEffect();
            changes++;
        }
        //Gain pig/boar arms
        if (rand(2) == 0 && changes < changeLimit && player.tailType == Tail.PIG && player.lowerBody == LowerBody.CLOVEN_HOOFED && (player.arms.type != Arms.PIG || player.arms.type != Arms.BOAR)) {
            outputText("[pg]");
            if (boar) {
                transformations.ArmsBoar.applyEffect();
                changes++;
            } else {
                transformations.ArmsPig.applyEffect();
                changes++;
            }
        }
        //-Remove feather-arms (copy this for goblin ale, mino blood, equinum, centaurinum, canine pepps, demon items)
        if (changes < changeLimit && !InCollection(player.arms.type, Arms.HUMAN, Arms.PIG, Arms.BOAR) && rand(3) == 0) {
            outputText("[pg]");
            transformations.ArmsHuman.applyEffect();
            changes++;
        }
        //Gain pig/boar face when you have the first three pig TFs.
        if (rand(2) == 0 && changes < changeLimit && player.ears.type == Ears.PIG && player.tailType == Tail.PIG && player.lowerBody == LowerBody.CLOVEN_HOOFED && (player.faceType != Face.PIG || player.faceType != Face.BOAR)) {
            if (boar) {
                outputText("[pg]");
                transformations.FaceBoar.applyEffect();
                changes++;
            } else {
                outputText("[pg]");
                transformations.FacePig.applyEffect();
                changes++;
            }
        }
        //Change skin to normal
        if (!player.hasPlainSkinOnly() && rand(2) == 0 && changes < changeLimit) {
            if (player.skin.base.pattern != Skin.PATTERN_NONE) {
                outputText("[pg]");
                transformations.SkinPatternNone.applyEffect();
            }
            if (player.skinAdj != "") player.skinAdj = "";
            outputText("[pg]");
            transformations.SkinPlain.applyEffect();
            changes++;
        }
        if (boar && rand(2) == 0 && player.hasPlainSkinOnly() && !player.isFurCovered() && changes < changeLimit) {
            outputText("[pg]");
            transformations.SkinFur(Skin.COVERAGE_COMPLETE, {colors: ["brown", "dark brown", "black", "red", "gray"]}).applyEffect();
            changes++;
        }
        //Change skin colour
        if (rand(boar ? 2 : 3) == 0 && changes < changeLimit) {
            var skinToBeChosen:String;
            if (boar) skinToBeChosen = randomChoice("pink", "dark blue", "black");
            else skinToBeChosen = randomChoice("pink", "tan", "sable");
            outputText("[pg]Your skin tingles ever so slightly as your skin’s color changes before your eyes. As the tingling diminishes, you find that your skin has turned " + skinToBeChosen + ".");
            player.skinColor = skinToBeChosen;
            changes++;
        }
        if (changes == 0) {
            outputText("[pg]Oddly, you do not feel any changes. Perhaps you're lucky? Or not.");
        }
        flags[kFLAGS.TIMES_TRANSFORMED] += changes;
    }

    public function winterPudding(player:Player, returnToBakery:Boolean = false):void {
        outputText("You stuff the stodgy pudding down your mouth, the taste of brandy cream sauce and bitter black treacle sugar combining in your mouth.  You can tell by its thick spongy texture that it's far from good for you, so its exclusivity is more than likely for the best.");
        player.refillHunger(30);
        if (player.thickness < 100 || player.tone > 0) {
            //outputText("[pg]You feel your waist protrude slightly.  Did you just put on a little weight?  It sure looks like it.");
            outputText(player.modTone(0, 2));
            outputText(player.modThickness(player.maxThicknessCap(), 2));
        }
        outputText("[pg]You lick your lips clean, savoring the taste of the Winter Pudding.  You feel kinda antsy...");
        //[Decrease player tone by 5, Increase Lust by 20, Destroy item.]
        dynStats("lus", (10 + player.lib / 10), "scale", false);

        //[Optional, give the player antlers! (30% chance) Show this description if the player doesn't have horns already.]
        if (player.horns.count == 0 && rand(2) == 0) {
            outputText("[pg]");
            //[Player horns type changed to Antlers.]
            transformations.HornsAntlers.applyEffect();
            flags[kFLAGS.TIMES_TRANSFORMED]++;
        }
        //[Show this description instead if the player already had horns when the transformation occurred.]
        else if (player.horns.count > 0 && player.horns.type != Horns.ANTLERS && player.horns.type != Horns.ORCHID && rand(2) == 0) {
            outputText("[pg]");
            //[Player horns type changed to Antlers.]
            transformations.HornsAntlers.applyEffect();
            flags[kFLAGS.TIMES_TRANSFORMED]++;
        }
        if (returnToBakery) {
            doNext(SceneLib.telAdre.bakeryScene.bakeryuuuuuu);
        }
    }

    public function scyllaInk(type:Number, player:Player):void {
        //'type' refers to the variety of ink.
        //0 == black ink (female scylla TF)
        //1 == grey ink (herm scylla TF)
        //2 == white ink (male scylla TF)
        player.slimeFeed();
        //init variables
        var changes:Number = 0;
        var changeLimit:Number = 2;
        var temp:Number = 0;
        var temp2:Number = 0;
        var temp3:Number = 0;
        //Randomly choose affects limit
        if (rand(2) == 0) changeLimit++;
        if (rand(2) == 0) changeLimit++;
        if (rand(2) == 0) changeLimit++;
        changeLimit += player.additionalTransformationChances;
        //clear screen
        clearOutput();
        outputText("The ink taste salty and slimy, you really think you could use a full glass of fresh water to wash your aching throat.");

        //Statistical changes:
        //-Raises intelligence to 80.
        if (changes < changeLimit && rand(3) == 0 && MutagenBonus("int", 1)) {
            outputText("[pg]As you finish drinking the ink, you suddenly feel more cunning and much smarter.");
            changes++;
        }
        //-Raises strength to 90.
        if (rand(3) == 0 && changes < changeLimit && MutagenBonus("str", 1)) {
            outputText("[pg]You suddenly feel like you could do a wrestling contest with anyone who ask.");
            if (player.str > 60) outputText(" Heck you feel so strong you could bend wood or even steel!");
            changes++;
        }
        //-Decrease muscle tone toward 30
        if (player.tone >= 30 && rand(4) == 0 && changes < changeLimit) {
            outputText("[pg]Your muscle start to vanish but strangely you didn't lose strength or gain any weight. Well, that was weird.");
            player.tone -= 3;
            changes++;
        }
        //-Femininity to 100 (female scylla version)
        if (type == 0 && player.femininity < 100 && changes < changeLimit && rand(3) == 0) {
            changes++;
            outputText(player.modFem(100, 3 + rand(5)));
        }
        //-Femininity to 0 (male scylla version)
        if (type == 2 && player.femininity > 0 && changes < changeLimit && rand(3) == 0) {
            changes++;
            outputText(player.modFem(0, 3 + rand(5)));
        }

        if (player.blockingBodyTransformations()) changeLimit = 0;
        //Sexual Changes:
        //FEMALE
        if (player.gender == 2 || player.gender == 3) {
            //Single vag
            if (player.vaginas.length == 1) {
                if (player.vaginas[0].vaginalWetness <= VaginaClass.WETNESS_DROOLING && changes < changeLimit && rand(2) == 0) {
                    temp = player.vaginas.length;
                    while (temp > 0) {
                        temp--;
                        if (player.vaginas[0].vaginalWetness < VaginaClass.WETNESS_DROOLING) player.vaginas[temp].vaginalWetness++;
                        changes++;
                    }
                    if (player.vaginas[0].vaginalWetness == VaginaClass.WETNESS_DROOLING) {
                        outputText("[pg]Your pussy feels hot and juicy, aroused and tender.  You cannot resist as your hands dive into your [vagina].  You quickly orgasm, squirting fluids everywhere.  <b>You are now a squirter</b>.");
                        player.orgasm();
                    }
                    if (player.vaginas[0].vaginalWetness < VaginaClass.WETNESS_DROOLING) {
                        outputText("[pg]Wow your wet down there just what on going on. When you put your hand to your " + vaginaDescript(temp) + ". Surprised you discover it's twice as more lubricated then before.");
                    }
                }
                if (player.vaginas[0].vaginalLooseness <= VaginaClass.LOOSENESS_GAPING && changes < changeLimit && rand(3) == 0) {
                    outputText("[pg]You grip your gut in pain as you feel your organs shift slightly.  When the pressure passes, you realize your [vagina] has grown larger, in depth AND size.");
                    player.vaginas[0].vaginalLooseness++;
                    changes++;
                }
                if (player.vaginas[0].vaginalLooseness == VaginaClass.LOOSENESS_GAPING_WIDE && changes < changeLimit && rand(3) == 0) {
                    transformations.VaginaScylla().applyEffect();
                    changes++;
                }
            }
            //Multicooch
            else {
                //determine least wet
                //temp - least wet
                //temp2 - saved wetness
                //temp3 - counter
                temp = 0;
                temp2 = player.vaginas[temp].vaginalWetness;
                temp3 = player.vaginas.length;
                while (temp3 > 0) {
                    temp3--;
                    if (temp2 > player.vaginas[temp3].vaginalWetness) {
                        temp = temp3;
                        temp2 = player.vaginas[temp].vaginalWetness;
                    }
                }
                if (player.vaginas[0].vaginalWetness == VaginaClass.WETNESS_DROOLING) {
                    outputText("Your pussies feel hot and juicy, aroused and tender.  You cannot resist plunging your hands inside your [vagina]s.  You quiver around your fingers, squirting copious fluids over yourself and the ground.  The fluids quickly disappear into the dirt.");
                    player.orgasm();
                    changes++;
                }
                if (player.vaginas[temp].vaginalWetness < VaginaClass.WETNESS_DROOLING && changes < changeLimit && rand(2) == 0) {
                    outputText("[pg]Wow your wet down there just what on going on. When you put your hand to one of your " + vaginaDescript(temp) + " you discover not only is it twice as more lubricated then before.");
                    player.vaginas[temp].vaginalWetness++;
                    changes++;
                }
                //determine smallest
                //temp - least big
                //temp2 - saved looseness
                //temp3 - counter
                temp = 0;
                temp2 = player.vaginas[temp].vaginalLooseness;
                temp3 = player.vaginas.length;
                while (temp3 > 0) {
                    temp3--;
                    if (temp2 > player.vaginas[temp3].vaginalLooseness) {
                        temp = temp3;
                        temp2 = player.vaginas[temp].vaginalLooseness;
                    }
                }
                if (player.vaginas[0].vaginalLooseness <= VaginaClass.LOOSENESS_GAPING && changes < changeLimit && rand(3) == 0) {
                    outputText("[pg]You grip your gut in pain as you feel your organs shift slightly.  When the pressure passes, you realize one of your " + vaginaDescript(temp) + " has grown larger, in depth AND size.");
                    player.vaginas[temp].vaginalLooseness++;
                    changes++;
                }
            }
        }
        //Feminization of males
        if (type == 0 && (player.gender == 1 || player.gender == 3) && player.cocks.length > 0 && rand(2) == 0 && !flags[kFLAGS.HYPER_HAPPY]) {
            //If the player has at least one dick, decrease the size of each slightly,
            outputText("[pg]");
            temp = 0;
            temp2 = player.cocks.length;
            temp3 = 0;
            //Find biggest cock
            while (temp2 > 0) {
                temp2--;
                if (player.cocks[temp].cockLength <= player.cocks[temp2].cockLength) temp = temp2;
            }
            //Shrink said cock
            if (player.cocks[temp].cockLength < 6 && player.cocks[temp].cockLength >= 2.9) {
                player.cocks[temp].cockLength -= .5;
                temp3 -= .5;
            }
            temp3 += player.growCock(temp, (rand(3) + 1) * -1);
            player.lengthChange(temp3, 1);
            if (player.cocks[temp].cockLength < 2) {
                transformations.CockToVagina().applyEffect();
            }
            //if the last of the player's dicks are eliminated this way, they gain a virgin vagina;
            if (player.cocks.length == 0 && !player.hasVagina()) {
                transformations.VaginaHuman().applyEffect();
                changes++;
                dynStats("lus", 10, "scale", false);
            }
        }
        //MALES
        //Masculinization of females
        if (type == 2 && (player.gender == 2 || player.gender == 3) && player.cocks.length > 0 && rand(2) == 0 && !flags[kFLAGS.HYPER_HAPPY]) {
            //Kills vagina size (and eventually the whole vagina)
            if (player.vaginas.length > 0) {
                if (player.vaginas[0].vaginalLooseness > VaginaClass.LOOSENESS_TIGHT) {
                    //tighten that bitch up!
                    outputText("[pg]Your [vagina] clenches up painfully as it tightens up, becoming smaller and tighter.");
                    player.vaginas[0].vaginalLooseness--;
                } else {
                    outputText("[pg]A tightness in your groin is the only warning you get before your <b>[vagina] disappears forever</b>!");
                    if (player.cocks.length == 0) {
                        outputText("  Strangely, your clit seems to have resisted the change, and is growing larger by the moment. Eventually it ends, <b>leaving you with a completely human penis.</b>");
                        player.createCock(player.clitLength + 2);
                        player.clitLength = .25;
                    }
                    //Goodbye womanhood!
                    player.removeVagina(0, 1);
                }
                changes++;
            }
            //-Remove extra breast rows
            if (changes < changeLimit && player.bRows() > 1 && rand(3) == 0) {
                changes++;
                outputText("[pg]You stumble back when your center of balance shifts, and though you adjust before you can fall over, you're left to watch in awe as your bottom-most " + breastDescript(player.breastRows.length - 1) + " shrink down, disappearing completely into your ");
                if (player.bRows() >= 3) outputText("abdomen");
                else outputText("chest");
                outputText(". The " + nippleDescript(player.breastRows.length - 1) + "s even fade until nothing but ");
                if (player.isFurCovered()) outputText(player.furColor + " " + player.skinDesc);
                else outputText(player.skinColor + " " + player.skinDesc);
                outputText(" remains. <b>You've lost a row of breasts!</b>");
                dynStats("sen", -5);
                player.removeBreastRow(player.breastRows.length - 1, 1);
            }
            //Shrink boobages till they are normal
            else if (rand(2) == 0 && changes < changeLimit && player.breastRows.length > 0) {
                //Single row
                if (player.breastRows.length == 1) {
                    //Shrink if bigger than B cups
                    if (player.breastRows[0].breastRating >= 1) {
                        temp = 1;
                        player.breastRows[0].breastRating--;
                        //Shrink again if huuuuge
                        if (player.breastRows[0].breastRating > 8) {
                            temp++;
                            player.breastRows[0].breastRating--;
                        }
                        //Talk about shrinkage
                        if (temp == 1) outputText("[pg]You feel a weight lifted from you, and realize your [breasts] have shrunk to " + player.breastCup(0) + "s.");
                        if (temp == 2) outputText("[pg]You feel significantly lighter.  Looking down, you realize your breasts are MUCH smaller, down to " + player.breastCup(0) + "s.");
                        changes++;
                    }

                }
                //multiple
                else {
                    //temp2 = amount changed
                    //temp3 = counter
                    temp = 0;
                    temp2 = 0;
                    temp3 = 0;
                    if (player.biggestTitSize() >= 1) outputText("\n");
                    while (temp3 < player.breastRows.length) {
                        if (player.breastRows[temp3].breastRating >= 1) {
                            player.breastRows[temp3].breastRating--;
                            temp2++;
                            outputText("\n");
                            //If this isn't the first change...
                            if (temp2 > 1) outputText("...and y");
                            else outputText("Y");
                            outputText("our " + breastDescript(temp3) + " shrink, dropping to " + player.breastCup(temp3) + "s.");
                        }
                        temp3++;
                    }
                    if (temp2 == 2) outputText("\nYou feel so much lighter after the change.");
                    if (temp2 == 3) outputText("\nWithout the extra weight you feel particularly limber.");
                    if (temp2 >= 4) outputText("\nIt feels as if the weight of the world has been lifted from your shoulders, or in this case, your chest.");
                    if (temp2 > 0) changes++;
                }
            }
        }

        //Boost vaginal capacity without gaping
        if ((type == 0 || type == 1) && changes < changeLimit && rand(3) == 0 && player.hasVagina() && player.statusEffectv1(StatusEffects.BonusVCapacity) < 200) {
            if (!player.hasStatusEffect(StatusEffects.BonusVCapacity)) player.createStatusEffect(StatusEffects.BonusVCapacity, 0, 0, 0, 0);
            player.addStatusValue(StatusEffects.BonusVCapacity, 1, 5);
            outputText("[pg]There is a sudden... emptiness within your [vagina].  Somehow you know you could accommodate even larger... insertions.");
            changes++;
        }
        //Increase player's breast size, if they are big DD or smaller
        if ((type == 0 || type == 1) && player.smallestTitSize() <= 5 && player.gender == 2 && changes < changeLimit && rand(4) == 0) {
            outputText("[pg]After drinking it, your chest aches and tingles, and your hands reach up to scratch at it unthinkingly.  Silently, you hope that you aren't allergic to it.  Just as you start to scratch at your " + breastDescript(player.smallestTitRow()) + ", your chest pushes out in slight but sudden growth.");
            player.breastRows[player.smallestTitRow()].breastRating++;
            changes++;
        }
        //Change one prick to a vine-like tentacle cock.
        if ((type == 2 || type == 1) && rand(3) == 0 && player.cocks.length > 0) {
            if (player.tentacleCocks() < player.cockTotal()) {
                if (player.cocks.length == 1) { //Single cawks
                    transformations.CockScylla().applyEffect();
                }
                if (player.cockTotal() > 1) { //multi
                    outputText("[pg]Your feel your [cocks] bending and flexing of their own volition... looking down, you watch them morph into flexible tentacle-like shapes.  <b>You now have tentacle cocks!</b>  ");
                    for (var x:int = 0; x < player.cocks.length; x++) transformations.CockScylla(x).applyEffect(false);
                }
            }
        }
        //Grow cock(s) longer
        if ((type == 2 || type == 1) && rand(3) == 0 && player.cocks.length > 0) {
            //single cock
            if (player.cocks.length == 1) {
                temp2 = player.growCock(0, rand(4) + 3);
                temp = 0;
                dynStats("lus", 10, "scale", false);
                player.addCurse("sen", 1, 1);
            }
            //Multicock
            else {
                //Find smallest cock
                //Temp2 = smallness size
                //temp = current smallest
                temp3 = player.cocks.length;
                temp = 0;
                while (temp3 > 0) {
                    temp3--;
                    //If current cock is smaller than saved, switch values.
                    if (player.cocks[temp].cockLength > player.cocks[temp3].cockLength) {
                        temp2 = player.cocks[temp3].cockLength;
                        temp = temp3;
                    }
                }
                //Grow smallest cock!
                //temp2 changes to growth amount
                temp2 = player.growCock(temp, rand(4) + 3);
                dynStats("lus", 10, "scale", false);
                player.addCurse("sen", 1, 1);
                if (player.cocks[temp].cockThickness <= 2) player.thickenCock(temp, 1);
            }
            if (temp2 > 2) outputText("[pg]Your " + cockDescript(temp) + " tightens painfully, inches of bulging dick-flesh pouring out from your crotch as it grows longer.  Thick pre forms at the pointed tip, drawn out from the pleasure of the change.");
            if (temp2 > 1 && temp2 <= 2) outputText("[pg]Aching pressure builds within your crotch, suddenly releasing as an inch or more of extra dick-flesh spills out.  A dollop of pre beads on the head of your enlarged " + cockDescript(temp) + " from the pleasure of the growth.");
            if (temp2 <= 1) outputText("[pg]A slight pressure builds and releases as your " + cockDescript(temp) + " pushes a bit further out of your crotch.");
        }

        //Physical changes:

        //Skin
        if (player.skinAdj != "slippery" || (!player.hasPlainSkinOnly() && player.skinType != Skin.AQUA_RUBBER_LIKE) && rand(3) == 0 && changes < changeLimit) {
            outputText("[pg]");
            if (player.isFurCovered()) outputText("You suddenly start sweating abundantly as your [skin.type] fall off leaving bare the smooth skin underneath.  ");
            else if (player.isGooSkin()) outputText("Your gooey skin solidifies, thickening up as your body starts to solidify into a more normal form. Then you start sweating abundantly. ");
            else if (player.isScaleCovered()) outputText("You suddenly start sweating abundantly as your scales fall off leaving bare the smooth skin underneath.  ");
            else if (player.hasPlainSkinOnly()) outputText("You suddenly start sweating abundantly.  ");
            outputText("As much as you try to dry your skin using a cloth it remains slimy and slippery to the touch as if constantly wet! Your skin is now slippery like the one of a sea creature!");
            player.skin.setBaseOnly({type: Skin.PLAIN, adj: "slippery"});
            changes++;
        }
        //Face
        if (player.hasPlainSkinOnly() && player.skinAdj == "slippery" && player.faceType != Face.HUMAN && changes < changeLimit && rand(4) == 0) {
            outputText("[pg]");
            transformations.FaceHuman.applyEffect();
            changes++;
        }
        //Ears
        if (player.faceType == Face.HUMAN && player.ears.type != Ears.ELFIN && changes < changeLimit && rand(3) == 0) {
            outputText("[pg]");
			transformations.EarsElfin.applyEffect();
            changes++;
        }
        //Ink spray attack
        if (player.lowerBody == LowerBody.SCYLLA && !player.hasPerk(PerkLib.InkSpray)) {
            if (type == 0) {
                outputText("[pg]Your pussy suddenly start gushing around and you squirt so much your tentacles are drenched. Blushing red in embarrassment you examine the damage lifting a tentacle and suddenly a jet black shot of girl juice shoot out of your pussy like a spray dying a nearby tree black.");
                outputText(" You smell the liquid and discover your girl juice turned into actual ink! Thinking about octopus behing able to spray ink you point your pussy at a random tree and take aim. as you relax the newly discovered organ, a gush of ink splatter the tree.");
            }
			if (type == 1) {
				if (rand(2) == 0) {
					outputText("[pg]Your pussy suddenly start gushing around and you squirt so much your tentacles are drenched. Blushing red in embarrassment you examine the damage lifting a tentacle and suddenly a jet black shot of girl juice shoot out of your pussy like a spray dying a nearby tree black.");
					outputText(" You smell the liquid and discover your girl juice turned into actual ink! Thinking about octopus behing able to spray ink you point your pussy at a random tree and take aim. as you relax the newly discovered organ, a gush of ink splatter the tree.");
				}
				else {
					outputText("[pg]Your cock suddenly start leaking pre-cum around so much your front tentacles are drenched. Blushing red in embarrassment you examine the damage reaching to it and suddenly when you merely touched it a jet black shot of cum shoot out of your cock like a spray dying a nearby tree black.");
					outputText(" You smell the liquid and discover your cum turned into actual ink! Thinking about octopus behing able to spray ink you point your cock at a random tree and take aim. After moment of pumping it shoot another portion of the ink that splatter at the tree.");
				}
			}
            if (type == 2) {
                outputText("[pg]Your cock suddenly start leaking pre-cum around so much your front tentacles are drenched. Blushing red in embarrassment you examine the damage reaching to it and suddenly when you merely touched it a jet black shot of cum shoot out of your cock like a spray dying a nearby tree black.");
                outputText(" You smell the liquid and discover your cum turned into actual ink! Thinking about octopus behing able to spray ink you point your cock at a random tree and take aim. After moment of pumping it shoot another portion of the ink that splatter at the tree.");
            }
            outputText(" You think you could use this interesting ability to blind foe in battle.  (<b>Gained Perk: Ink Spray!</b>)");
            player.createPerk(PerkLib.InkSpray, 0, 0, 0, 0);
            changes++;
        }
        //Legs
        if (player.faceType == Face.HUMAN && (player.lowerBody == LowerBody.NAGA || player.lowerBody == LowerBody.CLOVEN_HOOFED || player.lowerBody != LowerBody.SCYLLA)) {
            if (changes < changeLimit && rand(3) == 0) {
                outputText("[pg]");
                transformations.LowerBodyHuman.applyEffect();
                MutagenBonus("spe", 1);
                changes++;
            }
        }
        if (((type == 0 && player.gender == 2) || (type == 1 && player.gender == 3) || (type == 2 && player.gender == 1)) && transformations.LowerBodyScylla.isPossible() && changes < changeLimit && rand(3) == 0) {
            outputText("[pg]");
            transformations.LowerBodyScylla.applyEffect();
            changes++;
        }
        //FAILSAFE CHANGE
        if (changes == 0) {
			var inkcolor:String = "black";
			if (type == 1) inkcolor = "grey";
			if (type == 2) inkcolor = "white";
			outputText("[pg]Remarkably, the "+inkcolor+" ink has no effect.  Should you really be surprised at "+inkcolor+" ink NOT doing anything?");
		}
        player.refillHunger(5);
        flags[kFLAGS.TIMES_TRANSFORMED] += changes;
    }

    public function krakenInk(type:Number, player:Player):void {
        //'type' refers to the variety of ink.
        //0 == black ink (female kraken TF)
        //1 == grey ink (herm kraken TF)
        //2 == white ink (male kraken TF)
        player.slimeFeed();
        //init variables
        var changes:Number = 0;
        var changeLimit:Number = 2;
        var temp:Number = 0;
        var temp2:Number = 0;
        var temp3:Number = 0;
        //Randomly choose affects limit
        if (rand(2) == 0) changeLimit++;
        if (rand(2) == 0) changeLimit++;
        if (rand(2) == 0) changeLimit++;
        changeLimit += player.additionalTransformationChances;
        //clear screen
        clearOutput();
        outputText("The ink taste salty and slimy, you really think you could use a full glass of fresh water to wash your aching throat.");

        //Statistical changes:
        //-Raises intelligence to 80.
        if (changes < changeLimit && rand(3) == 0 && MutagenBonus("int", 1)) {
            outputText("[pg]As you finish drinking the ink, you suddenly feel more cunning and much smarter.");
            changes++;
        }
        //-Raises strength to 90.
        if (rand(3) == 0 && changes < changeLimit && MutagenBonus("str", 1)) {
            outputText("[pg]You suddenly feel like you could do a wrestling contest with anyone who ask.");
            if (player.str > 60) outputText(" Heck you feel so strong you could bend wood or even steel!");
            changes++;
        }
        //-Decrease muscle tone toward 30
        if (player.tone >= 30 && rand(4) == 0 && changes < changeLimit) {
            outputText("[pg]Your muscle start to vanish but strangely you didn't lose strength or gain any weight. Well, that was weird.");
            player.tone -= 3;
            changes++;
        }
        //-Femininity to 100 (female scylla version)
        if (type == 0 && player.femininity < 100 && changes < changeLimit && rand(3) == 0) {
            changes++;
            outputText(player.modFem(100, 3 + rand(5)));
        }
        //-Femininity to 0 (male scylla version)
        if (type == 2 && player.femininity > 0 && changes < changeLimit && rand(3) == 0) {
            changes++;
            outputText(player.modFem(0, 3 + rand(5)));
        }

        //Size
        if ((player.lowerBody == LowerBody.SCYLLA || player.lowerBody == LowerBody.KRAKEN) && player.basetallness < 132 && changes < changeLimit && rand(4) == 0) {
            var heightGain:int = rand(15) + 5;
            //Flavor texts.  Flavored like 1950's cigarettes. Yum.
            outputText("[pg]You notice that your tentacles have lengthened. Furthermore, you are clearly taller.");
            player.tallness += heightGain;
            changes++;
        }

        if (player.blockingBodyTransformations()) changeLimit = 0;
        //Sexual Changes:
        //FEMALE
        if (player.gender == 2 || player.gender == 3) {
            //Single vag
            if (player.vaginas.length == 1) {
                if (player.vaginas[0].vaginalWetness <= VaginaClass.WETNESS_DROOLING && changes < changeLimit && rand(2) == 0) {
                    temp = player.vaginas.length;
                    while (temp > 0) {
                        temp--;
                        if (player.vaginas[0].vaginalWetness < VaginaClass.WETNESS_DROOLING) player.vaginas[temp].vaginalWetness++;
                        changes++;
                    }
                    if (player.vaginas[0].vaginalWetness == VaginaClass.WETNESS_DROOLING) {
                        outputText("[pg]Your pussy feels hot and juicy, aroused and tender.  You cannot resist as your hands dive into your [vagina].  You quickly orgasm, squirting fluids everywhere.  <b>You are now a squirter</b>.");
                        player.orgasm();
                    }
                    if (player.vaginas[0].vaginalWetness < VaginaClass.WETNESS_DROOLING) {
                        outputText("[pg]Wow your wet down there just what on going on. When you put your hand to your " + vaginaDescript(temp) + ". Surprised you discover it's twice as more lubricated then before.");
                    }
                }
                if (player.vaginas[0].vaginalLooseness <= VaginaClass.LOOSENESS_GAPING && changes < changeLimit && rand(3) == 0) {
                    outputText("[pg]You grip your gut in pain as you feel your organs shift slightly.  When the pressure passes, you realize your [vagina] has grown larger, in depth AND size.");
                    player.vaginas[0].vaginalLooseness++;
                    changes++;
                }
            }
            //Multicooch
            else {
                //determine least wet
                //temp - least wet
                //temp2 - saved wetness
                //temp3 - counter
                temp = 0;
                temp2 = player.vaginas[temp].vaginalWetness;
                temp3 = player.vaginas.length;
                while (temp3 > 0) {
                    temp3--;
                    if (temp2 > player.vaginas[temp3].vaginalWetness) {
                        temp = temp3;
                        temp2 = player.vaginas[temp].vaginalWetness;
                    }
                }
                if (player.vaginas[0].vaginalWetness == VaginaClass.WETNESS_DROOLING) {
                    outputText("Your pussies feel hot and juicy, aroused and tender.  You cannot resist plunging your hands inside your [vagina]s.  You quiver around your fingers, squirting copious fluids over yourself and the ground.  The fluids quickly disappear into the dirt.");
                    player.orgasm();
                    changes++;
                }
                if (player.vaginas[temp].vaginalWetness < VaginaClass.WETNESS_DROOLING && changes < changeLimit && rand(2) == 0) {
                    outputText("[pg]Wow your wet down there just what on going on. When you put your hand to one of your " + vaginaDescript(temp) + " you discover not only is it twice as more lubricated then before.");
                    player.vaginas[temp].vaginalWetness++;
                    changes++;
                }
                //determine smallest
                //temp - least big
                //temp2 - saved looseness
                //temp3 - counter
                temp = 0;
                temp2 = player.vaginas[temp].vaginalLooseness;
                temp3 = player.vaginas.length;
                while (temp3 > 0) {
                    temp3--;
                    if (temp2 > player.vaginas[temp3].vaginalLooseness) {
                        temp = temp3;
                        temp2 = player.vaginas[temp].vaginalLooseness;
                    }
                }
                if (player.vaginas[0].vaginalLooseness <= VaginaClass.LOOSENESS_GAPING && changes < changeLimit && rand(3) == 0) {
                    outputText("[pg]You grip your gut in pain as you feel your organs shift slightly.  When the pressure passes, you realize one of your " + vaginaDescript(temp) + " has grown larger, in depth AND size.");
                    player.vaginas[temp].vaginalLooseness++;
                    changes++;
                }
            }
        }
        //Feminization of males
        if (type == 0 && (player.gender == 1 || player.gender == 3) && player.cocks.length > 0 && rand(2) == 0 && !flags[kFLAGS.HYPER_HAPPY]) {
            //If the player has at least one dick, decrease the size of each slightly,
            outputText("[pg]");
            temp = player.longestCock();
            temp3 = 0;
            //Shrink said cock
            if (player.cocks[temp].cockLength < 6 && player.cocks[temp].cockLength >= 2.9) {
                player.cocks[temp].cockLength -= .5;
                temp3 -= .5;
            }
            temp3 += player.growCock(temp, (rand(3) + 1) * -1);
            player.lengthChange(temp3, 1);
            if (player.cocks[temp].cockLength < 2) {
                transformations.CockToVagina().applyEffect();
            }
            //if the last of the player's dicks are eliminated this way, they gain a virgin vagina;
            if (!player.hasCock() && !player.hasVagina()) {
                transformations.VaginaHuman().applyEffect();
                changes++;
                dynStats("lus", 10, "scale", false);
            }
        }
        //MALES
        //Masculinization of females
        if (type == 2 && (player.gender == 2 || player.gender == 3) && player.cocks.length > 0 && rand(2) == 0 && !flags[kFLAGS.HYPER_HAPPY]) {
            //Kills vagina size (and eventually the whole vagina)
            if (player.vaginas.length > 0) {
                if (player.vaginas[0].vaginalLooseness > VaginaClass.LOOSENESS_TIGHT) {
                    //tighten that bitch up!
                    outputText("[pg]Your [vagina] clenches up painfully as it tightens up, becoming smaller and tighter.");
                    player.vaginas[0].vaginalLooseness--;
                } else {
                    outputText("[pg]A tightness in your groin is the only warning you get before your <b>[vagina] disappears forever</b>!");
                    if (player.cocks.length == 0) {
                        outputText("  Strangely, your clit seems to have resisted the change, and is growing larger by the moment. Eventually it ends, <b>leaving you with a completely human penis.</b>");
                        transformations.CockHuman(0, player.clitLength + 2).applyEffect(false);
                        player.clitLength = .25;
                    }
                    //Goodbye womanhood!
                    player.removeVagina(0, 1);
                }
                changes++;
            }
            //-Remove extra breast rows
            if (changes < changeLimit && player.bRows() > 1 && rand(3) == 0) {
                changes++;
                outputText("[pg]You stumble back when your center of balance shifts, and though you adjust before you can fall over, you're left to watch in awe as your bottom-most " + breastDescript(player.breastRows.length - 1) + " shrink down, disappearing completely into your ");
                if (player.bRows() >= 3) outputText("abdomen");
                else outputText("chest");
                outputText(". The " + nippleDescript(player.breastRows.length - 1) + "s even fade until nothing but ");
                if (player.isFurCovered()) outputText(player.hairColor + " " + player.skinDesc);
                else outputText(player.skinColor + " " + player.skinDesc);
                outputText(" remains. <b>You've lost a row of breasts!</b>");
                dynStats("sen", -5);
                player.removeBreastRow(player.breastRows.length - 1, 1);
            }
            //Shrink boobages till they are normal
            else if (rand(2) == 0 && changes < changeLimit && player.breastRows.length > 0) {
                //Single row
                if (player.breastRows.length == 1) {
                    //Shrink if bigger than B cups
                    if (player.breastRows[0].breastRating >= 1) {
                        temp = 1;
                        player.breastRows[0].breastRating--;
                        //Shrink again if huuuuge
                        if (player.breastRows[0].breastRating > 8) {
                            temp++;
                            player.breastRows[0].breastRating--;
                        }
                        //Talk about shrinkage
                        if (temp == 1) outputText("[pg]You feel a weight lifted from you, and realize your [breasts] have shrunk to " + player.breastCup(0) + "s.");
                        if (temp == 2) outputText("[pg]You feel significantly lighter.  Looking down, you realize your breasts are MUCH smaller, down to " + player.breastCup(0) + "s.");
                        changes++;
                    }

                }
                //multiple
                else {
                    //temp2 = amount changed
                    //temp3 = counter
                    temp = 0;
                    temp2 = 0;
                    temp3 = 0;
                    if (player.biggestTitSize() >= 1) outputText("\n");
                    while (temp3 < player.breastRows.length) {
                        if (player.breastRows[temp3].breastRating >= 1) {
                            player.breastRows[temp3].breastRating--;
                            temp2++;
                            outputText("\n");
                            //If this isn't the first change...
                            if (temp2 > 1) outputText("...and y");
                            else outputText("Y");
                            outputText("our " + breastDescript(temp3) + " shrink, dropping to " + player.breastCup(temp3) + "s.");
                        }
                        temp3++;
                    }
                    if (temp2 == 2) outputText("\nYou feel so much lighter after the change.");
                    if (temp2 == 3) outputText("\nWithout the extra weight you feel particularly limber.");
                    if (temp2 >= 4) outputText("\nIt feels as if the weight of the world has been lifted from your shoulders, or in this case, your chest.");
                    if (temp2 > 0) changes++;
                }
            }
        }

        //Boost vaginal capacity without gaping
        if ((type == 0 || type == 1) && changes < changeLimit && rand(3) == 0 && player.hasVagina() && player.statusEffectv1(StatusEffects.BonusVCapacity) < 200) {
            if (!player.hasStatusEffect(StatusEffects.BonusVCapacity)) player.createStatusEffect(StatusEffects.BonusVCapacity, 0, 0, 0, 0);
            player.addStatusValue(StatusEffects.BonusVCapacity, 1, 5);
            outputText("[pg]There is a sudden... emptiness within your [vagina].  Somehow you know you could accommodate even larger... insertions.");
            changes++;
        }
        //Increase player's breast size, if they are big DD or smaller
        if ((type == 0 || type == 1) && player.smallestTitSize() <= 5 && player.gender == 2 && changes < changeLimit && rand(4) == 0) {
            outputText("[pg]After drinking it, your chest aches and tingles, and your hands reach up to scratch at it unthinkingly.  Silently, you hope that you aren't allergic to it.  Just as you start to scratch at your " + breastDescript(player.smallestTitRow()) + ", your chest pushes out in slight but sudden growth.");
            player.breastRows[player.smallestTitRow()].breastRating++;
            changes++;
        }
        //Change one prick to a vine-like tentacle cock.
        if ((type == 2 || type == 1) && rand(3) == 0 && player.cocks.length > 0 && changes < changeLimit) {
            if (player.tentacleCocks() < player.cockTotal()) {
                if (player.cocks.length == 1) { //Single cawks
                    transformations.CockScylla().applyEffect();
                }
                if (player.cockTotal() > 1) { //multi
                    outputText("[pg]Your feel your [cocks] bending and flexing of their own volition... looking down, you watch them morph into flexible tentacle-like shapes.  <b>You now have tentacle cocks!</b>  ");
                    for (var x:int = 0; x < player.cocks.length; x++) transformations.CockScylla(x).applyEffect(false);
                }
            }
        }
        //Grow cock(s) longer
        if ((type == 2 || type == 1) && rand(3) == 0 && player.cocks.length > 0 && changes < changeLimit) {
            //single cock
            if (player.cocks.length == 1) {
                temp2 = player.growCock(0, rand(4) + 3);
                temp = 0;
                dynStats("lus", 10, "scale", false);
                player.addCurse("sen", 1, 1);
            }
            //Multicock
            else {
                //Find smallest cock
                //Temp2 = smallness size
                //temp = current smallest
                temp3 = player.cocks.length;
                temp = 0;
                while (temp3 > 0) {
                    temp3--;
                    //If current cock is smaller than saved, switch values.
                    if (player.cocks[temp].cockLength > player.cocks[temp3].cockLength) {
                        temp2 = player.cocks[temp3].cockLength;
                        temp = temp3;
                    }
                }
                //Grow smallest cock!
                //temp2 changes to growth amount
                temp2 = player.growCock(temp, rand(4) + 3);
                dynStats("lus", 10, "scale", false);
                player.addCurse("sen", 1, 1);
                if (player.cocks[temp].cockThickness <= 2) player.thickenCock(temp, 1);
            }
            if (temp2 > 2) outputText("[pg]Your " + cockDescript(temp) + " tightens painfully, inches of bulging dick-flesh pouring out from your crotch as it grows longer.  Thick pre forms at the pointed tip, drawn out from the pleasure of the change.");
            if (temp2 > 1 && temp2 <= 2) outputText("[pg]Aching pressure builds within your crotch, suddenly releasing as an inch or more of extra dick-flesh spills out.  A dollop of pre beads on the head of your enlarged " + cockDescript(temp) + " from the pleasure of the growth.");
            if (temp2 <= 1) outputText("[pg]A slight pressure builds and releases as your " + cockDescript(temp) + " pushes a bit further out of your crotch.");
        }

        //Physical changes:
        //Hood
        if (player.lowerBody == LowerBody.KRAKEN && player.horns.type != Horns.KRAKEN && changes < changeLimit && rand(3) == 0) {
            outputText("[pg]");
            transformations.HornsKraken.applyEffect();
            changes++;
        }

        //Skin
        //Skin
        if ((!player.hasPlainSkinOnly() && player.skinType != Skin.AQUA_RUBBER_LIKE) && rand(3) == 0 && changes < changeLimit) {
            outputText("[pg]");
            transformations.SkinPlain.applyEffect();
            changes++;
        }
        //Skin part 2
        if (player.hasPlainSkinOnly() && player.skinType != Skin.AQUA_RUBBER_LIKE && changes < changeLimit && rand(3) == 0) {
            outputText("You suddenly start sweating abundantly.  ");
            outputText("As much as you try to dry your skin using a cloth it remains slimy and slippery to the touch as if constantly wet! Your skin is now slippery like the one of a sea creature!");
            outputText("[pg]Meanwhile your body is hit by a quake of sensation as your body shift into something more fitting for underwater swimming, your flesh becoming rubbery like the flesh of octopus and squid. <b>You now have rubber like skin same as a scylla or a kraken.</b>");
            player.skin.setBaseOnly({type: Skin.AQUA_RUBBER_LIKE, adj: "slippery"});
            changes++;
        }
        //SkinColor
        if (player.skinColor != "ghostly white" && player.skinType == Skin.AQUA_RUBBER_LIKE && changes < changeLimit && rand(3) == 0) {
            outputText("[pg]");
            transformations.RearBodyKraken.applyEffect();
            changes++;
        }

        //Face
        if (player.faceType != Face.HUMAN && changes < changeLimit && rand(3) == 0) {
            outputText("[pg]");
            transformations.FaceHuman.applyEffect();
            changes++;
        }

        //Ears
        if (player.ears.type != Ears.ELFIN && changes < changeLimit && rand(3) == 0) {
            outputText("[pg]");
			transformations.EarsElfin.applyEffect();
            changes++;
        }

        //Arms
        if (player.arms.type != Arms.KRAKEN && changes < changeLimit && rand(3) == 0) {
            outputText("[pg]");
            transformations.ArmsKraken.applyEffect();
            changes++;
        }

        //Eyes Color
        if ((transformations.EyesKrakenColors.isPossible() || transformations.EyesKraken.isPossible()) && changes < changeLimit) {
            if (transformations.EyesKrakenColors.isPossible()) {
                outputText("[pg]");
                transformations.EyesKrakenColors.applyEffect();
            }
            if (transformations.EyesKraken.isPossible()) {
                outputText("[pg]");
                transformations.EyesKraken.applyEffect();
            }
            changes++;
        }

        //Ink spray attack
        if (player.lowerBody == LowerBody.KRAKEN && !player.hasPerk(PerkLib.InkSpray)) {
            if (type == 0) {
                outputText("[pg]Your pussy suddenly start gushing around and you squirt so much your tentacles are drenched. Blushing red in embarrassment you examine the damage lifting a tentacle and suddenly a jet black shot of girl juice shoot out of your pussy like a spray dying a nearby tree black.");
                outputText(" You smell the liquid and discover your girl juice turned into actual ink! Thinking about octopus behing able to spray ink you point your pussy at a random tree and take aim. as you relax the newly discovered organ, a gush of ink splatter the tree.");
            }
			if (type == 1) {
				if (rand(2) == 0) {
					outputText("[pg]Your pussy suddenly start gushing around and you squirt so much your tentacles are drenched. Blushing red in embarrassment you examine the damage lifting a tentacle and suddenly a jet black shot of girl juice shoot out of your pussy like a spray dying a nearby tree black.");
					outputText(" You smell the liquid and discover your girl juice turned into actual ink! Thinking about octopus behing able to spray ink you point your pussy at a random tree and take aim. as you relax the newly discovered organ, a gush of ink splatter the tree.");
				}
				else {
					outputText("[pg]Your cock suddenly start leaking pre-cum around so much your front tentacles are drenched. Blushing red in embarrassment you examine the damage reaching to it and suddenly when you merely touched it a jet black shot of cum shoot out of your cock like a spray dying a nearby tree black.");
					outputText(" You smell the liquid and discover your cum turned into actual ink! Thinking about octopus behing able to spray ink you point your cock at a random tree and take aim. After moment of pumping it shoot another portion of the ink that splatter at the tree.");
				}
			}
            outputText(" You think you could use this interesting ability to blind foe in battle.  (<b>Gained Perk: Ink Spray!</b>)");
            player.createPerk(PerkLib.InkSpray, 0, 0, 0, 0);
            changes++;
        }

        //Legs
        if (player.lowerBody != LowerBody.HUMAN && player.lowerBody != LowerBody.SCYLLA && player.lowerBody != LowerBody.KRAKEN) {
            if (changes < changeLimit && rand(3) == 0) {
                outputText("[pg]");
                transformations.LowerBodyHuman.applyEffect();
                MutagenBonus("spe", 1);
                changes++;
            }
        }
        if (((type == 0 && player.gender == 2) || (type == 1 && player.gender == 3) || (type == 2 && player.gender == 1)) && player.lowerBody != LowerBody.KRAKEN && changes < changeLimit && rand(3) == 0) {
			if (player.lowerBody == LowerBody.SCYLLA) {
				outputText("[pg]");
				transformations.LowerBodyKraken.applyEffect();
				changes++;
			}
			if (player.lowerBody == LowerBody.HUMAN && player.lowerBody != LowerBody.SCYLLA) {
				outputText("[pg]");
				transformations.LowerBodyScylla.applyEffect();
				changes++;
			}
        }

        //FAILSAFE CHANGE
        if (changes == 0) {
			var abyssalinkcolor:String = "";
			if (type == 1) abyssalinkcolor = "grey ";
			if (type == 2) abyssalinkcolor = "white ";
			outputText("[pg]Remarkably, the "+abyssalinkcolor+"abyssal ink has no effect.  Should you really be surprised at "+abyssalinkcolor+"abyssal ink NOT doing anything?");
		}
        player.refillHunger(5);
        flags[kFLAGS.TIMES_TRANSFORMED] += changes;
    }

    public function yetiCum(player:Player):void {
        player.slimeFeed();
        //init variables
        var changes:Number = 0;
        var changeLimit:Number = 2;
        var temp:Number = 0;
        var temp2:Number = 0;
        var temp3:Number = 0;
        //Randomly choose affects limit
        if (rand(2) == 0) changeLimit++;
        if (rand(2) == 0) changeLimit++;
        changeLimit += player.additionalTransformationChances;
        //clear screen
        clearOutput();
        outputText("The cum tastes pretty much like you expected it would, salty. Strangely, you feel warmer by the minute, perhaps it's your body adapting to the very hot feeling the cum left in your stomach.");
        //str up to 85
        if (rand(3) == 0 && changes < changeLimit && MutagenBonus("str", 1)) {
            outputText("[pg]Your fill your muscles filling with yeti might.");
            changes++;
        }
        //tou up to 100
        if (rand(2) == 0 && changes < changeLimit && MutagenBonus("tou", 1)) {
            outputText("[pg]Your body and skin both thicken noticeably.  You pinch your [skin.type] experimentally and marvel at how much tougher it has gotten.");
            changes++;
        }
        //spe up to 75
        if (rand(2) == 0 && changes < changeLimit && MutagenBonus("spe", 1)) {
            outputText("[pg]Hearing a sudden sound you suddenly move by reflex to the side with such speed you nearly trip.  Seems your reaction speed has increased as well as your mobile execution.");
            changes++;
        }
        //int down to 15
        if (player.inte > 15 && rand(3) == 0 && changes < changeLimit) {
            outputText("[pg]You shake your head and struggle to gather your thoughts, feeling a bit slow.");
            player.addCurse("int", 1, 1);
            changes++;
        }
        //lib up to 75
        if (rand(3) == 0 && changes < changeLimit && MutagenBonus("lib", 1)) {
            outputText("[pg]A blush of red works its way across your skin as your sex drive kicks up a notch.");
            changes++;
        }
        if (player.blockingBodyTransformations()) changeLimit = 0;
        //Maleness
        if (player.hasCock() && rand(3) == 0 && player.cocks.length > 0) {
            if (player.cocks.length == 1) {
                outputText("[pg]Your [cock] becomes shockingly hard.  It turns a shiny inhuman purple and spasms, dribbling hot demon-like cum as it begins to grow.");
                if (rand(4) == 0) temp = player.growCock(0, 3);
                else temp = player.growCock(0, 1);
                dynStats("lust", 5 + temp * 3);
                player.addCurse("sen", 1, 1);
                MutagenBonus("int", 1);
                MutagenBonus("lib", 2);
                if (temp < .5) outputText("  It stops almost as soon as it starts, growing only a tiny bit longer.");
                if (temp >= .5 && temp < 1) outputText("  It grows slowly, stopping after roughly half an inch of growth.");
                if (temp >= 1 && temp <= 2) outputText("  The sensation is incredible as more than an inch of lengthened dick-flesh grows in.");
                if (temp > 2) outputText("  You smile and idly stroke your lengthening [cock] as a few more inches sprout.");
                dynStats("lus", 5 + temp * 3, "scale", false);
                player.addCurse("sen", 1, 1);
                MutagenBonus("int", 1);
                MutagenBonus("lib", 2);
                outputText("  With the transformation complete, your [cock] returns to its normal coloration.");
            }
            if (player.cocks.length > 1) {
                temp2 = player.shortestCockIndex();
                if (int(Math.random() * 4) == 0) temp3 = player.growCock(temp2, 3);
                else temp3 = player.growCock(temp2, 1);
                dynStats("lus", 5 + temp2 * 3, "scale", false);
                player.addCurse("sen", 1, 1);
                MutagenBonus("int", 1);
                MutagenBonus("lib", 2);
                //Grammar police for 2 cocks
                if (player.cockTotal() == 2) outputText("[pg]Both of your [cocks] become shockingly hard, swollen and twitching as they turn a shiny inhuman purple in color.  They spasm, dripping thick ropes of hot demon-like pre-cum along their lengths as your shortest " + cockDescript(temp2) + " begins to grow.");
                //For more than 2
                else outputText("[pg]All of your [cocks] become shockingly hard, swollen and twitching as they turn a shiny inhuman purple in color.  They spasm, dripping thick ropes of hot demon-like pre-cum along their lengths as your shortest " + cockDescript(temp2) + " begins to grow.");
                if (temp3 < .5) outputText("  It stops almost as soon as it starts, growing only a tiny bit longer.");
                if (temp3 >= .5 && temp3 < 1) outputText("  It grows slowly, stopping after roughly half an inch of growth.");
                if (temp3 >= 1 && temp3 <= 2) outputText("  The sensation is incredible as more than an inch of lengthened dick-flesh grows in.");
                if (temp3 > 2) outputText("  You smile and idly stroke your lengthening " + cockDescript(temp2) + " as a few more inches sprout.");
                outputText("  With the transformation complete, your [cocks] return to their normal coloration.");
            }
        }
        //Skin
        if (player.skinColor != "dark" && player.skinColor != "tan" && changes < changeLimit && rand(4) == 0) {
            if (rand(2) == 0) player.skinColor = "dark";
            else player.skinColor = "tan";
            outputText("[pg]Your skin suddenly darkens. Doesn’t look like much, but darker skin will likely help soak up more sunlight and keep you warmer.<b> You now have " + player.skinColor + " skin.</b>");
            changes++;
        }
        //Legs
        if (player.lowerBody != LowerBody.YETI && changes < changeLimit && rand(4) == 0) {
            outputText("[pg]");
            if (player.lowerBody == LowerBody.HUMAN) {
                transformations.LowerBodyYeti.applyEffect();
            } else {
                transformations.LowerBodyHuman.applyEffect();
            }
            changes++;
        }
        //Arms
        if (player.lowerBody == LowerBody.YETI && !InCollection(player.arms.type, Arms.YETI) && changes < changeLimit && rand(4) == 0) {
            outputText("[pg]");
            transformations.ArmsYeti.applyEffect();
            changes++;
        }
        //Ears
        if (player.arms.type == Arms.YETI && player.ears.type != Ears.YETI && changes < changeLimit && rand(4) == 0) {
            outputText("[pg]");
            transformations.EarsYeti.applyEffect();
            changes++;
        }
        //Face
        if (player.ears.type == Ears.YETI && player.faceType != Face.YETI_FANGS && changes < changeLimit && rand(4) == 0) {
            outputText("[pg]");
            transformations.FaceYetiFangs.applyEffect();
            changes++;
        }
        //Hair
        if (player.faceType == Face.YETI_FANGS && transformations.HairFluffy.isPossible() && changes < changeLimit && rand(4) == 0) {
            outputText("[pg]");
            transformations.HairFluffy.applyEffect();
            changes++;
        }
        //Fur
        if (player.hairType == Hair.FLUFFY && player.rearBody.type != RearBody.YETI_FUR && changes < changeLimit && rand(4) == 0) {
            outputText("[pg]");
            transformations.RearBodyYetiFur.applyEffect();
            changes++;
        }
        //Eyes
        if (changes < changeLimit && rand(3) == 0 && player.eyes.type > Eyes.HUMAN) {
            outputText("[pg]");
            transformations.EyesHuman.applyEffect();
            changes++;
        }
        if (changes < changeLimit && rand(3) == 0 && player.eyes.type == Eyes.HUMAN && (transformations.EyesChangeColor(["silver", "gray"]).isPossible())) {
            transformations.EyesChangeColor(["silver", "gray"]).applyEffect(false);
            outputText("[pg]Your eyes begin to water for a moment. When your view clears up you move on to a puddle and notice their coloration changed to [eyecolor]. <b>You now have [eyecolor] irises.</b>");
            changes++;
        }
        //hips
        if (rand(2) == 0 && player.hips.type < 12 && changes < changeLimit) {
            outputText("[pg]You stumble as you feel the bones in your hips grinding, expanding your hips noticeably.");
            player.hips.type += 1 + rand(2);
            changes++;
        }
        //ass
        if (rand(2) == 0 && player.butt.type < 12 && changes < changeLimit) {
            outputText("[pg]Your ass grows in size, becoming bigger and more cushiony. A little fat to help you to endure the coming winter, perhaps.");
            player.butt.type += 1 + rand(2);
            changes++;
        }
        //tallness
        if (player.basetallness < 84 && changes < changeLimit && rand(2) == 0) {
            temp = rand(5) + 3;
            //Slow rate of growth near ceiling
            if (player.basetallness > 74) temp = Math.floor(temp / 2);
            //Never 0
            if (temp == 0) temp = 1;
            //Flavor texts.  Flavored like 1950's cigarettes. Yum.
            if (temp < 5) outputText("[pg]You shift uncomfortably as you realize you feel off balance.  Gazing down, you realize you have grown SLIGHTLY taller.");
            if (temp >= 5 && temp < 7) outputText("[pg]You feel dizzy and slightly off, but quickly realize it's due to a sudden increase in height.");
            if (temp == 7) outputText("[pg]Staggering forwards, you clutch at your head dizzily.  You spend a moment getting your balance, and stand up, feeling noticeably taller.");
            player.tallness += temp;
            changes++;
        }
        if (rand(3) == 0) outputText(player.modThickness(50, 3));
        if (player.cocks.length > 0 && rand(3) == 0) outputText(player.modTone(85, 3));
        if (player.vaginas.length > 0 && rand(3) == 0) outputText(player.modTone(10, 5));
        //FAILSAFE CHANGE
        if (changes == 0) outputText("[pg]Remarkably, the Yeti cum has no effect.  Should you really be surprised at yeti cum NOT doing anything?");
        player.refillHunger(10);
        flags[kFLAGS.TIMES_TRANSFORMED] += changes;
    }

    public function whiteIceShard(player:Player):void {
        player.slimeFeed();
        //init variables
        var changes:Number = 0;
        var changeLimit:Number = 2;
        var temp:Number = 0;
        var temp2:Number = 0;
        var temp3:Number = 0;
        //Randomly choose affects limit
        if (rand(2) == 0) changeLimit++;
        if (rand(2) == 0) changeLimit++;
        changeLimit += player.additionalTransformationChances;
        //clear screen
        clearOutput();
        outputText("As you examine the shard it spontaneously melts. Rivulets of freezing liquid flow down your arms and a frigid chill spreads throughout your body.");
        //tou down to 20
        if (player.tou > 20 && rand(2) == 0 && changes < changeLimit) {
            outputText("[pg]As the cold spreads through your frame, your vitality drains away and you feel oddly fragile, almost as if you were made of the ice yourself.");
            player.addCurse("tou", 1, 1);
            changes++;
        }
        //spe up to 80
        if (rand(2) == 0 && changes < changeLimit && MutagenBonus("spe", 1)) {
            outputText("[pg]You feel light and airy, almost as if you are coming apart at the seams. You glance down at yourself and are relieved to see you are still there.");
            changes++;
        }
        //int up to 100
        if (rand(2) == 0 && changes < changeLimit && MutagenBonus("int", 1)) {
            outputText("[pg]For a moment your mind is filled with visions. You can make out very little in the images of blowing snow and the featureless expanse but somehow you feel enlightened.");
            changes++;
        }
        //sens down to 10
        if (player.lib > 10 && rand(2) == 0 && changes < changeLimit) {
            outputText("[pg]Your skin feels brittle and numb in the aftermath of the cold. You pinch yourself and confirm, you feel less than before.");
            dynStats("sens", -1);
            changes++;
        }
        if (player.blockingBodyTransformations()) changeLimit = 0;
        if (player.cocks.length > 0 && rand(2) == 0 && !flags[kFLAGS.HYPER_HAPPY]) {
            //If the player has at least one dick, decrease the size of each slightly,
            outputText("[pg]");
            temp = 0;
            temp2 = player.cocks.length;
            temp3 = 0;
            //Find biggest cock
            while (temp2 > 0) {
                temp2--;
                if (player.cocks[temp].cockLength <= player.cocks[temp2].cockLength) temp = temp2;
            }
            //Shrink said cock
            if (player.cocks[temp].cockLength < 6 && player.cocks[temp].cockLength >= 2.9) {
                player.cocks[temp].cockLength -= .5;
                temp3 -= .5;
            }
            temp3 += player.growCock(temp, (rand(3) + 1) * -1);
            player.lengthChange(temp3, 1);
            if (player.cocks[temp].cockLength < 2) {
                transformations.CockToVagina().applyEffect();
            }
            //if the last of the player's dicks are eliminated this way, they gain a virgin vagina;
            if (player.cocks.length == 0 && !player.hasVagina()) {
                transformations.VaginaHuman().applyEffect();
                changes++;
                dynStats("lus", 10, "scale", false);
            }
        }
        //Increase player's breast size
        if (player.gender > 1 && player.biggestTitSize() < 4 && changes < changeLimit && rand(3) == 0) {
            if (rand(2) == 0) outputText("[pg]Your [breasts] tingle for a moment before becoming larger.");
            else outputText("[pg]You feel a little weight added to your chest as your [breasts] seem to inflate and settle in a larger size.");
            player.growTits(1 + rand(3), 1, false, 3);
            changes++;
            player.addCurse("sen", 1, 1);
        }
        if (player.breastRows.length == 0) {
            transformations.CreateBreastRow(2).applyEffect();
            outputText("\n");
        }
        //Physical
        //Face
        if (player.faceType != Face.YUKI_ONNA && changes < changeLimit && rand(4) == 0) {
            outputText("[pg]");
            transformations.FaceYukiOnna.applyEffect();
            changes++;
        }
        //Legs
        if (player.lowerBody != LowerBody.YUKI_ONNA && player.faceType == Face.YUKI_ONNA && changes < changeLimit && rand(4) == 0) {
            if (player.lowerBody == LowerBody.HUMAN) {
                outputText("[pg]");
                transformations.LowerBodyYukiOnna.applyEffect();
            } else {
                outputText("[pg]");
                transformations.LowerBodyHuman.applyEffect();
            }
            changes++;
        }
        //Arms
        if (player.lowerBody == LowerBody.YUKI_ONNA && !InCollection(player.arms.type, Arms.YUKI_ONNA) && changes < changeLimit && rand(4) == 0) {
            outputText("[pg]");
            transformations.ArmsYukiOnna.applyEffect();
            changes++;
        }
        //eyes color
        if (transformations.EyesChangeColor(["light purple"]).isPossible() && changes < changeLimit && rand(3) == 0) {
            if (player.eyes.type == Eyes.HUMAN) {
                transformations.EyesChangeColor(["light purple"]).applyEffect(false);
                outputText("[pg]Frigid water trickles from your eyes as if you are crying and pain forces them closed. You double over as they burn but slowly the agonizing sensation fades away and you blink to clear them. At first everything looks hazy as if seen through a clouded glass but it eventually clears up. <b>You glance down at your reflection in a puddle and find that your irises turned light purple like the reflection of the sun on snow.</b>");
            } else {
                outputText("[pg]");
                transformations.EyesHuman.applyEffect();
            }
            changes++;
        }
        //Hair
        if (player.faceType == Face.YUKI_ONNA && transformations.HairSnowy.isPossible() && changes < changeLimit && rand(4) == 0) {
            outputText("[pg]");
            transformations.HairSnowy.applyEffect();
            changes++;
        }
        //Read body + Wings slot
        if (player.hairType == Hair.SNOWY && player.faceType == Face.YUKI_ONNA && player.arms.type == Arms.YUKI_ONNA && player.lowerBody == LowerBody.YUKI_ONNA && player.rearBody.type != RearBody.GLACIAL_AURA && changes < changeLimit && rand(3) == 0) {
            outputText("[pg]Cold… so cold! You ball yourself up, trying to get some heat but no matter how much you try it gets colder and colder. Just as you think you are about to freeze to death it stops. You look around you in confusion. The air is chilling yet you don't feel it. The ice at your feet covered up with snow and somehow you know deep down if you wanted you could conjure out a blizzard. ");
            outputText("Furthermore you feel lighter then the air now and, as if to demonstrate your new powers, you allow yourself to be carried by the icy wind achieving a form of levitation. Well, it seems you are full Yuki Onna now. <b>You gained a Glacial aura and the ability to levitate!</b>");
            transformations.WingsLevitation.applyEffect(false);
            transformations.RearBodyGlacialAura.applyEffect(false);
            changes++;
        }
        if (player.hasPlainSkinOnly() && !InCollection(player.skinColor, YukiOnnaRace.YukiOnnaSkinColors) && player.skinAdj != "cold" && changes < changeLimit && rand(3) == 0) {
            player.skinColor = randomChoice(YukiOnnaRace.YukiOnnaSkinColors);
            player.skinAdj   = "cold";
            outputText("[pg]You feel a rush of goosebumps spreading over your body. When you look down at yourself you see that your skin has been bleached of all color, not unlike someone who froze to death. <b>You now have snow white skin.</b>");
            changes++;
        }
        if (!player.hasPlainSkinOnly() && rand(2) == 0 && changes < changeLimit) {
            if (player.skin.base.pattern != Skin.PATTERN_NONE) {
                outputText("[pg]");
                transformations.SkinPatternNone.applyEffect();
            }
            if (player.skinAdj != "") player.skinAdj = "";
            outputText("[pg]");
            transformations.SkinPlain.applyEffect();
            changes++;
        }
        if (player.isRace(Races.YUKIONNA, 1, false)) {
            if (player.hasPerk(PerkLib.IcyFlesh) && changes < changeLimit && rand(3) == 0) {
                outputText("[pg]The very ice and snow around you feels like an extension of your body. You gesture with a hand and the clouds of snow follow the gesture. You smile and in that moment your smile is cold, whoever will provoke you is not going to like what you have in store. <b>You can now use Hungering cold, Ice Barrage and Frigid Kiss.</b>");
                if (!player.hasPerk(PerkLib.ColdAffinity)) player.createPerk(PerkLib.ColdAffinity, 0, 0, 0, 0);
                changes++;
            }
            if (!player.hasPerk(PerkLib.IcyFlesh) && changes < changeLimit && rand(3) == 0) {
                outputText("[pg]Folding your arms against your chest, you desperately yearn for warmth and also at the same time for some reason fears it. If you are still alive, your body gives little sign of it, as if it had been dead for months and from the look of your pale frozen flesh you might as well be an icy specter. This said, a whole different form of vitality fills you as if on cue, your frozen flesh begins to harden to a diamond like resilience and your wounds magically begins to close. You don't feel hunger anymore either or the need to drink and even the cold is beginning to subside, ");
                outputText("leaving you with numbed sensations which makes you yearn for the pleasure of touch all the more. Your body seems to keep itself in a form of unnatural suspended animation, your very heart having came to a halt that could as well just be death yet you still can feel the caress of the cold icy wind on your skin albeit the sensation is no longer so unpleasant to begin with, it might even pass for pleasurable.");
                outputText("[pg](<b>Perks Gained: Dead metabolism and Icy Flesh!</b>)");
                player.createPerk(PerkLib.DeadMetabolism, 0, 0, 0, 0);
                player.createPerk(PerkLib.IcyFlesh, 0, 0, 0, 0);
                changes++;
            }
        }
        //-Femininity to 90
        if (player.femininity < 90 && changes < changeLimit && rand(3) == 0) {
            changes++;
            outputText(player.modFem(90, 2));
        }
        if (rand(2) == 0 && changes < changeLimit) outputText(player.modThickness(10, 5));
        if (rand(2) == 0 && changes < changeLimit) outputText(player.modTone(10, 2));
        flags[kFLAGS.TIMES_TRANSFORMED] += changes;
    }

    public function aquaSeed(player:Player):void {//TODO
        player.slimeFeed();
        //init variables
        var changes:Number = 0;
        var changeLimit:Number = 2;
        //	var temp:Number = 0;
        //	var temp2:Number = 0;
        //	var temp3:Number = 0;
        //Randomly choose affects limit
        if (rand(2) == 0) changeLimit++;
        if (rand(2) == 0) changeLimit++;
        if (rand(2) == 0) changeLimit++;
        //changeLimit += player.additionalTransformationChances;
        //clear screen
        clearOutput();
        outputText("You eat the weird kelp seed and suddenly feel like singing. It seems like your talent for music are skyrocketing as you embrace the changes within you!");

        //if (player.blockingBodyTransformations()) changeLimit = 0;
        //FAILSAFE CHANGE
        if (changes == 0) outputText("[pg]Remarkably, the seed has no effect.  Maybe next time?");
        player.refillHunger(10);
        flags[kFLAGS.TIMES_TRANSFORMED] += changes;
    }

    public function orcaSunscreen(type:Number, player:Player):void {
        player.slimeFeed();
        //init variables
        var changes:Number = 0;
        var changeLimit:Number = 2;
        //Randomly choose affects limit
        if (rand(2) == 0) changeLimit++;
        if (rand(2) == 0) changeLimit++;
        if (rand(2) == 0) changeLimit++;
        changeLimit += player.additionalTransformationChances;
        //clear screen
        clearOutput();
        outputText("You apply the sunscreen on your skin and suddenly feel some of your worries fly as you laugh cheerfully at the thought of taking a vacation day or two to rest and swim at the beach. Your body seems to react weirdly to the sunscreen.");

        //Strength
        if (rand(4) == 0 && MutagenBonus("str", 1 + rand(3))) {
            changes++;
            outputText("[pg]You suddenly feel stronger. Your body growing with raw physical power. Funnily enough, you don’t seem to grow in muscle.");
        }

        //Speed
        if (rand(4) == 0 && MutagenBonus("spe", 1 + rand(3))) {
            changes++;
            outputText("[pg]Shivering without warning, you nearly trip over yourself as you walk.  A few tries later you realize your muscles have become faster.");
        }

        //Toughness
        if (changes < changeLimit && rand(3) == 0 && MutagenBonus("tou", 1 + rand(10))) {
            if (rand(2) == 0) outputText("[pg]You feel your insides toughening up; it feels like you could stand up to almost any blow.");
            else outputText("[pg]Your bones and joints feel sore for a moment, and before long you realize they've gotten more durable.");
            changes++;
        }

        //Tone
        if (changes < changeLimit && rand(3) == 0 && player.tone < player.maxToneCap()) {
            outputText(player.modTone(0, 10));
        }

        //In case of immunities
        if (player.blockingBodyTransformations()) changeLimit = 0;

        //Cock gets bigger!
        if ((player.gender == 1 || player.gender == 3) && player.cocks.length > 0 && player.biggestCockLength() < 30 && changes < changeLimit && rand(3) == 0) {
            var selectedCock:int = -1;
            for (var i:int = 0; i < player.cocks.length; i++) {
                if (player.cocks[i].cockLength < 21 || player.cocks[i].cockThickness < 4) {
                    selectedCock = i;
                    break;
                }
            }
            if (selectedCock != -1) {
                if (player.cocks[selectedCock].cockThickness < 4) {
                    player.growCock(selectedCock, 2 + rand(4));
                    player.thickenCock(selectedCock, 1);
                    outputText("[pg]You moan as your cock suddenly becomes erect, dripping precum as it increases in thickness and length.");
                    if (player.biggestCockLength() > 21) outputText(" It has became so big you could likely fuck a horse or a small whale with it if you wanted.");
                } else {
                    player.growCock(selectedCock, 2 + rand(4));
                    outputText("[pg]You moan as your cock suddenly becomes erect, dripping precum as it increases in length.");
                    if (player.biggestCockLength() > 21) outputText(" It has became so big you could likely fuck a horse or a small whale with it if you wanted.");
                    outputText(" The pleasure of the change cause you to orgasm, a big load of cum splattering the ground below you.");
                }
                changes++;
            }
        }

        if (changes < changeLimit && player.dragonCocks() < player.cockTotal() && type == 1 && rand(3) == 0) {
            var temp:int;
            var choices:Array = [];
            var select:int;
            temp = player.cockTotal();
            //Build an array of all the locations for TF'able cocks.
            while (temp > 0) {
                temp--;
                if (player.cocks[temp].cockType != CockTypesEnum.DRAGON) choices[choices.length] = temp;
            }
            //Randomly choose one of those locations
            select = choices[rand(choices.length)];
            transformations.CockDragon(select).applyEffect();
            //lose lust if sens>=50, gain lust if else
            dynStats("lus", 10, "scale", false);
            player.addCurse("sen", 10, 1);
            changes++;
        }

        if ((player.gender >= 2 || player.gender == 3) && player.biggestTitSize() < 30 && changes < changeLimit && rand(3) == 0) {
            outputText("[pg]You are suddenly pulled forward as you feel a loss of balance on your front. Looking down you notice your [breasts] have increased by a full cup.");
            player.growTits(5 + rand(5), 1, false, 3);
            changes++;
        }

        //face
        if (player.faceType != Face.ORCA && changes < changeLimit && rand(3) == 0) {
            outputText("[pg]");
            transformations.FaceOrca.applyEffect();
            changes++;
        }

        //-Existing horns become draconic, max of 4, max length of 1'
        if (player.horns.type != Horns.SEA_DRAGON && type == 1 && changes < changeLimit && rand(3) == 0) {
            outputText("[pg]");
            transformations.HornsSeadragon.applyEffect();
            changes++;
        }

        //antenna
        if (player.antennae.type != Antennae.SEA_DRAGON && type == 1 && changes < changeLimit && rand(3) == 0) {
            outputText("[pg]");
            transformations.AntennaeSeaDragon.applyEffect();
            changes++;
        }
        //Change hair type to normal
        if ((transformations.HairHuman.isPossible() && player.hairType != Hair.PRISMATIC) && type == 1 && changes < changeLimit && rand(2) == 0) {
            outputText("[pg]");
            transformations.HairHuman.applyEffect();
            changes++;
        }
        //Change hair type to prismatic
        if ((player.hairType == Hair.NORMAL) && type == 1 && changes < changeLimit && rand(2) == 0) {
            outputText("[pg]");
            transformations.HairPrismatic.applyEffect();
            changes++;
        }

        //skin
        if ((player.skinAdj != "glossy" || !player.hasPlainSkinOnly()) && rand(3) == 0 && type == 0 && changes < changeLimit) {
            transformations.SkinPatternOrca.applyEffect();
            changes++;
        }

        //skin sea dragon
        if ((player.skinAdj != "glossy" || !player.hasPlainSkinOnly()) && rand(3) == 0 && type == 1 && changes < changeLimit) {
            transformations.SkinPatternSeaDragon.applyEffect();
            changes++;
        }

        //legs
        if (player.skinAdj == "glossy" && player.hasPlainSkinOnly() && player.lowerBody != LowerBody.ORCA && type == 0 && changes < changeLimit && rand(3) == 0) {
            if (player.lowerBody == LowerBody.HUMAN) {
                outputText("[pg]");
                transformations.LowerBodyOrca(2).applyEffect();
            } else {
                outputText("[pg]");
                transformations.LowerBodyHuman.applyEffect();
            }
            changes++;
        }
        //arms
        if (player.lowerBody == LowerBody.ORCA && player.arms.type != Arms.ORCA && type == 0 && changes < changeLimit && rand(3) == 0) {
            outputText("[pg]");
            transformations.ArmsOrca.applyEffect();
            changes++;
        }
        //Dragon legs
        if (player.skinAdj == "glossy" && player.hasPlainSkinOnly() && player.lowerBody != LowerBody.SEA_DRAGON && type == 1 && changes < changeLimit && rand(3) == 0) {
            if (player.lowerBody == LowerBody.HUMAN) {
                outputText("[pg]");
                transformations.LowerBodySeaDragon(2).applyEffect();
            } else {
                outputText("[pg]");
                transformations.LowerBodyHuman.applyEffect();
            }
            changes++;
        }
        //Dragon arms
        if (player.lowerBody == LowerBody.SEA_DRAGON && !InCollection(player.arms.type, Arms.SEA_DRAGON) && type == 1 && changes < changeLimit && rand(3) == 0) {
            outputText("[pg]");
            transformations.ArmsSeaDragon.applyEffect();
            changes++;
        }
        //Dragon Wings
        if (player.lowerBody == LowerBody.SEA_DRAGON && player.arms.type == Arms.SEA_DRAGON && player.wings.type != Wings.SEA_DRAGON && type == 1 && changes < changeLimit && rand(3) == 0) {
            outputText("[pg]");
            transformations.WingsSeaDragon.applyEffect();
            changes++;
        }
        //tail
        if (player.arms.type == Arms.ORCA && player.tailType != Tail.ORCA && type == 0 && changes < changeLimit && rand(3) == 0) {
            outputText("[pg]");
            transformations.TailOrca.applyEffect();
            changes++;
        }
        //dragon tail
        if (player.arms.type == Arms.SEA_DRAGON && player.tailType != Tail.ORCA && type == 1 && changes < changeLimit && rand(3) == 0) {
            outputText("[pg]");
            transformations.TailOrca.applyEffect();
            changes++;
        }
        //ears
        if (player.tailType == Tail.ORCA && player.ears.type != Ears.ORCA && changes < changeLimit && rand(3) == 0) {
            outputText("[pg]");
			transformations.EarsOrca.applyEffect();
            changes++;
        }
        //ears alternative
        if (player.tailType == Tail.ORCA && player.ears.type != Ears.ORCA2 && type == 0 && changes < changeLimit && rand(3) == 0) {
            outputText("[pg]");
			transformations.EarsOrca2.applyEffect();
            changes++;
        }
        //blowhole
        if (player.ears.type == Ears.ORCA && player.rearBody.type != RearBody.ORCA_BLOWHOLE && changes < changeLimit && rand(3) == 0) {
            outputText("[pg]");
            transformations.RearBodyOrcaBlowhole.applyEffect();
            changes++;
        }
        //eyes to human
        if (player.eyes.type != Eyes.HUMAN && changes < changeLimit && type == 0 && rand(3) == 0) {
            outputText("[pg]");
            transformations.EyesHuman.applyEffect();
            changes++;
        }
        //eyes to human if not dragon
        if (player.eyes.type != Eyes.HUMAN && player.eyes.type != Eyes.DRACONIC && changes < changeLimit && type == 1 && rand(3) == 0) {
            outputText("[pg]");
            transformations.EyesHuman.applyEffect();
            changes++;
        }
        //eyes to orange
        if (transformations.EyesChangeColor(["orange"]).isPossible() && changes < changeLimit && type == 0 && rand(3) == 0) {
            transformations.EyesChangeColor(["orange"]).applyEffect();
            changes++;
        }
        //eyes to sea dragon list
        if (transformations.EyesSeadragonColors.isPossible() && changes < changeLimit && type == 1 && rand(3) == 0) {
            transformations.EyesSeadragonColors.applyEffect();
            changes++;
        }
        //Gain Dragon Eyes
        if (player.eyes.type == Eyes.HUMAN && rand(3) == 0 && type == 1 && changes < changeLimit) {
            outputText("[pg]");
            transformations.EyesDraconic.applyEffect();
            changes++;
        }
        //Gain Dragon Tongue
        if (changes < changeLimit && rand(3) == 0 && player.tongue.type != Tongue.DRACONIC && type == 1) {
            outputText("[pg]");
            transformations.TongueDraconic.applyEffect();
            changes++;
            //Note: This type of tongue should be eligible for all things you can do with demon tongue... Dunno if it's best attaching a boolean just to change the description or creating a whole new tongue type.
        }
        //tallness
        if (player.basetallness < 132 && changes < changeLimit && rand(3) == 0) {
            var heightGain:int = rand(15) + 5;
            //Flavor texts.  Flavored like 1950's cigarettes. Yum.
            if (heightGain < 10) outputText("[pg]You shift uncomfortably as you realize you feel off balance.  Gazing down, you realize you have grown SLIGHTLY taller.");
            else if (heightGain >= 10 && heightGain < 20) outputText("[pg]You feel dizzy and slightly off, but quickly realize it's due to a sudden increase in height.");
            else if (heightGain == 20) outputText("[pg]Staggering forwards, you clutch at your head dizzily.  You spend a moment getting your balance, and stand up, feeling noticeably taller.");
            player.tallness += heightGain;
            changes++;
        }
        //BREATH WEAPON
        if (player.isRace(Races.SEA_DRAGON, 1, false) && changes < changeLimit && !player.hasPerk(PerkLib.DragonWaterBreath)) {
            outputText("[pg]You feel something awakening within you... then a sudden sensation of choking grabs hold of your throat, sending you to your knees as you clutch and gasp for breath.  It feels like there's something trapped inside your windpipe, clawing and crawling its way up.  You retch and splutter and then, with a feeling of almost painful relief, you expel a bellowing roar from deep inside of yourself accompanied by a geyser of steaming water... with enough force that clods of dirt and shattered gravel are sent flying all around.  You look at the small steaming crater you have literally blasted into the landscape with a mixture of awe and surprise.");
            outputText("[pg]It seems some kind of power has awakened within you... your throat and chest feel very sore, however; you doubt you can force out more than one such blast before resting.  (<b>Gained Perk: Dragon Water breath!</b>)");
            player.createPerk(PerkLib.DragonWaterBreath, 0, 0, 0, 0);
            changes++;
        }
        //FAILSAFE CHANGE
        if (changes == 0) outputText("[pg]Remarkably, the sunscreen has no effect.  Maybe next time?");
        flags[kFLAGS.TIMES_TRANSFORMED] += changes;
    }

    public function drakeHeart(player:Player):void {
        outputText("You bring the flower up to your nose and smell it. It has exquisite smell. You suddenly have the strange desire to eat it. You pop the flower into your mouth and chew. It tastes like vanilla somehow. Before you know it, you're undergoing changes.");
        emberTFchanges.dragonTFeffects(true);
    }

    public function FafnirTear(player:Player):void {
        player.slimeFeed();
        //init variables
        var changes:Number = 0;
        var changeLimit:Number = 2;
        var temp:Number = 0;
        var wyrmCoatColor:Array = ["bluish black", "dark gray", "black", "midnight black", "midnight"];
        var wyrmHairColor:Array = ["white", "snow white", "glacial white", "silver", "platinum silver"];
        //Randomly choose affects limit
        if (rand(2) == 0) changeLimit++;
        if (rand(2) == 0) changeLimit++;
        if (rand(2) == 0) changeLimit++;
        changeLimit += player.additionalTransformationChances;
        //clear screen
        clearOutput();
        outputText("You bring the flower up to your nose and smell it. " +
                "It has an exquisite smell, like that of snowberries mixed with vanilla. You suddenly have the strange desire to eat it. " +
                "You pop the flower into your mouth and chew. Before you know it, you’re undergoing changes.");

        //Statistical changes:

        //-Raises strength to 200.
        if (rand(3) == 0 && changes < changeLimit && MutagenBonus("str", 5)) {
            outputText("[pg]You feel raw power run through your muscle. Gosh you might as well be strong enough to shatter rocks.");
            if (player.str < 50) outputText(" Well maybe not that strong yet but you sure can pack a punch with your fist.");
            changes++;
        }

        //-Raises speed to 100.
        if (rand(2) == 0 && changes < changeLimit && MutagenBonus("spe", 2)) {
            outputText("[pg]Hearing a sudden sound you suddenly move by reflex to the side with such speed you nearly trip.  Seems your reaction speed has increased as well as your mobile execution.");
            changes++;
        }

        //-Raises toughness to 200.
        if (rand(2) == 0 && changes < changeLimit && MutagenBonus("tou", 5)) {
            outputText("[pg]You feel hardier and sturdier. ");
            if (player.tou > 100 && player.hasCoatOfType(Skin.DRAGON_SCALES)) outputText(" Your scales might as well be harder then steel right now, aint nothing thats going to get past it so easily.");
            changes++;
        }

        //-drop inteligence
        if (player.inte > 15 && rand(2) == 0 && changes < changeLimit) {
            outputText("[pg]Your train of thought begins to slow down as if your head been dipped into cold water for a few minutes.");
            if (player.inte < 30) outputText("  You're starting to have trouble speaking normally, using pronouns like I less and less and [name] more often than not when describing yourself. Ugh that's fine, doesn't matter if you're not the smartest person on Mareth so long as you got a body that can do the talking for you or fuck some nice mate into doing it in your stead.");
            player.addCurse("int", 20, 2);
            changes++;
        }

        //Libido
        if (rand(2) == 0 && changes < changeLimit && MutagenBonus("lib", 10)) {
            outputText("[pg]A knot of fire in your gut doubles you over but passes after a few moments. " +
                    "As you straighten you can feel the need seeping into you, puddling in your nethers."
                    + " An instinctive desire to mate spreads through you, increasing your lust and boosting your sex-drive.");
            changes++;
        }

        if (player.blockingBodyTransformations()) changeLimit = 0;
        //Sexual Changes:

        //Gain Dragon Dick
        if (changes < changeLimit && player.dragonCocks() < player.cockTotal() && rand(3) == 0) {
            temp = 0;
            var choices:Array = [];
            var select:int;
            temp = player.cockTotal();
            //Build an array of all the locations for TF'able cocks.
            while (temp > 0) {
                temp--;
                if (player.cocks[temp].cockType != CockTypesEnum.DRAGON) choices[choices.length] = temp;
            }
            //Randomly choose one of those locations
            select = choices[rand(choices.length)];
            transformations.CockDragon(select).applyEffect();
            //lose lust if sens>=50, gain lust if else
            dynStats("lus", 10, "scale", false);
            player.addCurse("sen", 10, 1);
            changes++;
        }
        //Increase player's breast size
        if (player.gender > 1 && player.biggestTitSize() <= 12 && changes < changeLimit && rand(3) == 0) {
            if (rand(2) == 0) outputText("[pg]Your [breasts] tingle for a moment before becoming larger.");
            else outputText("[pg]You feel a little weight added to your chest as your [breasts] seem to inflate and settle in a larger size. " +
                    "Maybe it’s not that bad. You will need that fat when it’s cold outside.\n");
            player.growTits(1 + rand(3), 1, false, 3);
            changes++;
            player.addCurse("sen", 1, 1);
        }

        //Normalchanges

        //grow up to 11 feet tall
        if (changes < changeLimit && rand(2) == 0 && player.basetallness < 132) {
            temp = rand(5) + 3;
            //Slow rate of growth after some tresholds
            if (player.basetallness >= 120) temp = Math.floor(temp / 3.5);
            if (player.basetallness >= 96 && player.basetallness < 120) temp = Math.floor(temp / 2);
            //Never 0
            if (temp == 0) temp = 1;
            if (temp < 5) outputText("[pg]You shift uncomfortably as you realize you feel off balance.  Gazing down, you realize you have grown SLIGHTLY taller.");
            if (temp >= 5 && temp < 7) outputText("[pg]You feel dizzy and slightly off, but quickly realize it's due to a sudden increase in height.");
            if (temp == 7) outputText("[pg]Staggering forwards, you clutch at your head dizzily.  You spend a moment getting your balance, and stand up, feeling noticeably taller.");
            player.tallness += temp;
            changes++;
        }

        if (changes < changeLimit && rand(2) == 0) outputText(player.modThickness(70, 4));
        if (changes < changeLimit && rand(2) == 0) outputText(player.modTone(10, 5));

        //Gain frost wyrm Horns
        if (changes < changeLimit && rand(3) == 0 && player.horns.type != Horns.FROSTWYRM) {
            outputText("[pg]");
            transformations.HornsFrostwyrm.applyEffect();
            changes++;
        }
        //Gain frost wyrm Ears
        if (changes < changeLimit && rand(3) == 0 && player.ears.type != Ears.SNAKE) {
            outputText("[pg]");
			transformations.EarsSnake.applyEffect();
            if (!InCollection(player.scaleColor1, wyrmCoatColor)) player.scaleColor1 = randomChoice(wyrmCoatColor);
            changes++;
        }
        //Gain Dragon Ears
        if (changes < changeLimit && rand(3) == 0 && player.ears.type != Ears.DRAGON) {
            outputText("[pg]");
			transformations.EarsDraconic.applyEffect();
            if (!InCollection(player.scaleColor1, wyrmCoatColor)) player.scaleColor1 = randomChoice(wyrmCoatColor);
            changes++;
        }
        //Gain Frost wyrm Eyes
        if (transformations.EyesFrostwyrm.isPossible() && rand(3) == 0 && changes < changeLimit) {
            outputText("[pg]");
            transformations.EyesFrostwyrm.applyEffect();
            changes++;
        }
        //Gain Frost wyrm face
        if (player.faceType != Face.ANIMAL_TOOTHS && rand(3) == 0 && changes < changeLimit) {
            outputText("[pg]");
            transformations.FaceAnimalTeeth.applyEffect();
            outputText("[pg]Well, now that you think about it, a frost wyrm’s diet mostly consists of meat, so getting sharper canines to properly eat your meat makes enough sense.");
            changes++;
        }
        //Gain Dragon Tongue
        if (changes < changeLimit && rand(3) == 0 && player.tongue.type != Tongue.DRACONIC) {
            outputText("[pg]");
            transformations.TongueDraconic.applyEffect();
            changes++;
            //Note: This type of tongue should be eligible for all things you can do with demon tongue... Dunno if it's best attaching a boolean just to change the description or creating a whole new tongue type.
        }
        //Hair Color
        if (!InCollection(player.hairColor, wyrmHairColor) && changes < changeLimit && rand(3) == 0) {
            player.hairColor = randomChoice(wyrmHairColor);
            outputText("[pg]Your head tingles as something in your hair change, the strands flashing for an instant before they turn <b>" + player.hairColor + " just like those of a frost wyrm.</b><");
            changes++;
        }
        //Coat
        if (!player.hasCoatOfType(Skin.DRAGON_SCALES) && changes < changeLimit && rand(4) == 0) {
            outputText("[pg]");
            if (!InCollection(player.scaleColor, wyrmCoatColor)) {
                transformations.SkinDragonScales(Skin.COVERAGE_LOW, {colors: wyrmCoatColor}).applyEffect();
            } else {
                transformations.SkinDragonScales(Skin.COVERAGE_LOW, {color: player.scaleColor}).applyEffect();
            }
            changes++;
        }
        //Coat color fix
        if (player.hasCoatOfType(Skin.DRAGON_SCALES) && !InCollection(player.scaleColor, wyrmCoatColor) && changes < changeLimit && rand(4) == 0) {
            player.scaleColor = randomChoice(wyrmCoatColor);
            outputText("[pg]Woa! Your scales suddenly changed color to <b>[scale color]</b>!");
            changes++;
        }
        //Remove those damn wings!
        if (changes < changeLimit && rand(3) == 0 && player.wings.type != Wings.NONE) {
            outputText("[pg]");
            transformations.WingsNone.applyEffect();
            changes++;
        }
        //Neck
        if (player.rearBody.type != RearBody.FROSTWYRM && changes < changeLimit && rand(3) == 0) {
            outputText("[pg]");
            transformations.RearBodyFrostwyrm.applyEffect();
            changes++;
        }
        //Wyrm legs
        if (player.lowerBody != LowerBody.FROSTWYRM && changes < changeLimit && rand(3) == 0) {
            outputText("[pg]");
            transformations.LowerBodyFrostwyrm.applyEffect();
            if (!InCollection(player.scaleColor1, wyrmCoatColor)) player.scaleColor1 = randomChoice(wyrmCoatColor);
            changes++;
        }


        //Fix non human arms
        if (changes < changeLimit && rand(3) == 0 && player.arms.type != Arms.FROSTWYRM && player.arms.type != Arms.HUMAN) {
            outputText("[pg]");
            transformations.ArmsHuman.applyEffect();
            changes++;
        }
        //Gain frost wyrm Arms
        if (changes < changeLimit && rand(3) == 0 && player.arms.type == Arms.HUMAN) {
            outputText("[pg]");
            transformations.ArmsFrostwyrm.applyEffect();
            changes++;
        }

        if (player.isRace(Races.FROSTWYRM, 1, false) && changes < changeLimit && !player.hasPerk(PerkLib.DragonIceBreath)) {
            outputText("[pg]You feel something awakening within you... then a sudden sensation of choking grabs hold of your throat, sending you to your knees as you clutch and gasp for breath.  It feels like there's something trapped inside your windpipe, clawing and crawling its way up.  You retch and splutter and then, with a feeling of almost painful relief, you expel a bellowing roar from deep inside of yourself... with enough force that clods of dirt and shattered gravel are sent flying all around.  You look at the small crater you have literally blasted into the landscape with a mixture of awe and surprise.");
            outputText("[pg]It seems the fafnir tear has awaked some kind of power within you... your throat and chest feel very cold, however; you doubt you can force out more than one such blast before resting.  (<b>Gained Perk: Dragon ice breath!</b>)");
            player.createPerk(PerkLib.DragonIceBreath, 0, 0, 0, 0);
            changes++;
        }

        //BREEDING TIME
        if (player.isRace(Races.FROSTWYRM, 1, false) && rand(3) == 0 && player.gender > 0) {
            outputText("[pg]A sudden swell of lust races through your ");
            if (player.hasCock()) {
                outputText(cockDescript(0));
                if (player.hasVagina()) outputText(" and ");
            }
            if (player.hasVagina()) outputText(vaginaDescript());
            outputText(", making you wish you had a big fat dragon cock to go with. All you can think about now is fucking a dragon or something of that size right now ");
            if (player.hasCock() && flags[kFLAGS.EMBER_GENDER] >= 2) {
                outputText("filling a womb with your seed and fertilizing those eggs");
                if (player.hasVagina() && flags[kFLAGS.EMBER_GENDER] == 3) outputText(" even while ");
            }
            if (player.hasVagina() && (flags[kFLAGS.EMBER_GENDER] == 3)) {
                outputText("taking that hard, spurting cock inside your own " + vaginaDescript(0));
            }
            outputText("... too late, you realize that the<b> Fafnir tear has sent your draconic body into ");
            if (player.hasCock() && (rand(2) == 0 || !player.hasVagina())) { //If hermaphrodite, the chance is 50/50.
                outputText("rut");
                player.goIntoRut(false);
                changes++;
            } else {
                outputText("heat");
                player.goIntoHeat(false);
                changes++;
            }
            outputText("</b>.");
        }

        player.refillHunger(5);
        flags[kFLAGS.TIMES_TRANSFORMED] += changes;
    }

    public function bladeGrass(player:Player):void {
        player.slimeFeed();
        //init variables
        var changes:Number = 0;
        var changeLimit:Number = 2;
        var temp2:Number = 0;
        var temp3:Number = 0;
        //Randomly choose affects limit
        if (rand(2) == 0) changeLimit++;
        if (rand(2) == 0) changeLimit++;
        if (rand(2) == 0) changeLimit++;
        changeLimit += player.additionalTransformationChances;
        //clear screen
        clearOutput();
        outputText("You prepare the tea using grass you acquired and then drink it. Its sharp taste fires up your palate, and in moments, you find yourself more mentally and physically sharp, just like a blade.");

        //Statistical changes:
        //-Raises speed to 100.
        if (rand(2) == 0 && changes < changeLimit && MutagenBonus("spe", 1)) {
            outputText("[pg]Hearing a sudden sound you suddenly move by reflex to the side with such speed you nearly trip.  Seems your reaction speed has increased as well as your mobile execution.");
            changes++;
        }
        //-Raises intelligence to 80.
        if (changes < changeLimit && rand(3) == 0 && MutagenBonus("int", 1)) {
            outputText("[pg]Patience is the key to any successful behavior, whether in battle or careful planning.");
            outputText("\nYour mind keep readying new plans and strategy to ambush your future foes as your brain start processing logic way better then you used to.");
            changes++;
        }
        //-Decrease strength toward 30
        if (changes < changeLimit && rand(3) == 0 && player.str > 30) {
            outputText("[pg]You can feel your muscles softening as they slowly relax, becoming a tad weaker than before.  Who needs physical strength when you can beat your foes with superior speed?");
            player.addCurse("str", 1, 1);
            if (player.str > 60) player.addCurse("str", 1, 1);
            if (player.str > 80) player.addCurse("str", 1, 1);
            if (player.str > 90) player.addCurse("str", 1, 1);
            changes++;
        }

        if (player.blockingBodyTransformations()) changeLimit = 0;
        //Sexual Changes:
        //-Remove extra breast rows
        if (changes < changeLimit && player.bRows() > 1 && rand(3) == 0) {
            changes++;
            transformations.BreastRowsRemoveToOne.applyEffect();
        }
        //Shrink boobages till they are normal
        else if (rand(2) == 0 && changes < changeLimit && player.breastRows.length > 0) {
            //Single row
            if (player.breastRows.length == 1) {
                //Shrink if bigger than B cups
                if (player.breastRows[0].breastRating >= 2) {
                    var swtch:int = 1;
                    player.breastRows[0].breastRating--;
                    //Shrink again if huuuuge
                    if (player.breastRows[0].breastRating > 10) {
                        swtch++;
                        player.breastRows[0].breastRating--;
                    }
                    //Talk about shrinkage
                    if (swtch == 1) outputText("[pg]You feel a weight lifted from you, and realize your [breasts] have shrunk to " + player.breastCup(0) + "s.");
                    if (swtch == 2) outputText("[pg]You feel significantly lighter.  Looking down, you realize your breasts are MUCH smaller, down to " + player.breastCup(0) + "s.");
                    changes++;
                }

            }
            //multiple
            else {
                //temp2 = amount changed
                //temp3 = counter
                swtch = 0;
                temp2 = 0;
                temp3 = 0;
                if (player.biggestTitSize() >= 1) outputText("\n");
                while (temp3 < player.breastRows.length) {
                    if (player.breastRows[temp3].breastRating >= 1) {
                        player.breastRows[temp3].breastRating--;
                        temp2++;
                        outputText("\n");
                        //If this isn't the first change...
                        if (temp2 > 1) outputText("...and y");
                        else outputText("Y");
                        outputText("our " + breastDescript(temp3) + " shrink, dropping to " + player.breastCup(temp3) + "s.");
                    }
                    temp3++;
                }
                if (temp2 == 2) outputText("\nYou feel so much lighter after the change.");
                if (temp2 == 3) outputText("\nWithout the extra weight you feel particularly limber.");
                if (temp2 >= 4) outputText("\nIt feels as if the weight of the world has been lifted from your shoulders, or in this case, your chest.");
                if (temp2 > 0) changes++;
            }
        }
        //(tightens vagina to 1, increases lust/libido)
        if (player.hasVagina()) {
            if (player.looseness() > 1 && changes < changeLimit && rand(3) == 0 && MutagenBonus("lib", 2)) {
                outputText("[pg]With a gasp, you feel your [vagina] tightening, making you leak sticky girl-juice. After a few seconds, it stops, and you rub on your [vagina] excitedly. You can't wait to try this out!");
                dynStats("lus", 25, "scale", false);
                changes++;
                player.vaginas[0].vaginalLooseness--;
            }
        }
        //(tightens asshole to 1, increases lust)
        if (player.ass.analLooseness > 1 && changes < changeLimit && rand(3) == 0) {
            outputText("[pg]You let out a small cry as your [asshole] shrinks, becoming smaller and tighter. When it's done, you feel much hornier and eager to stretch it out again.");
            dynStats("lus", 25, "scale", false);
            MutagenBonus("lib", 2);
            changes++;
            player.ass.analLooseness--;
        }
        //(Thickens all cocks to a ratio of 1\" thickness per 5.5\"
        if (player.hasCock() && changes < changeLimit && rand(4) == 0) {
            //Use swtch to see if any dicks can be thickened
            swtch = 0;
            counter = 0;
            while (counter < player.cockTotal()) {
                if (player.cocks[counter].cockThickness * 5.5 < player.cocks[counter].cockLength) {
                    player.cocks[counter].cockThickness += .1;
                    swtch = 1;
                }
                counter++;
            }
            //If something got thickened
            if (swtch == 1) {
                outputText("[pg]You can feel your [cocks] filling out in your [armor]. Pulling ");
                if (player.cockTotal() == 1) outputText("it");
                else outputText("them");
                outputText(" out, you look closely.  ");
                if (player.cockTotal() == 1) outputText("It's");
                else outputText("They're");
                outputText(" definitely thicker.");
                var counter:Number;
                changes++;
            }
        }

        //Physical Changes:
        //PartialCoatChitin skin
        if (changes < changeLimit && !player.hasPartialCoat(Skin.CHITIN) && rand(2) == 0) {
            outputText("[pg]");
            transformations.SkinChitin(Skin.COVERAGE_LOW, {colors: MantisRace.MantisChitinColors}).applyEffect();
            changes++;
        }

        //Antennae (nie wymaga innych body parts)
        if (changes < changeLimit && player.hasCoatOfType(Skin.CHITIN) && player.antennae.type != Antennae.MANTIS && rand(3) == 0) {
            outputText("[pg]");
            transformations.AntennaeMantis.applyEffect();
            changes++;
        }
        //Horns
        if (changes < changeLimit && player.hasCoatOfType(Skin.CHITIN) && player.horns.count > 0 && player.horns.type != Horns.ORCHID && rand(3) == 0) {
            outputText("[pg]");
            transformations.HornsNone.applyEffect();
            changes++;
        }

        //oviposition (prawdopodobnie podobne do wersji dla bee niż dridera)
        if (changes < changeLimit && transformations.OvipositorMantis.isPossible() && rand(2) == 0) {
            transformations.OvipositorMantis.applyEffect();
            changes++;
        }

        //Legs
        if (player.lowerBody != LowerBody.MANTIS && player.hasCoatOfType(Skin.CHITIN) && changes < changeLimit && rand(3) == 0) {
            outputText("[pg]");
            transformations.LowerBodyMantis(2).applyEffect();
            changes++;
        }

        //Arms
        if (player.lowerBody == LowerBody.MANTIS && player.hasCoatOfType(Skin.CHITIN) && !InCollection(player.arms.type, Arms.MANTIS) && changes < changeLimit && rand(3) == 0) {
            outputText("[pg]");
            transformations.ArmsMantis.applyEffect();
            changes++;
        }

        //Tail
        if (player.arms.type == Arms.MANTIS && player.hasCoatOfType(Skin.CHITIN) && player.tailType != Tail.MANTIS_ABDOMEN && changes < changeLimit && rand(3) == 0) {
            outputText("[pg]");
            transformations.TailMantis.applyEffect();
            changes++;
        }

        //Wings
        if (!InCollection(player.wings.type, Wings.MANTIS_LARGE) && changes < changeLimit && rand(4) == 0) {
            //Grow bigger mantis wings!
            if (player.wings.type == Wings.MANTIS_SMALL) {
                outputText("[pg]");
                transformations.WingsMantisLarge.applyEffect();
            }
            //Grow small mantis wings if player has none.
            else if (player.wings.type == Wings.NONE) {
                outputText("[pg]");
                transformations.WingsMantisSmall.applyEffect();
            }
            //Remove old wings
            else {
                outputText("[pg]");
                transformations.WingsNone.applyEffect();
            }
            changes++;
        }

        //Chitin skin
        if (changes < changeLimit && player.hasPartialCoat(Skin.CHITIN) && player.tailType == Tail.MANTIS_ABDOMEN && rand(2) == 0) {
            outputText("[pg]");
            transformations.SkinChitin(Skin.COVERAGE_COMPLETE, {colors: MantisRace.MantisChitinColors}).applyEffect();
            changes++;
        }

        // Remove gills
        if (rand(4) == 0 && player.hasGills() && changes < changeLimit) {
            outputText("[pg]");
            transformations.GillsNone.applyEffect();
            changes++;
        }

        player.refillHunger(5);
        flags[kFLAGS.TIMES_TRANSFORMED] += changes;
    }

    public function infernalWine(player:Player):void {
        player.slimeFeed();
        //init variables
        var changes:Number = 0;
        var changeLimit:Number = 2;
        //Temporary storage
        var temp2:Number = 0;
        //var temp3:Number = 0;
        //Randomly choose affects limit
        if (rand(2) == 0) changeLimit++;
        if (rand(2) == 0) changeLimit++;
        if (rand(2) == 0) changeLimit++;
        changeLimit += player.additionalTransformationChances;
        //clear screen
        clearOutput();
        outputText("You raise the disgusting black concoction to your mouth. The taste is better than its texture but leaves you with a strong aftertaste of sulfur.");
        dynStats("cor", 3 + rand(3));

        //int change
        if (changes < changeLimit && rand(3) == 0 && MutagenBonus("int", 1)) {
            outputText("[pg]Arcane knowledge floods into your mind. You immediately imagine tons of new sinister ways to use this knowledge.");
            changes++;
        }
        if (player.blockingBodyTransformations()) changeLimit = 0;
        //sexual changes
        //female
        if (player.gender > 1) {
            if (player.biggestTitSize() <= 4 && changes < changeLimit && rand(3) == 0) {
                if (rand(2) == 0) outputText("[pg]Your [breasts] tingle for a moment before becoming larger.");
                else outputText("[pg]You feel a little weight added to your chest as your [breasts] seem to inflate and settle in a larger size.");
                player.growTits(1 + rand(3), 1, false, 3);
                changes++;
                player.addCurse("sen", 1, 1);
            }
            if (player.breastRows.length == 0) {
                transformations.CreateBreastRow(1).applyEffect();
                outputText("\n");
            }
        }
        //male
        if ((player.gender == 1 || player.gender == 3) && rand(3) == 0 && changes < changeLimit) {
            if ((player.horseCocks() + player.demonCocks()) < player.cocks.length) {
                var temp:int = player.findFirstCockNotInType([CockTypesEnum.HORSE, CockTypesEnum.DEMON]);
                transformations.CockHorse(temp).applyEffect();
                dynStats("lus", 35, "scale", false);
                player.addCurse("sen", 4, 1);
                MutagenBonus("lib", 5);
                if (player.cocks[temp].cockThickness <= 2) player.thickenCock(temp, 1);
                changes++;
            } else {
                if (player.cocks.length == 1) {
                    temp2 = player.growCock(0, rand(3) + 1);
                    temp = 0;
                    dynStats("sen", 1, "lus", 10);
                } else {
                    //Find smallest cock
                    //Temp2 = smallness size
                    //temp = current smallest
                    //temp3 = player.cocks.length;
                    temp = player.shortestCockIndex();
                    //Grow smallest cock!
                    //temp2 changes to growth amount
                    temp2 = player.growCock(temp, rand(4) + 1);
                    dynStats("sen", 1, "lus", 10);
                }
                outputText("[pg]");
                if (temp2 > 2) outputText("Your " + cockDescript(temp) + " tightens painfully, inches of taut horse-flesh pouring out from your sheath as it grows longer.  Thick animal-pre forms at the flared tip, drawn out from the pleasure of the change.");
                if (temp2 > 1 && temp2 <= 2) outputText("Aching pressure builds within your sheath, suddenly releasing as an inch or more of extra dick flesh spills out.  A dollop of pre beads on the head of your enlarged " + cockDescript(temp) + " from the pleasure of the growth.");
                if (temp2 <= 1) outputText("A slight pressure builds and releases as your " + cockDescript(temp) + " pushes a bit further out of your sheath.");
                changes++;
            }
        }
        //physical changes
        //legs
        if (rand(3) == 0 && changes < changeLimit && player.lowerBody != LowerBody.CLOVEN_HOOFED) {
            outputText("[pg]");
            transformations.LowerBodyClovenHoofed(2).applyEffect();
            changes++;
        }
        //tail
        if (rand(3) == 0 && changes < changeLimit && player.lowerBody == LowerBody.CLOVEN_HOOFED && (player.tailType != Tail.GOAT && player.tailType != Tail.DEMONIC)) {
            outputText("[pg]");
            if (rand(2) == 0) {
                transformations.TailGoat.applyEffect();
            } else {
                transformations.TailDemonic.applyEffect();
            }
            changes++;
        }
        //wings
        if (rand(3) == 0 && changes < changeLimit && !InCollection(player.wings.type, Wings.BAT_LIKE_LARGE) && (player.tailType == Tail.GOAT || player.tailType == Tail.DEMONIC)) {
            //grow smalls to large
            if (player.wings.type == Wings.BAT_LIKE_TINY && player.cor >= (75-player.corruptionTolerance)) {
                outputText("[pg]");
                transformations.WingsDemonicLarge.applyEffect();
            } else if (player.wings.type == Wings.BEE_SMALL) {
                outputText("[pg]");
                transformations.WingsDemonicTiny.applyEffect();
            } else if (player.wings.type == Wings.BEE_LARGE) {
                outputText("[pg]");
                transformations.WingsDemonicLarge.applyEffect();
            } else {
                outputText("[pg]");
                transformations.WingsDemonicTiny.applyEffect();
            }
            //No wings
            if (player.wings.type == Wings.NONE) {
                outputText("[pg]");
                transformations.WingsDemonicTiny.applyEffect();
            }
            changes++;
        }

        //wings 2
        if (rand(3) == 0 && changes < changeLimit && !InCollection(player.wings.type, Wings.DEVILFEATHER) && (player.tailType == Tail.GOAT || player.tailType == Tail.DEMONIC)) {

            outputText("[pg]");
            transformations.WingsDevilfeather.applyEffect();
            changes++;
        }

        //arms
        if (rand(3) == 0 && changes < changeLimit && player.arms.type != Arms.DEVIL && (player.wings.type == Wings.BAT_LIKE_TINY || player.wings.type == Wings.BAT_LIKE_LARGE)) {
            outputText("[pg]");
            transformations.ArmsDevil.applyEffect();
            changes++;
        }
        //Horns
        if (rand(3) == 0 && changes < changeLimit && player.arms.type == Arms.DEVIL) {
            outputText("[pg]");
            if (player.horns.type == Horns.GOAT) {
                transformations.HornsGoatQuadruple.applyEffect();
            } else {
                transformations.HornsGoat.applyEffect();
            }
            changes++;
        }

        //Ears
        if (rand(3) == 0 && changes < changeLimit && player.ears.type != Ears.GOAT && player.horns.type == Horns.GOAT) {
            outputText("[pg]");
			transformations.EarsGoat.applyEffect();
            changes++;
        }
        //Fangs
        if (rand(3) == 0 && changes < changeLimit && player.faceType != Face.DEVIL_FANGS && player.ears.type == Ears.GOAT) {
            outputText("[pg]");
            transformations.FaceDevilFangs.applyEffect();
            changes++;
        }
        //Eyes
        if (rand(3) == 0 && changes < changeLimit && transformations.FaceDevilFangs.isPresent()) {
            if (transformations.EyesGoat.isPresent()) {
                outputText("[pg]");
                transformations.EyesDevil.applyEffect();
            } else if (transformations.EyesDevil.isPresent()) {
                outputText("[pg]");
                transformations.EyesGoat.applyEffect();
            } else {
                outputText("[pg]");
                transformations.EyesDevil.applyEffect();
            }
            changes++;
        }
        //Shrinkage!7
        if (rand(2) == 0 && player.basetallness > 42) {
            outputText("[pg]You see the ground grow closer. Upon examining yourself, you discover you are shorter than before.");
            player.tallness -= 1 + rand(3);
            changes++;
        }

        if (player.perkv1(IMutationsLib.DiamondHeartIM) >= 1) {
            outputText("[pg]Your Diamond Heart mutation has transformed to Obsidian Heart!");
            player.createPerk(IMutationsLib.ObsidianHeartIM, player.perkv1(IMutationsLib.DiamondHeartIM),0,0,0);
            player.removePerk(IMutationsLib.DiamondHeartIM);
        }
		DrunkenPowerEmpowerIfPossible();
		AelfwineEmpowerIfPossible();
        player.refillHunger(10);
        flags[kFLAGS.TIMES_TRANSFORMED] += changes;
    }
	
	public function jackalDate(player:Player):void {
		player.slimeFeed();
        //init variables
        var choice:int;
		var changes:Number = 0;
        var changeLimit:Number = 2;
        //Temporary storage
        var temp2:Number = 0;
        var temp3:Number = 0;
        var crit:Number = int(Math.random() * 20) / 10 + 2;
        //var temp3:Number = 0;
        //Randomly choose affects limit
        if (rand(2) == 0) changeLimit++;
        if (rand(2) == 0) changeLimit++;
        if (rand(2) == 0) changeLimit++;
        changeLimit += player.additionalTransformationChances;
        var Jackal_HairColor:Array = ["brown", "black", "bluish black"];
        var Jackal_FurColor:Array = ["brown", "black", "bluish black"];
        var Jackal_SkinColor:Array = ["dark", "tan", "olive"];
        //clear screen
        clearOutput();
        outputText("You consume the date. Despite its dried up looking exterior the fruit proves to be rich in flavor and nutrient. A few second later your body heats up as it is overcome by changes.");
		//wis change
        if (changes < changeLimit && rand(3) == 0 && MutagenBonus("wis", 1)) {
            outputText("[pg]You begin musing on the many people and creatures you've met thus far on Mareth. They are undisciplined and disorganized. It would only make sense for you to simply gather all those rowdy fools under your leadership so to better lead them against the common foe, maybe rule them too? ");
			if (player.cor < 50) {
				outputText("Your");
				if (player.gender > 0) outputText((player.hasCock()?" cock hardens":"")+(player.hasSheath()?" out of its sheath":"")+(player.gender == 3?" while":"")+(player.hasVagina()?" vagina drips":"")+(player.gender == 3?" in sympathy":"")+" as fantasies of an endless harem of slaves and sycophants servicing you overtake your thought. Even your enemies would make fine slaves if you could properly coerce them into working for you.");
				else outputText(" cheeks blush with arousal.");
			}
			else outputText("Realizing how self centered your thoughts are becoming you shake your head and berate yourself. Just what is this place doing to you?");
			dynStats("cor", 2 + rand(2));
            changes++;
        }
		if (player.blockingBodyTransformations()) changeLimit = 0;
		if (changes < changeLimit && player.cocks.length > 0) {
            //Grow knot on smallest knotted dog cock
            if (player.dogCocks() > 0 && changes < changeLimit && rand(3) == 0) {
                //Have smallest knotted cock selected.
                transformations.GrowKnot(-1, crit, 1, 20).applyEffect();
                changes++;
            }
            //Cock Xform if player has free cocks.
            if (player.dogCocks() < player.cocks.length && changes < changeLimit && rand(3) == 0) {
                //Select first human cock
                choice = player.findFirstCockNotInType([CockTypesEnum.DOG])
                //Talk about it
                //Demon
                if (player.cocks[choice].cockType == CockTypesEnum.DEMON) {
                    outputText("[pg]Your " + cockDescript(choice) + " color shifts red for a moment and begins to swell at the base, but within moments it smooths out, retaining its distinctive demonic shape, only perhaps a bit thicker.");
                    dynStats("lus", 2 * crit, "scale", false);
                    player.addCurse("sen", 1, 1);
                }
                else{
                    dynStats("lus", 5 * crit, "scale", false);
                    player.addCurse("sen", 4, 1);
                    transformations.CockDog(choice).applyEffect();
                }
                //Xform it!
                player.cocks[choice].knotMultiplier += 0.1;
                player.thickenCock(choice, 2);
                changes++;
            }
            //Cum Multiplier Xform
            if (player.cumMultiplier < 2 && rand(3) == 0 && changes < changeLimit) {
                choice = 1.5;
                //Lots of cum raises cum multiplier cap to 3 instead of 1.5
                if (player.hasPerk(PerkLib.MessyOrgasms)) choice = 3;
                if (choice < player.cumMultiplier + .05 * crit) {
                    changes--;
                } else {
                    player.cumMultiplier += .05 * crit;
                    //Flavor text
                    if (player.balls == 0) outputText("[pg]You feel a churning inside your gut as something inside you changes.");
                    if (player.hasBalls()) outputText("[pg]You feel a churning in your [balls].  It quickly settles, leaving them feeling somewhat more dense.");
                    if (crit > 1) outputText("  A bit of milky pre dribbles from your [cocks], pushed out by the change.");
                }
                changes++;
            }
            //single cock
            if (player.cocks.length == 1) {
                temp2 = player.growCock(0, rand(4) + 3);
                choice = 0;
                dynStats("lus", 10, "scale", false);
                player.addCurse("sen", 1, 1);
            }
            //Multicock
            else {
                //Find smallest cock
                //Temp2 = smallness size
                //choice = current smallest
                temp3 = player.cocks.length;
                choice = 0;
                while (temp3 > 0) {
                    temp3--;
                    //If current cock is smaller than saved, switch values.
                    if (player.cocks[choice].cockLength > player.cocks[temp3].cockLength) {
                        temp2 = player.cocks[temp3].cockLength;
                        choice = temp3;
                    }
                }
                //Grow smallest cock!
                //temp2 changes to growth amount
                temp2 = player.growCock(choice, rand(4) + 3);
                dynStats("lus", 10, "scale", false);
                player.addCurse("sen", 1, 1);
                if (player.cocks[choice].cockThickness <= 2) player.thickenCock(choice, 1);
            }
            if (temp2 > 2) outputText("[pg]Your " + cockDescript(choice) + " tightens painfully, inches of bulging dick-flesh pouring out from your crotch as it grows longer.  Thick pre forms at the pointed tip, drawn out from the pleasure of the change.");
            if (temp2 > 1 && temp2 <= 2) outputText("[pg]Aching pressure builds within your crotch, suddenly releasing as an inch or more of extra dick-flesh spills out.  A dollop of pre beads on the head of your enlarged " + cockDescript(choice) + " from the pleasure of the growth.");
            if (temp2 <= 1) outputText("[pg]A slight pressure builds and releases as your " + cockDescript(choice) + " pushes a bit further out of your crotch.");
        }
		//physical changes
		//legs
        if (rand(3) == 0 && changes < changeLimit && player.lowerBody != LowerBody.DOG) {
            outputText("[pg]");
            transformations.LowerBodyDog(2).applyEffect();
            changes++;
        }
		//arms
        if (rand(3) == 0 && changes < changeLimit && player.arms.type != Arms.CANINE) {
            outputText("[pg]");
            transformations.ArmsCanine.applyEffect();
            changes++;
        }
        //tail
        if (rand(3) == 0 && changes < changeLimit && player.tailType != Tail.DOG) {
            outputText("[pg]");
            transformations.TailDog.applyEffect();
            changes++;
        }
        //Ears
        if (rand(3) == 0 && changes < changeLimit && player.ears.type != Ears.JACKAL) {
            outputText("[pg]");
			transformations.EarsJackal.applyEffect();
            changes++;
        }
        //Face!
        // Prevents player with dog face from switching to animal canines then back to dog face and wasting changes
        var startedWithDogFace: Boolean = player.faceType == Face.DOG;
        if (rand(3) == 0 && changes < changeLimit && player.faceType != Face.DOG) {
            outputText("[pg]");
            transformations.FaceDog.applyEffect();
            changes++;
        }
		if (rand(3) == 0 && changes < changeLimit && player.faceType != Face.ANIMAL_TOOTHS && !startedWithDogFace) {
            outputText("[pg]");
			transformations.FaceAnimalTeeth.applyEffect();
            changes++;
        }
        if (player.tongue.type != Tongue.DOG && rand(3) == 0 && changes < changeLimit) {
            outputText("[pg]");
            transformations.TongueDog.applyEffect();
            changes++;
        }
        //Change skin to normal
        if (!player.hasPlainSkinOnly() && rand(3) == 0 && changes < changeLimit) {
            if (player.skinAdj != "") player.skinAdj = "";
            outputText("[pg]");
            transformations.SkinPlain.applyEffect();
            changes++;
        }
		if (!InCollection(player.skinColor, Jackal_SkinColor) && changes < changeLimit && rand(3) == 0) {
			player.skinColor = randomChoice(Jackal_SkinColor);
            outputText("[pg]Your skin suddenly darkens. Doesn’t look like much, but darker skin will likely help soak up more sunlight and keep you warmer.<b> You now have " + player.skinColor + " skin.</b>");
            changes++;
        }
		if (player.skin.base.type == Skin.PLAIN && !player.skin.hasGlyphTattoo() && rand(3) == 0 && changes < changeLimit) {
			outputText("\n\n");
			transformations.SkinPatternAnubis.applyEffect();
			changes++;
		}
		//Remove odd eyes
		if (changes < changeLimit && rand(3) == 0 && transformations.EyesHuman.isPossible()) {
			outputText("[pg]");
			transformations.EyesHuman.applyEffect();
			changes++;
		}
		if (changes < changeLimit && rand(3) == 0 && transformations.EyesChangeColor(["green", "red"]).isPossible()) {
			outputText("[pg]");
			if (rand(2) == 0) transformations.EyesChangeColor(["red"]).applyEffect();
			else transformations.EyesChangeColor(["green"]).applyEffect();
			changes++;
		}
		if (player.lowerBody == LowerBody.DOG && player.arms.type == Arms.CANINE && !InCollection(player.furColor, Jackal_FurColor) && changes < changeLimit && rand(3) == 0) {
            player.furColor = randomChoice(Jackal_FurColor);
            outputText("[pg]Woa! Your fur suddenly changed color to <b>[fur color]</b>!");
            changes++;
        }
        if (!InCollection(player.hairColor, Jackal_HairColor) && changes < changeLimit && rand(3) == 0) {
            player.hairColor = randomChoice(Jackal_HairColor);
            outputText("[pg]Your hairs seems to have changed color to " + player.hairColor + "!");
            changes++;
        }
        //Removes wings & rear body
        if (!InCollection(player.wings.type, Wings.NONE) && rand(3) == 0 && changes < changeLimit) {
            outputText("[pg]");
            transformations.WingsNone.applyEffect();
            changes++;
        }
		if (rand(3) == 0 && changes < changeLimit && player.rearBody.type != RearBody.NONE) {
            outputText("[pg]");
            transformations.RearBodyNone.applyEffect();
            changes++;
        }
        if (changes < changeLimit && !player.hasPerk(PerkLib.MummyLord) && player.racialScore(Races.ANUBIS) >= 15 && rand(3) == 0 && player.cor >= (50-player.corruptionTolerance)) {
            outputText("[pg]You begin to fantasize about building up a whole army of slave at your command and with your growing anubi powers this fetish is right within your reach.[pg]<b>(Gained the Mummy Lord perk!)</b>");
            if (player.hasPerk(PerkLib.MummyLordDormant)) {
				var mummies:Number = player.perkv1(PerkLib.MummyLord);
				var dura:Number = player.perkv2(PerkLib.MummyLord);
				player.createPerk(PerkLib.MummyLord,mummies,dura,0,0);
				player.removePerk(PerkLib.MummyLordDormant);
			}
			else player.createPerk(PerkLib.MummyLord,0,0,0,0);
            changes++;
        }
		player.refillHunger(10);
        flags[kFLAGS.TIMES_TRANSFORMED] += changes;
	}

    public function sageMedicine(player:Player, item:ItemType):void {
        player.slimeFeed();
        //init variables
        var changes:Number = 0;
        var changeLimit:Number = 2;
        //Temporary storage
        var temp2:Number = 0;
        //var temp3:Number = 0;
        //Randomly choose affects limit
        //clear screen
        clearOutput();
        outputText("[pg]You feel smarter and clearer of mind then before, however as you finish the Sage medecine the legendary gear in your inventory begins to radiate along with your "+
                (player.hasPerk(PerkLib.Phylactery) ? "Phylactery":"chest") + " as your very soul begin shining.\n\n");
        if (player.hasPerk(PerkLib.Phylactery) && !player.hasPerk(PerkLib.InnerPhylactery)) {
            outputText("You begin crying torrent as emotions overflow your mind again, no longer dimmed by the phylactery and all encompassing. Like a beating heart the pendant press against your chest, the gem slowly going through like if your body was fluid until it rest at your core where it has always belonged, the gem fusing with the flesh of your torso as body and soul are reunited.\n\n");
            player.createPerk(PerkLib.InnerPhylactery, 0,0,0,0);
        }
        outputText("As the holy item within your hand is turned to purifying energies, the black of any remaining corruption is washed away from you like night by the morning sun, your body surging with raw magic. Your powers feel boundless, only restricted by your imagination and how you plan to use them. Overcome by the torrent of swirling emotions, flowing power, and the pleasure brought on by the change, you achieve what may be the greatest orgasm in your life, cumming without reserve or shame. Is this what they call true fulfillment?\n\n");
        //transformation texts
        if (player.hasPhysicalWings()) outputText("Your wings change color and shape, turning into large feathery white wings larger then your old wings. ");
        else outputText("A knot of pain forms in your shoulders as they tense up. With a surprising force, a pair of immaculate white feathered wings sprout from your back, ripping a pair of holes in the back of your [armor].");
        player.hairColor = "immaculate white";
        player.featherColor = "immaculate white";
        player.furColor = "immaculate white";
        player.scaleColor = "immaculate white";
        outputText("Your hair also changes color to match this becoming immaculate white, wich is the color of purity come to think of it. Your fangs retract, your mouth becoming more human and you can't help but smile serenely at the idea of your body being purged of all that nasty stuff leaving space for the perfect you.");
        if (player.tail.type == Tail.DEMONIC)
            outputText(" Finally your tail covers with fur and scales taking on a noble draconic appearance, gone is the last remnant of the demonic you. [pg]");
        //int change
        if (MutagenBonus("int", 3) || MutagenBonus("wis", 3)) {
        }
        player.createPerk(PerkLib.SageMedicine,0,0,0,0);
        dynStats("cor", -10);
        //physical changes
        //legs
        if (player.lowerBody != LowerBody.HOOFED || !player.lowerBodyPart.isBiped()) {
            transformations.LowerBodyHoofed(2).applyEffect(false);
            changes++;
        }
        //tail
        if (player.tailType != Tail.AZAZEL) {
            transformations.TailAzazel.applyEffect(false);
            changes++;
        }
        //wings
        if (player.wings.type != Wings.PUREDEVILFEATHER) {
             transformations.WingsPureDevilfeather.applyEffect(false);
            changes++;
        }
        //arms
        if (player.arms.type != Arms.DEVIL) {
            transformations.ArmsDevil.applyEffect(false);
            changes++;
        }
        //Ears
        if (player.ears.type != Ears.GOAT) {
            transformations.EarsGoat.applyEffect(false);
            changes++;
        }
        //Face
        if (player.faceType != Face.INNOCENT) {
            transformations.FaceInnocent.applyEffect(false);
            changes++;
        }
        if (player.hairType != Hair.NORMAL)
            transformations.HairHuman.applyEffect(false);
        //Eyes
        if (!transformations.EyesGoat.isPresent()) {
            transformations.EyesGoat.applyEffect(false);
            changes++;
        }
        if (rand(3) == 0) transformations.EyesChangeColor(["gold"]).applyEffect(false);
        else transformations.EyesChangeColor(["pure blue"]).applyEffect(false);
        if (!player.hasPerk(PerkLib.Phylactery)) {
            outputText("Finally your soul begins to resonate with your next form, its power coalescing into a large gem that manifests on your torso. Well, you didn't have a phylactery before, but I guess that's a thing now? It reminds you of Alvina's own gem, come to think of it.\n\n");
            player.createPerk(PerkLib.InnerPhylactery, 0,0,0,0);
        }
        outputText("As Alvina herself declared, Want becomes so much more when used not for oneself but others.");
        if (silly()) outputText("Well friendship is magic as they say and love is the ultimate weapon. The ponies at the lake would applaud your statement.");
        outputText("Nothing can compare to the sheer joy of being delivered from your corrupt self, this time you hope for good.[pg]");
        outputText("You became a shining light in the darkness, an ascendant who transcended and triumphed over evil that of yours and others. A being beyond the demons power with none of the flaws. You are now an Azazel.\n\n");
        player.consumeItem(item);
        if (player.perkv1(IMutationsLib.ObsidianHeartIM) >= 1) {
            outputText("[pg]Your Obsidian Heart mutation has transformed to Diamond heart!");
            player.createPerk(IMutationsLib.DiamondHeartIM, player.perkv1(IMutationsLib.ObsidianHeartIM),0,0,0);
            player.removePerk(IMutationsLib.ObsidianHeartIM);
        }
        IMutationsLib.DiamondHeartIM.trueMutation = true;
        //TODO add Azazel perks effects
        outputText("\n<b>Obtained ability: Judgement Flare</b>  The counterpart to infernal flare.");
        outputText("\n<b>Obtained ability: Exorcism</b>  Damage any creature above 25% corruption for 50% of its hit point total. Can be used only once per battle.");
        player.createPerk(PerkLib.Immortality, 0,0,0,0);
        outputText("\n<b>Obtained perk: Immortality</b>  "+PerkLib.Immortality.desc());
        player.createPerk(PerkLib.SealSin, 0,0,0,0); //TODO add Azazel perks effects
        outputText("\n<b>Obtained perk: Seal Sin</b>  "+PerkLib.SealSin.desc());
        outputText("\n<b>Obtained ability: Perfect Clarity</b>  Deal increased magic damage but take more physical damage, increase evasion slightly.");
        player.createPerk(PerkLib.Purifier, 0,0,0,0);
        outputText("\n<b>Obtained perk: Purifier</b>  "+PerkLib.Purifier.desc());
        player.createPerk(PerkLib.ConvictionOfPurpose, 0,0,0,0); //TODO add Azazel perks effects
        outputText("\n<b>Obtained perk: Conviction Of Purpose</b>  "+PerkLib.ConvictionOfPurpose.desc());
        outputText("\n<b>Gained Perk: Transformation Immunity!</b> "+ PerkLib.TransformationImmunity2.desc());
        player.createPerk(PerkLib.TransformationImmunity2, 5, 0, 0, 0);
        if (player.hasPerk(PerkLib.RacialParagon)) flags[kFLAGS.APEX_SELECTED_RACE] = Races.AZAZEL;
        player.removeAllRacialMutation();
        player.refillHunger(10);
        flags[kFLAGS.TIMES_TRANSFORMED] += changes;
        mainViewManager.updateCharviewIfNeeded();
        SceneLib.inventory.itemGoNext();
    }

    public function frothyBeer(player:Player):void {
        outputText("Feeling parched, you twist the metal cap from the clear green bottle and chug it down. ");
        dynStats("lus", Math.round(15*player.postConsumptionMlt()), "scale", false);
        player.refillHunger(10, false);
        if (!player.hasStatusEffect(StatusEffects.Drunk)) {
            player.createStatusEffect(StatusEffects.Drunk, 2, 1, 1, 0);
            MutagenBonus("str", 0.1);
            player.addCurse("inte", 0.5, 1);
            MutagenBonus("lib", 0.25);
        } else {
            player.addStatusValue(StatusEffects.Drunk, 2, 1);
            if (player.statusEffectv1(StatusEffects.Drunk) < 2) player.addStatusValue(StatusEffects.Drunk, 1, 1);
            if (player.statusEffectv2(StatusEffects.Drunk) == 2) {
                outputText("[pg]<b>You feel a bit drunk. Maybe you should cut back on the beers?</b>");
            }
            //Get so drunk you end up peeing! Genderless can still urinate.
            if (player.statusEffectv2(StatusEffects.Drunk) >= 3) {
                outputText("[pg]You feel so drunk; your vision is blurry and you realize something's not feeling right. Gasp! You have to piss like a racehorse! You stumble toward the nearest bush");
                if (player.hasVagina() && !player.hasCock()) outputText(player.clothedOrNakedLower(", open up your [armor]") + " and release your pressure onto the ground. ");
                else outputText(player.clothedOrNakedLower(", open up your [armor]") + " and release your pressure onto the wall. ");
                outputText("It's like as if the floodgate has opened! ");
                awardAchievement("Urine Trouble", kACHIEVEMENTS.GENERAL_URINE_TROUBLE, true, true, false);
                awardAchievement("Smashed", kACHIEVEMENTS.GENERAL_SMASHED, true, true, false);
                outputText("[pg]It seems to take forever but it eventually stops. You look down to see that your urine has been absorbed into the ground.");
                player.removeStatusEffect(StatusEffects.Drunk);
                cheatTime(1 / 12);
            }
        }
        if (player.tone < 70) player.modTone(70, rand(3));
        if (player.femininity > 30) player.modFem(30, rand(3));
		DrunkenPowerEmpowerIfPossible();
		AelfwineEmpowerIfPossible();
    }

    public function jabberwockyScale(player:Player):void {
        player.slimeFeed();
        clearOutput();
        var changes:Number = 0;
        var changeLimit:Number = 0;
        player.refillHunger(10);
        if (player.racialScore(Races.DRAGON, false) > 15) {
            outputText("You eat the scale expecting some kind of spectacular change and for a moment pretty much nothing happen. You begin to feel weird… like very weird. For some reason your situation as a whole is so funny you can’t help but laugh. Are you seriously eating some otherworldly dragon scale just so you can turn into a messed up rabbit dragon yourself? Aha yes you are and that's way to funny.");
            changeLimit += 15;
        } else {
            outputText("You eat the scale expecting some kind of spectacular change, but strangely nothing happened. Maybe you should stop eating everything you find.");
        }
        if (player.blockingBodyTransformations()) changeLimit = 0;
        //-Jabberwocky face/bucktooth
        if ((player.faceType == Face.DRAGON || player.faceType == Face.DRAGON_FANGS) && changes < changeLimit) {
            outputText("[pg]");
            if (player.faceType == Face.DRAGON_FANGS) {
                transformations.FaceBucktooth.applyEffect();
            } else {
                transformations.FaceJabberwocky.applyEffect();
            }
            changes++;
        }
        //-Existing horns become jabby'
        if (player.horns.type != Horns.JABBERWOCKY && changes < changeLimit) {
            outputText("[pg]");
            transformations.HornsJabberwocky.applyEffect();
            changes++;
        }
        //-Jabby Neck
        if (player.antennae.type != Antennae.JABBERWOCKY && changes < changeLimit) {
            outputText("[pg]");
            transformations.AntennaeJabberwocky.applyEffect();
            changes++;
        }
        //Gain Dragon Eyes
        if (player.eyes.type != Eyes.DRACONIC && changes < changeLimit) {
            outputText("[pg]");
            transformations.EyesDraconic.applyEffect();
            changes++;
        }
        //red eyes
        if (!InCollection(player.eyes.colour, ("red")) && changes < changeLimit) {
            outputText("[pg]");
            transformations.EyesChangeColor(["red"]).applyEffect();
            changes++;
        }
        //Make sure pc is at least partialscaled
        if (!player.hasCoatOfType(Skin.DRAGON_SCALES) && changes < changeLimit) {
            outputText("[pg]");
            transformations.SkinDragonScales(Skin.COVERAGE_LOW, {color: "magenta"}).applyEffect();
            player.scaleColor2 = "purplish black";
            changes++;
        }
        // Scale color
        if ((!InCollection(player.furColor1, ("magenta")) || !InCollection(player.scaleColor1, ("magenta")) || !InCollection(player.furColor2, ("purplish black")) || !InCollection(player.scaleColor2, ("purplish black"))) && changes < changeLimit) {
            player.furColor1 = "magenta";
            player.furColor2 = "purplish black";
            player.scaleColor1 = "magenta";
            player.scaleColor2 = "purplish black";
            changes++;
        }
        //-Jabby Arms
        if (player.arms.type != Arms.JABBERWOCKY && changes < changeLimit) {
            outputText("[pg]");
            transformations.ArmsJabberwocky.applyEffect();
            changes++;
        }
        //-Jabby leg
        if (player.lowerBody != LowerBody.JABBERWOCKY && changes < changeLimit) {
            outputText("[pg]");
            transformations.LowerBodyJabberwocky.applyEffect();
            changes++;
        }
        //-Jabby Wings
        if ((player.wings.type != Wings.JABBERWOCKY) && changes < changeLimit) {
            outputText("[pg]");
            transformations.WingsJabberwocky.applyEffect();
            changes++;
        }
        //-Jabby Ears
        if ((player.ears.type != Ears.BUNNY) && changes < changeLimit) {
            outputText("[pg]");
            transformations.EarsBunny.applyEffect();
            changes++;
        }
        // Hair color
        if (!InCollection(player.hairColor, ("purplish-pink")) && changes < changeLimit) {
            outputText("[pg]");
            outputText("[pg]Your hair suddenly tingles as purplish-pink colored strands begins to cover your entire skalp and before long all of them are of same dark color.");
            player.hairColor = "purplish-pink";
            changes++;
        }
        //Skin color
        if (player.skinColor != "caramel" && changes < changeLimit) {
            changes++;
            outputText("[pg]It takes a while for you to notice, but <b>");
            if (player.isFurCovered()) outputText("the skin under your [fur color] " + player.skinDesc);
            else outputText("your " + player.skinDesc);
            outputText(" has changed to become ");
            player.skinColor = "caramel";
            outputText(player.skinColor + " colored.</b>");
        }

        if (!player.hasPerk(PerkLib.DragonLustPoisonBreath) && changes < changeLimit){
            outputText("\n\nYou feel something awakening within you... then a sudden sensation of choking grabs hold of your throat, sending you to your knees as you clutch and gasp for breath.  It feels like there's something trapped inside your windpipe, clawing and crawling its way up.  You retch and splutter and then, with a feeling of almost painful relief, you expel a bellowing roar from deep inside of yourself... covering the whole area in front of you with pinkish sweet smelling smoke.");
            outputText("\n\nIt seems the scale has awaked some kind of power within you...  (<b>Gained Perk: Dragon lust poison breath!</b>)");
            player.createPerk(PerkLib.DragonLustPoisonBreath, 0, 0, 0, 0);
        }

        //-Madness
        if (!player.hasPerk(PerkLib.Insanity) && changes < changeLimit) {
            outputText("[pg]");
            outputText("you begin to laugh uncontrollably. Wow, how stupid you've been acting until now. Reality has unfolded before your eyes in a whole new manner and as the magic of wonderland begins to fully seep into your formerly logical, short sighted, desperately stubborn mind you open to a whole new perspective of the world you didn't have access to, the diagonal one. See most people look up down left or right but what about the area in between or the area behind? ");
			outputText("People might say you make no sense, that you're crazy but at the end of the day they are just blind idiots trying to make sense of a reality they have no access to. You've seen it all and understand it all.  (<b>Gained Perk: Insanity!</b>)");
            player.createPerk(PerkLib.Insanity,0,0,0,0);
            changes++;
        }
        flags[kFLAGS.TIMES_TRANSFORMED] += changes;
    }
	
	public function alrauneSnowFlower(player:Player):void {
		clearOutput();
		if (player.isRaceCached(Races.ALRAUNE)) {
			outputText("You smell the flower, taking in the scent. Suddenly you feel yourself changing, your green skin progressively turning blue and your petals white. Your eyes also lose their green shade in favor of taking on a pale blue. Somehow you feel the cold won’t be bothering you much anymore, although you're afraid you might have become highly flammable. <b>You are now a snow lily alraune and gained the perk Snow Lily and Cold Affinity.</b>");
			player.skinColor = "pale blue";
			player.hairColor = randomChoice("pink", "white", "bluish white");
			player.eyes.colour = "pale blue";
			player.createPerk(PerkLib.SnowLily, 0, 0, 0, 0);
			if (player.hasPerk(PerkLib.Cinderbloom)) player.removePerk(PerkLib.Cinderbloom);
			if (player.hasPerk(PerkLib.Nightshade)) player.removePerk(PerkLib.Nightshade);
			if (!player.hasPerk(PerkLib.ColdAffinity)) player.createPerk(PerkLib.ColdAffinity, 0, 0, 1, 0);
			if (player.hasPerk(PerkLib.FireAffinity) && player.perkv3(PerkLib.FireAffinity) == 1) player.removePerk(PerkLib.FireAffinity);
			if (player.hasPerk(PerkLib.DarknessAffinity) && player.perkv3(PerkLib.DarknessAffinity) == 1) player.removePerk(PerkLib.DarknessAffinity);
		}
		else outputText("No text for this case. enjoy your LIA-SUPRISE!!!");
	}
	public function alrauneEmberFlower(player:Player):void {
		clearOutput();
		if (player.isRaceCached(Races.ALRAUNE)) {
			outputText("You smell the flower, taking in the scent. Suddenly you feel yourself changing, as your green skin progressively turns charred black and your petals red. Your eyes also lose their green shade in favor of taking on a deep fire red. Somehow you feel the heat won’t be bothering you much anymore, although you're afraid you will wilt in cold temperature. <b>You are now a cinderbloom Alraune and gained the Cinderbloom perk and fire affinity.</b>");
			player.skinColor = "burnt brown";
			player.hairColor = randomChoice("pink", "orange", "red");
			player.eyes.colour = "fiery red";
			player.createPerk(PerkLib.Cinderbloom, 0, 0, 0, 0);
			if (player.hasPerk(PerkLib.SnowLily)) player.removePerk(PerkLib.SnowLily);
			if (player.hasPerk(PerkLib.Nightshade)) player.removePerk(PerkLib.Nightshade);
			if (!player.hasPerk(PerkLib.FireAffinity)) player.createPerk(PerkLib.FireAffinity, 0, 0, 1, 0);
			if (player.hasPerk(PerkLib.ColdAffinity) && player.perkv3(PerkLib.ColdAffinity) == 1) player.removePerk(PerkLib.ColdAffinity);
			if (player.hasPerk(PerkLib.DarknessAffinity) && player.perkv3(PerkLib.DarknessAffinity) == 1) player.removePerk(PerkLib.DarknessAffinity);
		}
		else outputText("No text for this case. enjoy your LIA-SUPRISE!!!");
	}
	public function alrauneBlackLily(player:Player):void {
		clearOutput();
		if (player.isRaceCached(Races.ALRAUNE)) {
			outputText("Upon absorbing the Black Lily, you start to feel lightheaded "+(player.lowerBody == LowerBody.FLOWER_LILIRAUNE?"which you can also see in your sister ":"")+"and you decide to close up your lily and sleep it off"+(player.lowerBody == LowerBody.FLOWER_LILIRAUNE?" with your sister in your arms":"")+". When you "+(player.lowerBody == LowerBody.FLOWER_LILIRAUNE?"both ":"")+"wake up an hour later, your bod"+(player.lowerBody == LowerBody.FLOWER_LILIRAUNE?"ies":"y")+" and the lily you reside in have already changed. ");
			outputText("The petals became as black as the absorbed flower, with " + (player.lowerBody == LowerBody.FLOWER_LILIRAUNE?"both of ":"") + "your skin tone" + (player.lowerBody == LowerBody.FLOWER_LILIRAUNE?"s":"") + " taking on a lavender hue. Your eyes became red, and your hair has changed from " + player.hairColor + " to a light and bright pink. Along with even more lewd thoughts from before coursing through " + (player.lowerBody == LowerBody.FLOWER_LILIRAUNE?"both ":"") + "your mind" + (player.lowerBody == LowerBody.FLOWER_LILIRAUNE?"s":"") + ", your intoxicating nectar has become more potent and has gained the viscosity of semen, ");
			outputText("practically mimicking said fluid in all except the color, smell and taste. The smell is so strong, mesmerizing and erotic, you " + (player.lowerBody == LowerBody.FLOWER_LILIRAUNE?"both ":"") + "almost cum from smelling your own nectar. Hell, any weak-willed being that comes close to you might just cum on the spot just from smelling it. ");
			outputText("People might say you make no sense, that you're crazy but at the end of the day they are just blind idiots trying to make sense of a reality they have no access to. You've seen it all and understand it all.  (<b>Gain the Nightshade perk and Dark Affinity.</b>)");
			player.skinColor = "lavender";
			player.hairColor = "bright pink";
			player.eyes.colour = "red";
			player.createPerk(PerkLib.Nightshade, 0, 0, 0, 0);
			if (player.hasPerk(PerkLib.Cinderbloom)) player.removePerk(PerkLib.Cinderbloom);
			if (player.hasPerk(PerkLib.SnowLily)) player.removePerk(PerkLib.SnowLily);
			if (!player.hasPerk(PerkLib.DarknessAffinity)) player.createPerk(PerkLib.DarknessAffinity, 0, 0, 1, 0);
			if (player.hasPerk(PerkLib.ColdAffinity) && player.perkv3(PerkLib.ColdAffinity) == 1) player.removePerk(PerkLib.ColdAffinity);
			if (player.hasPerk(PerkLib.FireAffinity) && player.perkv3(PerkLib.FireAffinity) == 1) player.removePerk(PerkLib.FireAffinity);
		}
		else outputText("No text for this case. enjoy your LIA-SUPRISE!!!");
	}

    public function bayrleaf(player:Player):void {
        player.slimeFeed();
        //init variables
        var changes:Number = 0;
        var changeLimit:Number = 2;
        //Randomly choose affects limit
        if (rand(2) == 0) changeLimit++;
        if (rand(2) == 0) changeLimit++;
        if (rand(2) == 0) changeLimit++;
        changeLimit += player.additionalTransformationChances;
        //Temporary storage
        var temp:Number = 0;
        //clear screen
        clearOutput();
        outputText("You drink the tea and feel relaxed and in harmony with your surroundings. As you are lost in those relaxing thoughts, your body begins to change.");
        //-Raises toughness up to 100.
        if (changes < changeLimit && rand(3) == 0 && MutagenBonus("tou", 1)) {
            outputText("[pg]You're feeling tougher and sturdier. A force of nature, really. Whoever is going to attack you is going to have a hard time damaging your solid athletic body.");
            changes++;
        }
        //-Raises strength to 100.
        if (rand(3) == 0 && changes < changeLimit && MutagenBonus("str", 1)) {
            outputText("[pg]You feel just as strong as a bear!");
            if (player.tou < 50) outputText(" Well maybe not a bear but you sure can pack a punch with your fist.");
            changes++;
        }
        if (player.blockingBodyTransformations()) changeLimit = 0;
        if (changes < changeLimit && rand(2) == 0 && player.basetallness < 84) {
            temp = rand(5) + 3;
            //Slow rate of growth near ceiling
            if (player.basetallness > 90) temp = Math.floor(temp / 2);
            //Never 0
            if (temp == 0) temp = 1;
            //Flavor texts.  Flavored like 1950's cigarettes. Yum.
            if (temp < 5) outputText("[pg]You shift uncomfortably as you realize you feel off balance.  Gazing down, you realize you have grown SLIGHTLY taller.");
            if (temp >= 5 && temp < 7) outputText("[pg]You feel dizzy and slightly off, but quickly realize it's due to a sudden increase in height.");
            if (temp == 7) outputText("[pg]Staggering forwards, you clutch at your head dizzily.  You spend a moment getting your balance, and stand up, feeling noticeably taller.");
            player.tallness += temp;
            changes++;
        }
        //Increase player's breast size
        if (player.gender > 1 && player.biggestTitSize() <= 12 && changes < changeLimit && rand(3) == 0) {
            if (rand(2) == 0) outputText("[pg]Your [breasts] tingle for a moment before becoming larger.");
            else outputText("[pg]You feel a little weight added to your chest as your [breasts] seem to inflate and settle in a larger size.");
            player.growTits(1 + rand(3), 1, false, 3);
            changes++;
            dynStats("sen", .5);
        }
        //-Grow hips out if narrow.
        if (player.hips.type < 10 && changes < changeLimit && rand(3) == 0) {
            outputText("[pg]Your gait shifts slightly to accommodate your widening [hips]. The change is subtle, but they're definitely broader.");
            player.hips.type++;
            changes++;
        }
        //-Narrow hips if crazy wide
        if (player.hips.type >= 15 && changes < changeLimit && rand(3) == 0) {
            outputText("[pg]Your gait shifts inward, your [hips] narrowing significantly. They remain quite thick, but they're not as absurdly wide as before.");
            player.hips.type--;
            changes++;
        }
        //-Big booty
        if (player.butt.type < 8 && changes < changeLimit && rand(3) == 0) {
            player.butt.type++;
            changes++;
            outputText("[pg]A slight jiggle works through your rear, but instead of stopping it starts again. You can actually feel your [armor] being filled out by the growing cheeks. When it stops, you find yourself the proud owner of a [butt].");
        }
        //-Narrow booty if crazy huge.
        if (player.butt.type >= 14 && changes < changeLimit && rand(4) == 0) {
            changes++;
            player.butt.type--;
            outputText("[pg]A feeling of tightness starts in your [butt], increasing gradually. The sensation grows and grows, but as it does your center of balance shifts. You reach back to feel yourself, and sure enough your massive booty is shrinking into a more manageable size.");
        }
        //Physical changes
        //Ears
        if (player.ears.type != Ears.BEAR && player.ears.type != Ears.PANDA && changes < changeLimit && rand(3) == 0) {
            outputText("[pg]");
            if (rand(2) == 0) {
                transformations.EarsBear.applyEffect();
            } else {
                transformations.EarsPanda.applyEffect();
            }
            changes++;
        }
        //Eyes
        if (changes < changeLimit && rand(3) == 0 && transformations.EyesHuman.isPresent() && player.ears.type == Ears.BEAR) {
            outputText("[pg]");
            transformations.EyesBear.applyEffect();
            changes++;
        }
        //Remove odd eyes
        if (changes < changeLimit && rand(4) == 0 && player.eyes.type > Eyes.HUMAN && player.eyes.type != Eyes.BEAR) {
            outputText("[pg]");
            transformations.EyesHuman.applyEffect();
            changes++;
        }
        //Arms
        if (player.arms.type != Arms.BEAR && player.eyes.type == Eyes.BEAR && changes < changeLimit && rand(3) == 0) {
            outputText("[pg]");
            if (player.arms.type == Arms.HUMAN) {
                transformations.ArmsBear.applyEffect();
            } else {
                transformations.ArmsHuman.applyEffect();
            }
            changes++;
        }
        //Legs
        if (player.lowerBody != LowerBody.BEAR && player.arms.type == Arms.BEAR && changes < changeLimit && rand(3) == 0) {
            if (player.lowerBody == LowerBody.HUMAN) {
                outputText("[pg]");
                transformations.LowerBodyBear(2).applyEffect();
            } else {
            	outputText("[pg]");
            	transformations.LowerBodyHuman.applyEffect();
            }
            changes++;
        }
        //Tail
        if (player.tailType != Tail.BEAR && player.lowerBody == LowerBody.BEAR && changes < changeLimit && rand(3) == 0) {
            outputText("[pg]");
            transformations.TailBear.applyEffect();
            changes++;
        }
        //Face
        if (((player.ears.type == Ears.BEAR && player.faceType != Face.BEAR) || (player.ears.type == Ears.PANDA && player.faceType != Face.PANDA)) && player.faceType == Face.HUMAN && changes < changeLimit && rand(3) == 0) {
            outputText("[pg]");
            if (player.ears.type == Ears.BEAR) {
                transformations.FaceBear.applyEffect();
            } else {
                transformations.FacePanda.applyEffect();
            }
            changes++;
        }
        if (player.faceType != Face.HUMAN && player.faceType != Face.BEAR && player.faceType != Face.PANDA && changes < changeLimit && rand(4) == 0) {
            outputText("[pg]");
            transformations.FaceHuman.applyEffect();
            changes++;
        }
        //Fur
        if (rand(3) == 0 && player.hasPlainSkinOnly() && !player.isFurCovered() && changes < changeLimit) {
            outputText("[pg]Your skin itches intensely. You gaze down as more and more hairs break forth from your skin quickly transforming into a coat of ");
            if (player.faceType == Face.PANDA) {
                outputText("[pg]");
                transformations.HairChangeColor(["white"]).applyEffect();
                outputText("[pg]");
                transformations.SkinFur(Skin.COVERAGE_COMPLETE, {color: "white", color2: "black", pattern: Skin.PATTERN_SPOTTED}).applyEffect();
            } else {
                outputText("[pg]");
                transformations.SkinFur(Skin.COVERAGE_COMPLETE, {colors: ["brown", "white", "black"]}).applyEffect();
            }
            changes++;
        }
        if (!player.hasPlainSkinOnly() && rand(4) == 0 && changes < changeLimit) {
            if (player.skinAdj != "") player.skinAdj = "";
            outputText("[pg]");
            transformations.SkinPlain.applyEffect();
            changes++;
        }
        if (player.gender == 1 && changes < changeLimit && rand(2) == 0) outputText(player.modTone(85, 3));
        if (player.gender == 2 && changes < changeLimit && rand(2) == 0) outputText(player.modTone(10, 5));
        if (changes < changeLimit && rand(2) == 0) outputText(player.modThickness(70, 4));
        player.refillHunger(10);
        flags[kFLAGS.TIMES_TRANSFORMED] += changes;
    }

    public function firesnailsaliva(player:Player):void {
        player.slimeFeed();
        //init variables
        var changes:Number = 0;
        var changeLimit:Number = 2;
        //Randomly choose affects limit
        if (rand(2) == 0) changeLimit++;
        if (rand(2) == 0) changeLimit++;
        if (rand(2) == 0) changeLimit++;
        changeLimit += player.additionalTransformationChances;
        //clear screen
        clearOutput();
        outputText("Sometimes you question your choices in life. Right now, for instance, your choice is to drink up the saliva of some fiery snail, thing. The first thing of note to happen is that your body begins to heat up. Whatever this thing is doing to you, it's clearly raising your arousal.");
        dynStats("lus", Math.round(10*player.postConsumptionMlt()), "scale", false);
        //Speed down

        //Toughness up
		if (rand(3) == 0 && changes < changeLimit && MutagenBonus("tou", 1)) {
            outputText("[pg]You become more... solid. You feel sinewy, a memory comes unbidden from your youth of a grizzled wolf you encountered while hunting, covered in scars, yet still moving with an easy grace. You imagine that must have felt something like this. You don't feel the cold as much as before either maybe you're just getting used to it.");
            changes++;
        }
        //Libido up
		if (rand(2) == 0 && changes < changeLimit && MutagenBonus("lib", 10)) {
            outputText("[pg]A knot of fire in your gut doubles you over but passes after a few moments. " +
                    "As you straighten you can feel the need seeping into you, puddling in your nethers."
                    + " An instinctive desire to mate spreads through you, increasing your lust and boosting your sex-drive.");
            changes++;
        }
        if (player.blockingBodyTransformations()) changeLimit = 0;
        //Skin
        if (player.skinAdj != "sticky glistering" && player.hasPlainSkinOnly() && rand(3) == 0 && changes < changeLimit) {
            outputText("[pg]Your sweating begins to intensify and before you know it you’re covered with sticky fluid all over your body just like a slug or a snail, your skin glistening under the sun.");
            player.skinAdj = "sticky glistering";
            changes++;
        }
        if (!player.hasPlainSkinOnly() && changes < changeLimit && rand(3) == 0) {
            outputText("[pg]");
            transformations.SkinPlain.applyEffect();
            changes++;
        }
        //Red/Orange skin!
        if (!InCollection(player.skinColor, "red", "orange") && player.hasPlainSkinOnly() && changes < changeLimit && rand(3) == 0) {
            outputText("[pg]Your [skin.type] ");
            player.skinColor = randomChoice("red", "orange");
            outputText("begins to lose its color, fading until you're as white as an albino.  Then, starting at the crown of your head, a reddish hue rolls down your body in a wave, turning you completely " + player.skinColor + ".");
        }
        //Legs
        if (player.skinAdj == "sticky glistering" && player.hasPlainSkinOnly() && player.lowerBody != LowerBody.FIRE_SNAIL && changes < changeLimit && rand(3) == 0) {
            if (player.lowerBody == LowerBody.HUMAN) {
                outputText("[pg]");
                transformations.LowerBodyFireSnail.applyEffect();
            } else {
                outputText("[pg]");
                transformations.LowerBodyHuman.applyEffect();
            }
            changes++;
        }
        //Snail shell
        if (player.rearBody.type != RearBody.SNAIL_SHELL && changes < changeLimit && rand(3) == 0) {
            outputText("[pg]");
            transformations.RearBodySnailShell.applyEffect();
            changes++;
        }
        //Removes wings!
        if (player.rearBody.type == RearBody.SNAIL_SHELL && player.wings.type != Wings.NONE && changes < changeLimit && rand(2) == 0) {
            outputText("[pg]To your utter disappointment your wings are absorbed back into your shell. Guess there's no such things as flying snails.");
            transformations.WingsNone.applyEffect(false);
            changes++;
        }
        //Face
        if (player.rearBody.type == RearBody.SNAIL_SHELL && player.faceType != Face.FIRE_SNAIL && changes < changeLimit && rand(3) == 0) {
            outputText("[pg]");
            transformations.FaceFireSnail.applyEffect();
            changes++;
        }
        //Eyes
        if (transformations.FaceFireSnail.isPossible() && transformations.EyesFireSnail.isPossible() && changes < changeLimit && rand(3) == 0) {
            if (player.eyes.type == Eyes.HUMAN) {
                outputText("[pg]");
                transformations.EyesFireSnail.applyEffect();
            } else {
                outputText("[pg]");
                transformations.EyesHuman.applyEffect();
            }
            changes++;
        }
        //Antennae
        if (changes < changeLimit && player.faceType == Face.FIRE_SNAIL && player.antennae.type != Antennae.FIRE_SNAIL && rand(3) == 0) {
            outputText("[pg]");
            transformations.AntennaeFireSnail.applyEffect();
            changes++;
        }
        //Hair
        if (player.faceType == Face.FIRE_SNAIL && player.hairType != Hair.BURNING && changes < changeLimit && rand(3) == 0) {
            player.hairColor = randomChoice("red", "orange", "pinkish orange");
            outputText("[pg]As if sweating wasn't bad enough your body temperature suddenly spikes again. Before you know it your entire body is set on fire, especially your hair of which the tips glows like smoldering embers. Not only that but instead of normal sweat your entire body now quite literally seethes liquid fire. <b>Guess you’re a full fire snail now with this burning hair of yours.</b>");
		    outputText("[pg]");
		    transformations.HairBurning.applyEffect(false);
            changes++;
        }
        player.refillHunger(10);
        flags[kFLAGS.TIMES_TRANSFORMED] += changes;
    }

    public function redRiverRoot(player:Player):void {
        player.slimeFeed();
        //init variables
        var changes:Number = 0;
        var changeLimit:Number = 2;
        //Temporary storage
        //var temp2:Number = 0;
        //var temp3:Number = 0;
        //Randomly choose affects limit
        if (rand(2) == 0) changeLimit++;
        if (rand(2) == 0) changeLimit++;
        if (rand(2) == 0) changeLimit++;
        changeLimit += player.additionalTransformationChances;
        clearOutput();
        outputText("Having bought that odd-looking root on the bakery, you give it a try, only to face the mildly spicy taste of the transformative. Still, it has a rich flavour and texture, but soon that becomes secondary, as you realize that the foreign rhizome is changing your body!");

        //spe change
        if (changes < changeLimit && rand(3) == 0 && MutagenBonus("spe", 2)) {
            outputText("[pg]After a momentaneous dizziness, you recover your stance, and find your muscles becoming more nimble and prompt to run.");
            changes++;
        }
        if (player.blockingBodyTransformations()) changeLimit = 0;
        //sexual changes
        //-If the PC has quad nipples:
        if (player.averageNipplesPerBreast() > 1 && rand(4) == 0 && changes < changeLimit) {
            transformations.NipplesPerBreastOne.applyEffect();
            changes++;
        }
        //-Remove extra breast rows
        if (changes < changeLimit && player.bRows() > 1 && rand(3) == 0) {
            changes++;
            transformations.BreastRowsRemoveToOne.applyEffect();
        }
        if (player.butt.type > 5) {
            player.butt.type -= 2;
            outputText("[pg]A feeling of tightness starts in your [butt], increasing gradually. The sensation grows and grows, but as it does your center of balance shifts. You reach back to feel yourself, and sure enough your [butt] is shrinking into a more manageable size.");
        }
        if (player.isFemaleOrHerm()) {
            if (player.biggestTitSize() <= 2 && changes < changeLimit && rand(3) == 0) {
                player.growTits(1 + rand(2), 1, false, 3);
                outputText("[pg]Your breasts feel constrained and painful against your top as they grow larger by the moment, finally stopping as they reach " + player.breastCup(0) + " size. You rub the tender orbs as you get used to your larger breast flesh.");
                changes++;
                MutagenBonus("lib", 1);
            }
            if (changes < changeLimit && rand(3) == 0 && player.biggestTitSize() > 4) {
                player.shrinkTits();
                changes++;
            }
            if (player.hips.type > 12) {
                outputText("[pg]You stumble a bit as the bones in your pelvis rearrange themselves painfully. Your hips have narrowed.");
                player.hips.type -= 1 + rand(3);
                changes++;
            }
            if (player.hips.type < 6) {
                outputText("[pg]You stumble as you feel the bones in your hips grinding, expanding your hips noticeably.");
                player.hips.type += 1 + rand(3);
                changes++;
            }
            if (player.nippleLength > 1 && player.biggestTitSize() > 0) {
                outputText("[pg]With a sudden pinch your [nipples] get smaller and smaller, stopping when they are roughly half their previous size");
                player.nippleLength /= 2;
            }
            if (player.hasVagina() && player.vaginas[0].vaginalWetness < 3 && changes < changeLimit && rand(2) == 0) {
                outputText("[pg]Your [cunt]'s internal walls feel a tingly wave of strange tightness which then transitions into a long stretching sensation, like you were made of putty. Experimentally, you slip a couple of fingers inside to find you've become looser and more pliable, ready to take those monster cocks.");
                player.vaginas[0].vaginalWetness++;
                changes++;
            }
            if (player.tone < 65 && rand(3) == 0) {
                outputText(player.modTone(65, 2));
            }
            if (player.thickness > 35 && rand(3) == 0) {
                outputText(player.modThickness(35, 5));
            }
        }
        if (player.isMale()) {
            if (changes < changeLimit && rand(3) == 0 && player.biggestTitSize() > 2) {
                player.shrinkTits();
                changes++;
            }
            if (player.nippleLength > 1 && changes < changeLimit && rand(3) == 0) {
                outputText("[pg]With a sudden pinch your [nipples] get smaller and smaller, stopping when they are roughly half their previous size");
                player.nippleLength /= 2;
            }
            if (player.hips.type > 10 && changes < changeLimit && rand(3) == 0) {
                outputText("[pg]You stumble a bit as the bones in your pelvis rearrange themselves painfully. Your hips have narrowed.");
                player.hips.type -= 1 + rand(3);
                changes++;
            }
            if (player.hips.type < 2 && changes < changeLimit && rand(3) == 0) {
                outputText("[pg]You stumble as you feel the bones in your hips grinding, expanding your hips noticeably.");
                player.hips.type += 1 + rand(3);
                changes++;
            }
            if (player.tone < 70 && rand(3) === 0) {
                outputText(player.modTone(65, 2));
            }
            if (player.thickness > 35 && rand(3) === 0) {
                outputText(player.modThickness(35, 5));
            }
        }
        if (player.isMaleOrHerm()) {
            if (player.hasCock() && player.cocks[0].cockType != CockTypesEnum.RED_PANDA && rand(3) == 0 && changes < changeLimit) {
                transformations.CockRedPanda(0).applyEffect();
                changes++;
            }
            if (player.shortestCockLength() < 6 && rand(3) == 0 && changes < changeLimit) {
                var increment:Number = player.growCock(player.shortestCockIndex(), 1 + rand(2));
                outputText("Your [if (cocks > 1)shortest] cock fills to its normal size, but doesn’t just stop there. Your cock feels incredibly tight as a few more inches of length seem to pour out from your crotch. Your cock has gained " + increment + " inches.");
                changes++;
            }
            if (player.biggestCockLength() > 16 && rand(3) == 0 && changes < changeLimit) {
                var idx:int = player.biggestCockIndex();
                outputText("[pg]You feel a tightness in your groin like someone tugging on your shaft from behind you. Once the sensation"
                        + " fades you check [if (hasLowerGarment)inside your [lowergarment]|your [multicock]] and see that your"
                        + " [if (cocks > 1)largest] [cock] has shrunk to a slightly shorter length.");
                player.cocks[idx].cockLength -= (rand(10) + 5) / 10;
                if (player.cocks[idx].cockThickness > 3) {
                    outputText(" Your " + player.cockDescript(idx) + " definitely got a bit thinner as well.");
                    player.cocks[idx].cockThickness -= (rand(4) + 1) / 10;
                }
                changes++;
            }
            if (player.smallestCockArea() < 10 && rand(3) == 0 && changes < changeLimit) {
                outputText("[if (cocks > 1) One of your cocks|Your cock] feels swollen and heavy. With a firm, but gentle, squeeze, you confirm your suspicions. It is definitely thicker.");
                player.thickenCock(player.thinnestCockIndex(), 1.5);
                changes++;
            }
        }

        //Remove additional cocks
        if (player.cocks.length > 1 && rand(3) == 0 && changes < changeLimit) {
            player.removeCock(1, 1);
            outputText("[pg]You have a strange feeling as your crotch tingles.  Opening your [armor], <b>you realize that one of your cocks have vanished completely!</b>");
            changes++;
        }
        //Remove additional balls/remove uniball
        if ((player.hasBalls() || player.hasStatusEffect(StatusEffects.Uniball)) && rand(3) == 0 && changes < changeLimit) {
            if (player.ballSize > 2) {
                if (player.ballSize > 5) player.ballSize -= 1 + rand(3);
                player.ballSize -= 1;
                outputText("[pg]Your scrotum slowly shrinks, settling down at a smaller size. <b>Your " + player.ballsDescriptLight() + " ");
                if (player.balls == 1 || player.hasStatusEffect(StatusEffects.Uniball)) outputText("is smaller now.</b>");
                else outputText("are smaller now.</b>");
                changes++;
            } else if (player.balls > 2) {
                player.balls = 2;
                //I have no idea if Uniball status effect sets balls to 1 or not so here's a just in case.
                if (player.hasStatusEffect(StatusEffects.Uniball)) player.removeStatusEffect(StatusEffects.Uniball);
                outputText("[pg]Your scrotum slowly shrinks until they seem to have reached a normal size. <b>You can feel as if your extra balls fused together, leaving you with a pair of balls.</b>");
                changes++;
            } else if (player.balls == 1 || player.hasStatusEffect(StatusEffects.Uniball)) {
                player.balls = 2;
                if (player.hasStatusEffect(StatusEffects.Uniball)) player.removeStatusEffect(StatusEffects.Uniball);
                outputText("[pg]Your scrotum slowly shrinks, and you feel a great pressure release in your groin. <b>Your uniball has split apart, leaving you with a pair of balls.</b>");
                changes++;
            }
        }
        //physical changes
        //Ears
        if (rand(3) == 0 && changes < changeLimit && player.ears.type != Ears.RED_PANDA) {
            outputText("[pg]");
			transformations.EarsRedPanda.applyEffect();
            changes++;
        }
        //Removes antennae
        if (player.antennae.type > Antennae.NONE && player.antennae.type != Antennae.COCKATRICE && rand(3) == 0 && changes < changeLimit) {
            outputText("[pg]The pair of [antennae] atop your head start losing the ability of ‘feel’ your surroundings as the root takes effect on them. Soon they recede on your head, and in a matter of seconds, it looks like they never were there.");
            player.antennae.type = Antennae.NONE;
            changes++;
        }
        //Remove odd eyes
        if (changes < changeLimit && rand(4) == 0 && player.eyes.type > Eyes.HUMAN) {
            outputText("[pg]");
            transformations.EyesHuman.applyEffect();
            changes++;
        }
        //Hair
        var panda_hair:Array = ["white", "auburn", "red", "russet"];
        if ((!InCollection(player.hairColor, panda_hair) || player.hairType != 0) && changes < changeLimit && rand(3) == 0) {
            if (!InCollection(player.hairColor, panda_hair)) {
                player.hairColor = randomChoice(panda_hair);
                outputText("[pg]A mild tingling on your scalp makes your check yourself on the stream. Seems like the root is changing your hair this time, turning it into [hair].");
            }
            if (player.hairLength == 0) {
                player.hairLength = 1;
                outputText("[pg]The familiar sensation of hair returns to your head. After looking yourself on the stream, you confirm that your once bald head now has normal, short [haircolor] hair.");
            }
            if (player.hairType != 0) {
                if (player.hairType == Hair.FEATHER) outputText("[pg]Shortly after their taste fades, the roots seem to have effect. Your scalp itches and as you scratch you see your feathered hair begin to shed, downy feathers falling from your head until you are bald. Alarmed by this sudden change you quickly go to examine yourself in the nearby river, relief soon washing over you as new [haircolor] hair begins to rapidly grow. <b>You now have [hair]</b>!");
                else if (player.hairType == Hair.GORGON) {
                    player.hairLength = 1;
                    outputText("[pg]As you finish the root, the scaled critters on your head shake wildly in displeasure. Then, a sudden heat envelopes your scalp. The transformative effects of your spicy meal make themselves notorious, as the writhing mess of snakes start hissing uncontrollably. Many of them go rigid, any kind of life that they could had taken away by the root effects. Soon all the snakes that made your hair are limp and lifeless.");
                    outputText("[pg]Their dead bodies are separated from you head by a scorching sensation, and start falling to the ground, turning to dust in a matter of seconds. Examining your head on the stream, you realize that you have a normal, healthy scalp, though devoid of any kind of hair.");
                    outputText("[pg]The effects don’t end here, though as the familiar sensation of hair returns to your head a moment later. After looking yourself on the stream again, you confirm that <b>your once bald head now has normal, short [haircolor] hair</b>.");
                } else if (player.hairType == Hair.GOO) {
                    player.hairLength = 1;
                    outputText("[pg]After having consumed the root, a lock of gooey hair falls over your forehead. When you try to examine it, the bunch of goo falls to the ground and evaporates. As you tilt your head to see what happened, more and more patches of goo start falling from your head, disappearing on the ground with the same speed. Soon, your scalp is devoid of any kind of goo, albeit entirely bald.");
                    outputText("[pg]Not for long, it seems, as the familiar sensation of hair returns to your head a moment later. After looking yourself on the stream, you confirm that <b>your once bald head now has normal, short [haircolor] hair</b>.");
                } else outputText("[pg]A mild tingling on your scalp makes your check yourself on the stream. Seems like the root is changing your hair this time, <b>turning it into [hair]</b>.");
		        outputText("[pg]");
		        transformations.HairHuman.applyEffect(false);
            }
            flags[kFLAGS.HAIR_GROWTH_STOPPED_BECAUSE_LIZARD] = 0;
            changes++;
        }
        //Face
        if (rand(3) == 0 && changes < changeLimit && player.faceType != Face.RED_PANDA && player.ears.type == Ears.RED_PANDA) {
            outputText("[pg]");
            transformations.FaceRedPanda.applyEffect();
            changes++;
        }
        //Arms
        if (rand(3) == 0 && changes < changeLimit && player.arms.type != Arms.RED_PANDA && player.tailType == Tail.RED_PANDA) {
            outputText("[pg]");
            transformations.ArmsRedPanda.applyEffect();
            changes++;
        }
        //Legs
        if (rand(3) == 0 && changes < changeLimit && player.lowerBody != LowerBody.RED_PANDA && player.arms.type == Arms.RED_PANDA) {
            outputText("[pg]");
            transformations.LowerBodyRedPanda.applyEffect();
            changes++;
        }
        //Tail
        if (rand(3) == 0 && changes < changeLimit && player.tailType != Tail.RED_PANDA) {
            outputText("[pg]");
            transformations.TailRedPanda.applyEffect();
            changes++;
        }
        if (rand(3) == 0 && changes < changeLimit && (!player.isFurCovered() || player.skin.pattern != Skin.PATTERN_RED_PANDA_UNDERBODY)) {
            outputText("[pg]");
            transformations.SkinFur(Skin.COVERAGE_COMPLETE, {color: "russet", color2: "black", pattern: Skin.PATTERN_RED_PANDA_UNDERBODY}).applyEffect();
            changes++;
        }
        player.refillHunger(20);
        flags[kFLAGS.TIMES_TRANSFORMED] += changes;
    }

    public function thickGossamer(type:Number, player:Player):void {
        //'type' refers to the variety of gossamer.
        //00 == Thick Green Onna Gossamer
        //01 == Thick Green Herm Gossamer
        //02 == Thick Green Oni Gossamer
        //03 == Thick Fiery Onna Gossamer
        //04 == Thick Fiery Herm Gossamer
        //05 == Thick Fiery Oni Gossamer
        //06 == Thick Frozen Onna Gossamer
        //07 == Thick Frozen Herm Gossamer
        //08 == Thick Frozen Oni Gossamer
        //09 == Thick Sandy Onna Gossamer
        //10 == Thick Sandy Herm Gossamer
        //11 == Thick Sandy Oni Gossamer
        //12 == Thick Pure Onna Gossamer
        //13 == Thick Pure Herm Gossamer
        //14 == Thick Pure Oni Gossamer
        //15 == Thick Wicked Onna Gossamer
        //16 == Thick Wicked Herm Gossamer
        //17 == Thick Wicked Oni Gossamer
        player.slimeFeed();
        //init variables
        var changes:Number = 0;
        var changeLimit:Number = 2;//Temporary storage
        var temp:Number = 0;
        var temp2:Number = 0;
        var temp3:Number = 0;
        //Randomly choose affects limit
        if (rand(2) == 0) changeLimit++;
        if (rand(2) == 0) changeLimit++;
        if (rand(2) == 0) changeLimit++;
        changeLimit += player.additionalTransformationChances;
        clearOutput();
        outputText("You use all the courage you can muster and in one go, swallow the gossamer. At that very moment, your stomach groans as you feel your body changing...");
		if (player.blockingBodyTransformations()) changeLimit = 0;

        if (changes < changeLimit && rand(2) == 0 && player.basetallness < 84) {
            temp = rand(5) + 3;
            //Slow rate of growth near ceiling
            if (player.basetallness > 90) temp = Math.floor(temp / 2);
            //Never 0
            if (temp == 0) temp = 1;
            //Flavor texts.  Flavored like 1950's cigarettes. Yum.
            if (temp < 5) outputText("[pg]You shift uncomfortably as you realize you feel off balance.  Gazing down, you realize you have grown SLIGHTLY taller.");
            if (temp >= 5 && temp < 7) outputText("[pg]You feel dizzy and slightly off, but quickly realize it's due to a sudden increase in height.");
            if (temp == 7) outputText("[pg]Staggering forwards, you clutch at your head dizzily.  You spend a moment getting your balance, and stand up, feeling noticeably taller.");
            player.tallness += temp;
            changes++;
        }

        if (type %3 == 0) {		//female
            if (player.biggestTitSize() <= 20 && changes < changeLimit && rand(3) == 0) {
                if (rand(2) == 0) outputText("[pg]Your [breasts] tingle for a moment before becoming larger.");
                else outputText("[pg]You feel a little weight added to your chest as your [breasts] seem to inflate and settle in a larger size.");
                player.growTits(1 + rand(2), 1, false, 3);
                changes++;
                dynStats("sen", .5);
                //boobsGrew = true;
            }
            if (player.breastRows.length == 0 && changes < changeLimit) {
                transformations.CreateBreastRow(1).applyEffect();
                outputText("\n");
                changes++;
            }
            //Shrink boobages till they are normal
            if (rand(2) == 0 && changes < changeLimit && player.breastRows.length > 0) {
                //Single row
                if (player.breastRows.length == 1) {
                    //Shrink if bigger than B cups
                    if (player.breastRows[0].breastRating >= 21) {
                        temp = 1;
                        player.breastRows[0].breastRating--;
                        //Shrink again if huuuuge
                        if (player.breastRows[0].breastRating > 28) {
                            temp++;
                            player.breastRows[0].breastRating--;
                        }
                        //Talk about shrinkage
                        if (temp == 1) outputText("[pg]You feel a weight lifted from you, and realize your " + player.breastDescript(0) + " have shrunk to " + player.breastCup(0) + "s.");
                        if (temp == 2) outputText("[pg]You feel significantly lighter.  Looking down, you realize your breasts are MUCH smaller, down to " + player.breastCup(0) + "s.");
                        changes++;
                    }
                }
                //multiple
                else {
                    //temp2 = amount changed
                    //temp3 = counter
                    temp = 0;
                    temp2 = 0;
                    temp3 = 0;
                    if (player.biggestTitSize() >= 1) outputText("\n");
                    while (temp3 < player.breastRows.length) {
                        if (player.breastRows[temp3].breastRating >= 21) {
                            player.breastRows[temp3].breastRating--;
                            temp2++;
                            outputText("\n");
                            //If this isn't the first change...
                            if (temp2 > 1) outputText("...and y");
                            else outputText("Y");
                            outputText("our " + player.breastDescript(temp3) + " shrink, dropping to " + player.breastCup(temp3) + "s.");
                        }
                        temp3++;
                    }
                    if (temp2 == 2) outputText("\nYou feel so much lighter after the change.");
                    if (temp2 == 3) outputText("\nWithout the extra weight you feel particularly limber.");
                    if (temp2 >= 4) outputText("\nIt feels as if the weight of the world has been lifted from your shoulders, or in this case, your chest.");
                    if (temp2 > 0) changes++;
                }
            }
            //-Grow hips out if narrow.
            if (player.hips.type < 15 && changes < changeLimit && rand(3) == 0) {
                outputText("[pg]Your gait shifts slightly to accommodate your widening [hips]. The change is subtle, but they're definitely broader.");
                player.hips.type++;
                changes++;
            }
            //-Narrow hips if crazy wide
            if (player.hips.type >= 16 && changes < changeLimit && rand(3) == 0) {
                outputText("[pg]Your gait shifts inward, your [hips] narrowing significantly. They remain quite thick, but they're not as absurdly wide as before.");
                player.hips.type--;
                changes++;
            }
            //-Big booty
            if (player.butt.type < 16 && changes < changeLimit && rand(3) == 0) {
                player.butt.type++;
                changes++;
                outputText("[pg]A slight jiggle works through your rear, but instead of stopping it starts again. You can actually feel your [armor] being filled out by the growing cheeks. When it stops, you find yourself the proud owner of a [butt].");
            }
            //-Narrow booty if crazy huge.
            if (player.butt.type >= 17 && changes < changeLimit && rand(3) == 0) {
                changes++;
                player.butt.type--;
                outputText("[pg]A feeling of tightness starts in your [butt], increasing gradually. The sensation grows and grows, but as it does your center of balance shifts. You reach back to feel yourself, and sure enough your massive booty is shrinking into a more manageable size.");
            }

            if (changes < changeLimit && player.cocks.length > 0 && rand(2) == 0) {
                //If the player has at least one dick, decrease the size of each slightly,
                outputText("[pg]");
                temp = player.longestCock();
                temp3 = 0;
                //Shrink said cock
                if (player.cocks[temp].cockLength < 6 && player.cocks[temp].cockLength >= 2.9) {
                    player.cocks[temp].cockLength -= .5;
                    temp3 -= .5;
                }
                temp3 += player.growCock(temp, (rand(3) + 1) * -1);
                player.lengthChange(temp3, 1);
                if (player.cocks[temp].cockLength < 2) {
                    transformations.CockToVagina().applyEffect();
                }
                //if the last of the player's dicks are eliminated this way, they gain a virgin vagina;
                if (player.cocks.length == 0 && !player.hasVagina()) {
                    transformations.VaginaHuman().applyEffect();
                    changes++;
                    dynStats("lus", 10, "scale", false);
                }
            }
            if (player.tone < 79) outputText(player.modTone(80, 2));
            if (player.thickness < 66) outputText(player.modThickness(70, 5));
            if (player.femininity < 100) player.modFem(100, rand(3));
        }
        if (type %3 == 1) {	//herm
            if (player.biggestTitSize() <= 22 && changes < changeLimit && rand(3) == 0) {
                if (rand(2) == 0) outputText("[pg]Your [breasts] tingle for a moment before becoming larger.");
                else outputText("[pg]You feel a little weight added to your chest as your [breasts] seem to inflate and settle in a larger size.");
                player.growTits(1 + rand(2), 1, false, 3);
                changes++;
                dynStats("sen", .5);
                //boobsGrew = true;
            }
            if (player.breastRows.length == 0 && changes < changeLimit) {
                transformations.CreateBreastRow(1).applyEffect();
                outputText("\n");
                changes++;
            }
            //Shrink boobages till they are normal
            if (rand(2) == 0 && changes < changeLimit && player.breastRows.length > 0) {
                //Single row
                if (player.breastRows.length == 1) {
                    //Shrink if bigger than B cups
                    if (player.breastRows[0].breastRating >= 23) {
                        temp = 1;
                        player.breastRows[0].breastRating--;
                        //Shrink again if huuuuge
                        if (player.breastRows[0].breastRating > 30) {
                            temp++;
                            player.breastRows[0].breastRating--;
                        }
                        //Talk about shrinkage
                        if (temp == 1) outputText("[pg]You feel a weight lifted from you, and realize your " + player.breastDescript(0) + " have shrunk to " + player.breastCup(0) + "s.");
                        if (temp == 2) outputText("[pg]You feel significantly lighter.  Looking down, you realize your breasts are MUCH smaller, down to " + player.breastCup(0) + "s.");
                        changes++;
                    }
                }
                //multiple
                else {
                    //temp2 = amount changed
                    //temp3 = counter
                    temp = 0;
                    temp2 = 0;
                    temp3 = 0;
                    if (player.biggestTitSize() >= 1) outputText("\n");
                    while (temp3 < player.breastRows.length) {
                        if (player.breastRows[temp3].breastRating >= 23) {
                            player.breastRows[temp3].breastRating--;
                            temp2++;
                            outputText("\n");
                            //If this isn't the first change...
                            if (temp2 > 1) outputText("...and y");
                            else outputText("Y");
                            outputText("our " + player.breastDescript(temp3) + " shrink, dropping to " + player.breastCup(temp3) + "s.");
                        }
                        temp3++;
                    }
                    if (temp2 == 2) outputText("\nYou feel so much lighter after the change.");
                    if (temp2 == 3) outputText("\nWithout the extra weight you feel particularly limber.");
                    if (temp2 >= 4) outputText("\nIt feels as if the weight of the world has been lifted from your shoulders, or in this case, your chest.");
                    if (temp2 > 0) changes++;
                }
            }
            //-Grow hips out if narrow.
            if (player.hips.type < 20 && changes < changeLimit && rand(3) == 0) {
                outputText("[pg]Your gait shifts slightly to accommodate your widening [hips]. The change is subtle, but they're definitely broader.");
                player.hips.type++;
                changes++;
            }
            //-Narrow hips if crazy wide
            if (player.hips.type >= 21 && changes < changeLimit && rand(3) == 0) {
                outputText("[pg]Your gait shifts inward, your [hips] narrowing significantly. They remain quite thick, but they're not as absurdly wide as before.");
                player.hips.type--;
                changes++;
            }
            //-Big booty
            if (player.butt.type < 20 && changes < changeLimit && rand(3) == 0) {
                player.butt.type++;
                changes++;
                outputText("[pg]A slight jiggle works through your rear, but instead of stopping it starts again. You can actually feel your [armor] being filled out by the growing cheeks. When it stops, you find yourself the proud owner of a [butt].");
            }
            //-Narrow booty if crazy huge.
            if (player.butt.type >= 21 && changes < changeLimit && rand(3) == 0) {
                changes++;
                player.butt.type--;
                outputText("[pg]A feeling of tightness starts in your [butt], increasing gradually. The sensation grows and grows, but as it does your center of balance shifts. You reach back to feel yourself, and sure enough your massive booty is shrinking into a more manageable size.");
            }

            if (player.tone < player.maxToneCap()) outputText(player.modTone(player.maxToneCap(), 15));
            if (player.thickness < player.maxThicknessCap()) outputText(player.modThickness(player.maxThicknessCap(), 5));
            if (player.femininity < 85) player.modFem(85, rand(3));
        }
        if (type %3 == 2) {	//male
            //-Remove extra breast rows
            if (changes < changeLimit && player.bRows() > 1 && rand(3) == 0) {
                changes++;
                transformations.BreastRowsRemoveToOne.applyEffect();
            }
            //Shrink boobages till they are normal
            if (rand(2) == 0 && changes < changeLimit && player.breastRows.length > 0) {
                //Single row
                if (player.breastRows.length == 1) {
                    //Shrink if bigger than B cups
                    if (player.breastRows[0].breastRating >= 1) {
                        temp = 1;
                        player.breastRows[0].breastRating--;
                        //Shrink again if huuuuge
                        if (player.breastRows[0].breastRating > 8) {
                            temp++;
                            player.breastRows[0].breastRating--;
                        }
                        //Talk about shrinkage
                        if (temp == 1) outputText("[pg]You feel a weight lifted from you, and realize your " + player.breastDescript(0) + " have shrunk to " + player.breastCup(0) + "s.");
                        if (temp == 2) outputText("[pg]You feel significantly lighter.  Looking down, you realize your breasts are MUCH smaller, down to " + player.breastCup(0) + "s.");
                        changes++;
                    }
                }
                //multiple
                else {
                    //temp2 = amount changed
                    //temp3 = counter
                    temp2 = 0;
                    temp3 = 0;
                    if (player.biggestTitSize() >= 1) outputText("\n");
                    while (temp3 < player.breastRows.length) {
                        if (player.breastRows[temp3].breastRating >= 1) {
                            player.breastRows[temp3].breastRating--;
                            temp2++;
                            outputText("\n");
                            //If this isn't the first change...
                            if (temp2 > 1) outputText("...and y");
                            else outputText("Y");
                            outputText("our " + player.breastDescript(temp3) + " shrink, dropping to " + player.breastCup(temp3) + "s.");
                        }
                        temp3++;
                    }
                    if (temp2 == 2) outputText("\nYou feel so much lighter after the change.");
                    if (temp2 == 3) outputText("\nWithout the extra weight you feel particularly limber.");
                    if (temp2 >= 4) outputText("\nIt feels as if the weight of the world has been lifted from your shoulders, or in this case, your chest.");
                    if (temp2 > 0) changes++;
                }
            }
            //-Grow hips out if narrow.
            if (player.hips.type < 4 && changes < changeLimit && rand(3) == 0) {
                outputText("[pg]Your gait shifts slightly to accommodate your widening [hips]. The change is subtle, but they're definitely broader.");
                player.hips.type++;
                changes++;
            }
            //-Narrow hips if crazy wide
            if (player.hips.type >= 5 && changes < changeLimit && rand(3) == 0) {
                outputText("[pg]Your gait shifts inward, your [hips] narrowing significantly. They remain quite thick, but they're not as absurdly wide as before.");
                player.hips.type--;
                changes++;
            }
            //-Big booty
            if (player.butt.type < 4 && changes < changeLimit && rand(3) == 0) {
                player.butt.type++;
                changes++;
                outputText("[pg]A slight jiggle works through your rear, but instead of stopping it starts again. You can actually feel your [armor] being filled out by the growing cheeks. When it stops, you find yourself the proud owner of a [butt].");
            }
            //-Narrow booty if crazy huge.
            if (player.butt.type >= 5 && changes < changeLimit && rand(3) == 0) {
                changes++;
                player.butt.type--;
                outputText("[pg]A feeling of tightness starts in your [butt], increasing gradually. The sensation grows and grows, but as it does your center of balance shifts. You reach back to feel yourself, and sure enough your massive booty is shrinking into a more manageable size.");
            }

            if (player.tone < player.maxToneCap()) outputText(player.modTone(player.maxToneCap(), 15));
            if (player.thickness < 30) outputText(player.modThickness(30, 5));
            if (player.femininity > 10) player.modFem(10, 20);

            //Kills vagina size (and eventually the whole vagina)
            if (player.vaginas.length > 0) {
                if (player.vaginas[0].vaginalLooseness > VaginaClass.LOOSENESS_TIGHT) {
                    //tighten that bitch up!
                    outputText("[pg]Your [vagina] clenches up painfully as it tightens up, becoming smaller and tighter.");
                    player.vaginas[0].vaginalLooseness--;
                } else {
                    outputText("[pg]A tightness in your groin is the only warning you get before your <b>[vagina] disappears forever</b>!");
                    //Goodbye womanhood!
                    if (player.cocks.length == 0) {
                        outputText("  Strangely, your clit seems to have resisted the change, and is growing larger by the moment. Eventually it ends, <b>leaving you with a completely human penis.</b>");
                        transformations.CockHuman().applyEffect(false);
                        player.clitLength = .25;
                    }
                    player.removeVagina(0, 1);
                }
                changes++;
            }
        }

        var skinColor:String = UshiOniRace.UshiOniSkinColors[type%6];
        if (player.hasPlainSkinOnly() && player.skinColor != skinColor && changes < changeLimit && rand(3) == 0) {
            player.skinColor = skinColor;
            outputText("[pg]Your skin tingles ever so slightly as the color changes before your eyes. As the tingling diminishes, you find that your skin has turned " + player.skinColor + ".");
            changes++;
        }
        if (!player.hasPlainSkinOnly() && changes < changeLimit && rand(3) == 0) {
            outputText("[pg]");
            transformations.SkinPlain.applyEffect();
            changes++;
        }

        var hairColor: String = UshiOniRace.UshiOniHairColors[type%6]
        if (player.hairType == Hair.NORMAL && player.hairColor != hairColor && changes < changeLimit && rand(3) == 0) {
            player.hairColor = hairColor;
            outputText("[pg]Your head tingles as something in your hair changes, the strands flashing for an instant before they turn " + hairColor + ".");
            changes++;
        }

        //Remove special hairs
        if (changes < changeLimit && player.hairType != Hair.NORMAL && rand(3) == 0) {
		    outputText("[pg]");
		    transformations.HairHuman.applyEffect();
            changes++;
        }
        //Ears
        if ((type == 0 || type == 1 || type == 2) && player.ears.type != Ears.COW && changes < changeLimit && rand(3) == 0) {
            if (player.hasStatusEffect(StatusEffects.UshiOnnaVariant)) {
                player.removeStatusEffect(StatusEffects.UshiOnnaVariant);
                player.createStatusEffect(StatusEffects.UshiOnnaVariant, 0, 0, 0, 0);
            } else player.createStatusEffect(StatusEffects.UshiOnnaVariant, 0, 0, 0, 0);
            outputText("[pg]");
			transformations.EarsCow.applyEffect();
            changes++;
        }
        //Tattoo
        if (player.skin.base.type == Skin.PLAIN && !player.skin.hasUshiOniTattoo() && rand(3) == 0 && changes < changeLimit) {
            outputText("[pg]");
            transformations.SkinPatternUshiOniTattoo.applyEffect();
            changes++;
        }
        //Legs
        if ((!player.isBiped() && player.lowerBody != LowerBody.DRIDER) && changes < changeLimit && rand(4) == 0) {
            outputText("[pg]");
            transformations.LowerBodyHuman.applyEffect();
            changes++;
        }
        //Normal Biped Legs -> Carapace-Clad Legs
		if ((
                (type == 1 && !InCollection(player.lowerBody, LowerBody.DRIDER, LowerBody.ATLACH_NACHA, LowerBody.CHITINOUS_SPIDER_LEGS))
                ||
                (type != 1 && player.lowerBody != LowerBody.CHITINOUS_SPIDER_LEGS)
            ) && (
                !player.isGoo() && !player.isNaga() && !player.isTaur() && !player.isScylla()
            )
            && changes < changeLimit && rand(4) == 0
		) {
            outputText("[pg]");
            transformations.LowerBodySpider.applyEffect();
            changes++;
        }
        //Tail
        if (player.tailType != Tail.USHI_ONI && (player.lowerBody == LowerBody.CHITINOUS_SPIDER_LEGS || player.lowerBody == LowerBody.DRIDER) && rand(4) == 0) {// && player.arms.type == Arms.SPIDER
            outputText("[pg]");
            transformations.TailUshiOni.applyEffect();
            changes++;
        }
        //Drider Item Only: Carapace-Clad Legs to Drider Legs
        if (player.lowerBody == LowerBody.CHITINOUS_SPIDER_LEGS && rand(4) == 0 && player.tailType == Tail.SPIDER_ADBOMEN) {
            outputText("[pg]");
            transformations.LowerBodyDrider.applyEffect();
            changes++;
        }
        //Drider butt
        if (player.isDrider() && player.tailType == Tail.USHI_ONI && changes < changeLimit && rand(3) == 0) {
            outputText("[pg]");
            transformations.LowerBodyUshiOni.applyEffect();
            changes++;
        }
        //Ushi oni/onna arms
        if (player.arms.type == Arms.SPIDER && player.arms.type != Arms.USHI_ONI && player.lowerBody == LowerBody.USHI_ONI && changes < changeLimit && rand(3) == 0) {
            outputText("[pg]");
            transformations.ArmsUshiOni.applyEffect();
            changes++;
        }
        //(Arms to carapace-covered arms)
        if (!InCollection(Arms.SPIDER) && player.lowerBody == LowerBody.USHI_ONI && changes < changeLimit && rand(3) == 0) {
            outputText("[pg]");
            transformations.ArmsSpider.applyEffect();
            changes++;
        }
        //Ushi oni/onna fangs
        if (player.faceType == Face.HUMAN && player.faceType != Face.USHI_ONI && changes < changeLimit && rand(3) == 0) {
            outputText("[pg]");
            transformations.FaceUshiOniOnna.applyEffect();
            if (player.tailRecharge < 5) player.tailRecharge = 5;
            changes++;
        }
        if (player.faceType != Face.HUMAN && player.faceType != Face.USHI_ONI && changes < changeLimit && rand(3) == 0) {
            outputText("[pg]");
            transformations.FaceHuman.applyEffect();
            changes++;
        }
        //Ushi oni/onna horns
        if (player.horns.type != Horns.USHI_ONI && player.horns.type == Horns.NONE && player.faceType == Face.USHI_ONI && changes < changeLimit && rand(3) == 0) {
            outputText("[pg]");
            transformations.HornsUshiOni.applyEffect();
            changes++;
        }
        if (changes < changeLimit && player.horns.count > 0 && player.horns.type != Horns.USHI_ONI && rand(3) == 0) {
            outputText("[pg]");
            transformations.HornsNone.applyEffect();
            changes++;
        }
        //eyes color change
        var eyeColor:String = UshiOniRace.UshiOniEyeColors[type%6];
        if (transformations.EyesChangeColor([eyeColor]).isPossible() && changes < changeLimit && rand(2) == 0) {
            transformations.EyesChangeColor([eyeColor]).applyEffect(false);
            outputText("[pg]Your vision gets blurry and your eyes itch, you go to a barrel with water and put your head underwater, eyes wide open. After the pain has subsided you take your head out of the water and look at its surface, your eyes are now "+eyeColor+".");
            changes++;
        }

    }

	public function trollFig(type:Number, player:Player):void {
		player.slimeFeed();
        //init variables
        var changes:Number = 0;
        var changeLimit:Number = 2;
        //Randomly choose affects limit
        if (rand(2) == 0) changeLimit++;
        if (rand(2) == 0) changeLimit++;
        if (rand(2) == 0) changeLimit++;
        changeLimit += player.additionalTransformationChances;
        clearOutput();
        if (type == 0) outputText("You bite into the fig, it’s sour, very sour. Trolls are supposed to enjoy this?");
		if (type == 1) outputText("You bite into the fig. The icy crust gives a crunch before you’re met with the juice trapped within. It’s sour, very sour. Trolls are supposed to enjoy this?");
		if (player.blockingBodyTransformations()) changeLimit = 0;
		if (rand(3) == 0 && changes < changeLimit && MutagenBonus("wis", 1)) {
            outputText("[pg]You feel a tremendous rush of mental celerity, as if your mind were clear of all doubt.");
            changes++;
        }
		if (rand(3) == 0 && changes < changeLimit && MutagenBonus("str", 1)) {
            outputText("[pg]You feel raw bestial power coursing through you.");
            changes++;
        }
        if (rand(3) == 0 && changes < changeLimit && MutagenBonus("spe", 1)) {
            outputText("[pg]You feel you could run forever, enjoying the feeling of the wind on your [skin.type].");
            changes++;
        }
        if (rand(3) == 0 && changes < changeLimit && MutagenBonus("tou", 1)) {
            outputText("[pg]You become more... solid. You feel sinewy, a memory comes unbidden from your youth of a grizzled wolf you encountered while hunting, covered in scars, yet still moving with an easy grace. You imagine that must have felt something like this. You don't feel the cold as much as before either maybe you're just getting used to it.");
            changes++;
        }
		//Boost cum production
        if (player.hasBalls() && player.hasCock() && rand(4) == 0 && changes < changeLimit) {
            player.cumMultiplier += 15;
            outputText("[pg]You feel your balls churn slightly, it’s apparent your <b>cum production has increased.</b>");
            changes++;
        }
		if (!player.blockingBodyTransformations()) {
			if (changes < changeLimit && rand(3) == 0 && player.biggestTitSize() > 2) {
                player.shrinkTits();
                changes++;
            }
			if (player.vaginas.length > 0 && player.vaginaType() != VaginaClass.HUMAN && rand(3) == 0) {
				transformations.VaginaHuman().applyEffect(false);
			}
			//Remove odd eyes
			if (changes < changeLimit && rand(4) == 0 && player.eyes.type > Eyes.HUMAN) {
				outputText("[pg]");
				transformations.EyesHuman.applyEffect();
				changes++;
			}
			if (type == 0) {
				if (player.basetallness < 94) {
					outputText("[pg]Whoa wait did you just gain some height!? You indeed notice you've grown by a few inches.");
					player.tallness += 1 + rand(3);
				}
				if (changes < changeLimit && rand(4) == 0 && player.eyes.type == Eyes.HUMAN && transformations.EyesChangeColor(["green"]).isPossible()) {
					transformations.EyesChangeColor(["green"]).applyEffect(false);
					outputText("[pg]You shiver as cold wind passes over your face. Something’s changed in your vision, and though you’re not sure what, you press on regardless. After going out and checking your reflection in a puddle, you discover your pupil color has changed to a blue as cold as ice. <b>You now have cold blue eyes.\n</b>");
					changes++;
				}
				if (rand(3) == 0 && changes < changeLimit && player.ears.type != Ears.TROLL) {
					outputText("[pg]");
					transformations.EarsTroll.applyEffect();
					changes++;
				}
				if (rand(3) == 0 && changes < changeLimit && player.faceType != Face.TROLL && player.ears.type == Ears.TROLL) {
					outputText("[pg]");
					transformations.FaceTroll.applyEffect();
					changes++;
				}
				if (rand(3) == 0 && changes < changeLimit && player.arms.type != Arms.TROLL) {
					outputText("[pg]");
					transformations.ArmsTroll.applyEffect();
					changes++;
				}
				if (rand(3) == 0 && changes < changeLimit && player.lowerBody != LowerBody.TROLL && player.arms.type == Arms.TROLL) {
					outputText("[pg]");
					transformations.LowerBodyTroll.applyEffect();
					changes++;
				}
				if (rand(3) == 0 && changes < changeLimit && !player.hasCoatOfType(Skin.FUR)) {
					if (!player.hasCoatOfType(Skin.FUR)) {
						outputText("[pg]");
						transformations.SkinPlain.applyEffect();
					}
					outputText("[pg]Your [skin.type] begins to tingle, then itch. ");
					transformations.SkinFur(Skin.COVERAGE_COMPLETE, {colors: ["green", "gray"]}).applyEffect();
					changes++;
				}
				if (rand(3) == 0 && changes < changeLimit && player.tailType != Tail.TROLL && player.hasCock()) {
					outputText("[pg]");
					transformations.TailTroll.applyEffect();
					changes++;
				}
				if (changes < changeLimit && rand(3) == 0) outputText(player.modFem(70, 3));
			}
			if (type == 1) {
				if (player.basetallness < 98) {
					outputText("[pg]Whoa wait did you just gain some height!? You indeed notice you've grown by a few inches.");
					player.tallness += 1 + rand(3);
				}
				if (changes < changeLimit && rand(4) == 0 && player.eyes.type == Eyes.HUMAN && transformations.EyesChangeColor(["blue"]).isPossible()) {
					transformations.EyesChangeColor(["blue"]).applyEffect(false);
					outputText("[pg]You shiver as cold wind passes over your face. Something’s changed in your vision, and though you’re not sure what, you press on regardless. After going out and checking your reflection in a puddle, you discover your pupil color has changed to a blue as cold as ice. <b>You now have cold blue eyes.\n</b>");
					changes++;
				}
				if (rand(3) == 0 && changes < changeLimit && player.ears.type != Ears.GLACIAL_TROLL) {
					outputText("[pg]");
					transformations.EarsGlacialTroll.applyEffect();
					changes++;
				}
				if (rand(3) == 0 && changes < changeLimit && player.faceType != Face.GLACIAL_TROLL && player.ears.type == Ears.GLACIAL_TROLL) {
					outputText("[pg]");
					transformations.FaceGlacialTroll.applyEffect();
					changes++;
				}
				if (rand(3) == 0 && changes < changeLimit && player.arms.type != Arms.GLACIAL_TROLL) {
					outputText("[pg]");
					transformations.ArmsGlacialTroll.applyEffect();
					changes++;
				}
				if (rand(3) == 0 && changes < changeLimit && player.lowerBody != LowerBody.GLACIAL_TROLL && player.arms.type == Arms.GLACIAL_TROLL) {
					outputText("[pg]");
					transformations.LowerBodyGlacialTroll.applyEffect();
					changes++;
				}
				if (rand(3) == 0 && changes < changeLimit && !player.hasCoatOfType(Skin.FUR)) {
					if (!player.hasCoatOfType(Skin.FUR)) {
						outputText("[pg]");
						transformations.SkinPlain.applyEffect();
					}
					outputText("[pg]Your [skin.type] begins to tingle, then itch. ");
					transformations.SkinFur(Skin.COVERAGE_COMPLETE, {colors: ["blue", "white"]}).applyEffect();
					changes++;
				}
				if (rand(3) == 0 && changes < changeLimit && player.tailType != Tail.GLACIAL_TROLL && player.hasCock()) {
					outputText("[pg]");
					transformations.TailGlacialTroll.applyEffect();
					changes++;
				}
				if (changes < changeLimit && rand(3) == 0) outputText(player.modFem(55, 3));
			}
		}
		player.refillHunger(20);
        flags[kFLAGS.TIMES_TRANSFORMED] += changes;
	}

    public function skelp(player:Player):void {
        player.slimeFeed();
        //init variables
        var changes:Number = 0;
        var changeLimit:Number = 2;
        //Temporary storage
        var temp:Number = 0;
        var temp2:Number = 0;
        var temp3:Number = 0;
        //Randomly choose affects limit
        if (rand(2) == 0) changeLimit++;
        if (rand(2) == 0) changeLimit++;
        if (rand(2) == 0) changeLimit++;
        changeLimit += player.additionalTransformationChances;
        clearOutput();
        outputText("You eat the kelp and a deep chill runs across your body as something in you begins to change.");
        if (player.blockingBodyTransformations()) {
            outputText("[pg]Or rather normally it would, but since you are seldom immunized to transformatives, nothing happens.");
        }
        if (!player.blockingBodyTransformations()) {
            //spe change
            if (rand(4) == 0 && changes < changeLimit && MutagenBonus("spe", 2)) {
                outputText("[pg]You feel like a coiled spring, ready to swim or run a marathon!");
                changes++;
            }
            //int change
            if (rand(4) == 0 && changes < changeLimit && MutagenBonus("int", 1)) {
                outputText("[pg]While the cold air around you doesn’t feel comfortable it brings you sharpness of mind like never before.");
                changes++;
            }
            //lib change
            if (rand(4) == 0 && changes < changeLimit && MutagenBonus("lib", 1)) {
                outputText("[pg]Gah it's so cold out there, you could use some warmth… the warmth of a strong, caring man. ");
                if (player.lib < 30) outputText("Whoa wait, what are you daydreaming about exactly? This place is clearly getting to you!");
                else outputText("Mmmmm, if you could get him tight and snuggly against your body to share his heat perhaps he wouldn’t even mind gently inserting himself in and filling you full of his warm man meat. As you start drooling in desire the sudden chill of the wind against your skin jar you awake from your daydream making you shiver.");
                changes++;
            }
            //sens change
            if (rand(3) == 0 && changes < changeLimit) {
                outputText("[pg]Whoa… It's chilly out there. You feel the passage of cold wind on your skin as your sensitivity increases.");
                dynStats("sen", 1);
            }
            //Sex bits - Duderiffic
            if (player.cocks.length > 0 && rand(4) == 0 && !flags[kFLAGS.HYPER_HAPPY]) {
                //If the player has at least one dick, decrease the size of each slightly,
                outputText("[pg]");
                temp = 0;
                temp2 = player.cocks.length;
                temp3 = 0;
                //Find biggest cock
                while (temp2 > 0) {
                    temp2--;
                    if (player.cocks[temp].cockLength <= player.cocks[temp2].cockLength) temp = temp2;
                }
                //Shrink said cock
                if (player.cocks[temp].cockLength < 6 && player.cocks[temp].cockLength >= 2.9) {
                    player.cocks[temp].cockLength -= .5;
                    temp3 -= .5;
                }
                temp3 += player.growCock(temp, (rand(4) + 1) * -1);
                player.lengthChange(temp3, 1);
                if (player.cocks[temp].cockLength < 2) {
                    transformations.CockToVagina().applyEffect();
                }
                //if the last of the player's dicks are eliminated this way, they gain a virgin vagina;
                if (player.cocks.length == 0 && !player.hasVagina()) {
                    transformations.VaginaHuman().applyEffect();
                    changes++;
                    dynStats("lus", 10, "scale", false);
                }
            }
            //Sex bits - girly
            //Increase player's breast size, if they are HH or bigger
            //do not increase size, but do the other actions:
            if (player.biggestTitSize() <= 10 && changes < changeLimit && rand(4) == 0) {
                if (rand(2) == 0) outputText("[pg]Your [breasts] tingle for a moment before becoming larger.");
                else outputText("[pg]You feel a little weight added to your chest as your [breasts] seem to inflate and settle in a larger size.");
                player.growTits(1 + rand(3), 1, false, 3);
                changes++;
                dynStats("sen", .5);
            }
            //If the player is under 7 feet in height, increase their height
            if (player.basetallness < 96 && changes < changeLimit && rand(4) == 0) {
                temp = rand(5) + 3;
                //Slow rate of growth near ceiling
                if (player.basetallness > 74) temp = Math.floor(temp / 2);
                //Never 0
                if (temp == 0) temp = 1;
                //Flavor texts.  Flavored like 1950's cigarettes. Yum.
                if (temp < 5) outputText("[pg]You shift uncomfortably as you realize you feel off balance.  Gazing down, you realize you have grown SLIGHTLY taller.");
                if (temp >= 5 && temp < 7) outputText("[pg]You feel dizzy and slightly off, but quickly realize it's due to a sudden increase in height.");
                if (temp == 7) outputText("[pg]Staggering forwards, you clutch at your head dizzily.  You spend a moment getting your balance, and stand up, feeling noticeably taller.");
                player.tallness += temp;
                changes++;
            }
            if (player.hasVagina()) {
                if (player.vaginas[0].vaginalLooseness < VaginaClass.LOOSENESS_LOOSE && changes < changeLimit && rand(4) == 0) {
                    outputText("[pg]You feel a relaxing sensation in your groin.  On further inspection you discover your [vagina] has somehow relaxed, permanently loosening.");
                    player.vaginas[0].vaginalLooseness++;
                    //Cunt Stretched used to determine how long since last enlargement
                    if (!player.hasStatusEffect(StatusEffects.CuntStretched)) player.createStatusEffect(StatusEffects.CuntStretched, 0, 0, 0, 0);
                    //Reset the timer on it to 0 when restretched.
                    else player.changeStatusValue(StatusEffects.CuntStretched, 1, 0);
                    player.vaginas[0].vaginalLooseness++;
                    changes++;
                    dynStats("lus", 10, "scale", false);
                }
            }
            //Remove odd eyes
            if (changes < changeLimit && rand(4) == 0 && player.eyes.type > Eyes.HUMAN) {
                outputText("[pg]");
                transformations.EyesHuman.applyEffect();
                changes++;
            }
            //Set eyes to the racial coloration
            if (changes < changeLimit && rand(4) == 0 && player.eyes.type == Eyes.HUMAN && transformations.EyesChangeColor(["blue"]).isPossible()) {
                transformations.EyesChangeColor(["blue"]).applyEffect(false);
                outputText("[pg]You shiver as cold wind passes over your face. Something’s changed in your vision, and though you’re not sure what, you press on regardless. After going out and checking your reflection in a puddle, you discover your pupil color has changed to a blue as cold as ice. <b>You now have cold blue eyes.\n</b>");
                changes++;
            }
            if ((!InCollection(player.skinColor, MelkieRace.MelkieSkinColors) && changes < changeLimit && rand(4) == 0)) {
                player.skinColor = randomChoice(MelkieRace.MelkieSkinColors);
                outputText("[pg]Your skin suddenly lightens. While lighter skin won't help you against cold weither you got the feeling that, despite this and against all logic, you won't die from freezing either, must be something related to Melkies.<b> You now have " + player.skinColor + " skin.</b>");
                changes++;
            }

            //Remove special hairs
            if (changes < changeLimit && player.hairType != Hair.NORMAL && rand(4) == 0) {
		        outputText("[pg]");
		        transformations.HairHuman.applyEffect();
                changes++;
            }

            //Change hair color
            if ((!InCollection(player.hairColor, MelkieRace.MelkieHairColors) || player.hairType == Hair.NORMAL) && changes < changeLimit && rand(2) == 0) {
                if (!InCollection(player.hairColor, MelkieRace.MelkieHairColors)) {//TODO is there a Melkie hair type?
                    player.hairColor = randomChoice(MelkieRace.MelkieHairColors);
                    outputText("[pg]Your head tingles as something in your hair change, the strands flashing for an instant before they turn " + player.hairColor + " just like those of a Melkie.\n<");
                    changes++;
                }
            }
            //Set ears to melkie
            if (changes < changeLimit && rand(4) == 0 && player.ears.type != Ears.MELKIE) {
                outputText("[pg]");
                transformations.EarsMelkie.applyEffect();
                changes++;
            }
            //Set legs to human
            if (changes < changeLimit && rand(4) == 0 && player.lowerBody != LowerBody.HUMAN && player.lowerBody != LowerBody.MELKIE) {
                outputText("[pg]");
                transformations.LowerBodyHuman.applyEffect();
                changes++;
            }
            //Set legs to Melkie
            if (changes < changeLimit && rand(4) == 0 && player.lowerBody == LowerBody.HUMAN && player.lowerBody != LowerBody.MELKIE) {
                outputText("[pg]");
                transformations.LowerBodyMelkie.applyEffect();
                changes++;
            }
            //Set weird face to human
            if (changes < changeLimit && rand(4) == 0 && player.faceType != Face.HUMAN && player.faceType != Face.ANIMAL_TOOTHS) {
                outputText("[pg]");
                transformations.FaceHuman.applyEffect();
                changes++;
            }
            //Set face to Melkie
            if (changes < changeLimit && rand(4) == 0 && player.faceType == Face.HUMAN && player.faceType != Face.ANIMAL_TOOTHS) {
                outputText("[pg]");
                transformations.FaceAnimalTeeth.applyEffect();
                outputText("[pg]Well, now that you think about it, a Melkie’s diet mostly consists of fish, so getting sharper canines to properly eat your meat makes enough sense.");
                changes++;
            }
            if (changes < changeLimit && rand(4) == 0 && player.tongue.type != Tongue.HUMAN && player.tongue.type != Tongue.MELKIE) {
                transformations.TongueHuman.applyEffect();
            }
            if (changes < changeLimit && rand(4) == 0 && player.tongue.type == Tongue.HUMAN && player.tongue.type != Tongue.MELKIE) {
                outputText("[pg]");
                transformations.TongueMelkie.applyEffect();
                player.createPerk(PerkLib.MelkieSong, 0, 0, 0, 0);
                changes++;
            }
            if (!player.hasPartialCoat(Skin.FUR) && rand(4) == 0) {
                outputText("[pg]");
                transformations.SkinPlain.applyEffect();
                changes++;
            }
            //Reset fur if fully coated
            if (player.hasFullCoatOfType(Skin.FUR) && !player.hasPartialCoat(Skin.FUR)) {
                outputText("[pg]You scratch yourself, and come away with a large clump of [fur color] fur.  Panicked, you look down and realize that your chitin is falling out in huge clumps.  It itches like mad, and you scratch your body relentlessly, shedding the remaining fur with alarming speed. To your surprise you are back to being furless just like your old human self.");
                player.skin.growCoat(Skin.COVERAGE_NONE);
                changes++;
            }
            //Partial fur
            if (!player.hasPartialCoat(Skin.FUR) && player.lowerBody == LowerBody.MELKIE && changes < changeLimit && rand(4) == 0) {
                outputText("[pg]");
                transformations.SkinFur(Skin.COVERAGE_LOW, {colors: MelkieRace.MelkieFurColors}).applyEffect();
                changes++;
            }
            if (player.hasPartialCoat(Skin.FUR) && !InCollection(player.coatColor, MelkieRace.MelkieFurColors) && changes < changeLimit && rand(4) == 0) {
                outputText("[pg]");
                transformations.SkinFur(Skin.COVERAGE_LOW, {colors: MelkieRace.MelkieFurColors}).applyEffect();
                changes++;
            }
            //Arms
            if (changes < changeLimit && rand(4) == 0 && player.arms.type != Arms.HUMAN && player.arms.type != Arms.MELKIE) {
                outputText("[pg]");
                transformations.ArmsHuman.applyEffect();
            }
            if (changes < changeLimit && rand(4) == 0 && player.arms.type == Arms.HUMAN && player.arms.type != Arms.MELKIE && player.hasPartialCoat(Skin.FUR) && player.lowerBody == LowerBody.MELKIE) {
                outputText("[pg]");
                transformations.ArmsMelkie.applyEffect();
                changes++;
            }
            if (changes < changeLimit && rand(4) == 0) outputText(player.modFem(100, 3));
            player.refillHunger(20);
            flags[kFLAGS.TIMES_TRANSFORMED] += changes;
        }
    }

    public function bubblegum(player:Player):void {
        player.slimeFeed();
        //init variables
        var changes:Number = 0;
        var changeLimit:Number = 2;
        //Temporary storage
        var temp2:Number = 0;
        //Randomly choose affects limit
        if (rand(2) == 0) changeLimit++;
        if (rand(2) == 0) changeLimit++;
        if (rand(2) == 0) changeLimit++;
        changeLimit += player.additionalTransformationChances;
        clearOutput();
        outputText("You bite into the candy, your mouth foaming small sweet bubbles. Your body seems to react to it as you begin to change.");
        if (player.blockingBodyTransformations()) {
            outputText("[pg]Or rather normally it would, but since you are seldom immunized to transformatives, nothing happens.");
        }
        if (!player.blockingBodyTransformations()) {
            //str change
            if (rand(4) == 0 && changes < changeLimit && MutagenBonus("str", 1)) {
                outputText("[pg]You suddenly feel stronger, as if your hands could shred steel and grind rocks to dust!");
                changes++;
            }
            //tou change
            if (rand(4) == 0 && changes < changeLimit) {
                outputText("[pg]You feel sturdier, but it might just be your imagination.");
                dynStats("tou", 1);
                changes++;
            }
            //spe change and Kudere face
            if (player.spe >= 1 && rand(3) == 0 && changes < changeLimit) {
                outputText("[pg]Life is boring, so boring… why do you run all the time? " +
                        "Heck, why do you even make the effort to smile and wink? It's way easier to keep a passive face all the time. " +
                        "The more you think about it, the more you lose your ability to display your emotions, your voice’s tone starts becoming somewhat empty. " +
                        "Well what your face won't show, your body will.");
                player.addCurse("spe", 5, 1);
                if (player.faceType == Face.HUMAN && player.faceType != Face.KUDERE) {
                    outputText("[pg]");
                    transformations.FaceKudere.applyEffect();
                }
                changes++;
            }
            //Fix the face if player face isn't human
            if (player.faceType != Face.HUMAN && player.faceType != Face.KUDERE) {
                outputText("[pg]");
                transformations.FaceHuman.applyEffect();
            }
            //Get those Cock to bubble:
            if (player.cockTotal() > 0 && player.cocks[0].cockType != CockTypesEnum.CANCER && rand(4) == 0 && changes < changeLimit) {
                for (temp2 = 0; temp2 < player.cocks.length; temp2++) {
                    //Stop loopahn when dick be found
                    if (player.cocks[temp2].cockType != CockTypesEnum.CANCER) break;
                }
                transformations.CockCancer(temp2).applyEffect();
                changes++;
                dynStats("lus", 10, "scale", false);
                MutagenBonus("lib", 3);
            }
            //decrease player's breast size
            if (player.biggestTitSize() >= 3 && changes < changeLimit && rand(4) == 0) {
                player.shrinkTits(true);
                dynStats("sen", .5);
            }
            if (player.hasVagina() && changes < changeLimit && rand(4) == 0) {
                var index:int;
                outputText("[pg]");
                //0 = dry, 1 = wet, 2 = extra wet, 3 = always slick, 4 = drools constantly, 5 = female ejaculator
                if (player.vaginas[0].vaginalWetness == VaginaClass.WETNESS_SLAVERING) {
                    if (player.vaginas.length == 1) outputText("Your [vagina] gushes fluids down your leg as you spontaneously orgasm.");
                    else outputText("Your [vagina]s gush fluids down your legs as you spontaneously orgasm, leaving a thick puddle of pussy-juice on the ground.  It is rapidly absorbed by the earth.");
                    player.orgasm();
                }
                if (player.vaginas[0].vaginalWetness == VaginaClass.WETNESS_DROOLING) {
                    transformations.VaginaCancer().applyEffect();
                    player.orgasm();
                }
                if (player.vaginas[0].vaginalWetness == VaginaClass.WETNESS_SLICK) {
                    if (player.vaginas.length == 1) outputText("You feel a sudden trickle of fluid down your leg.  You smell it and realize it's your pussy-juice.  Your [vagina] now drools lubricant constantly down your leg.");
                    if (player.vaginas.length > 1) outputText("You feel sudden trickles of fluids down your leg.  You smell the stuff and realize it's your pussies-juices.  They seem to drool lubricant constantly down your legs.");
                }
                if (player.vaginas[0].vaginalWetness == VaginaClass.WETNESS_WET) {
                    outputText("You flush in sexual arousal as you realize how moist your cunt-lips have become.  Once you've calmed down a bit you realize they're still slick and ready to fuck, and always will be.");
                }
                if (player.vaginas[0].vaginalWetness == VaginaClass.WETNESS_NORMAL) {
                    if (player.vaginas.length == 1) outputText("A feeling of intense arousal passes through you, causing you to masturbate furiously.  You realize afterwards that your [vagina] felt much wetter than normal.");
                    else outputText("A feeling of intense arousal passes through you, causing you to masturbate furiously.  You realize afterwards that your [vagina] were much wetter than normal.");
                }
                if (player.vaginas[0].vaginalWetness == VaginaClass.WETNESS_DRY) {
                    outputText("You feel a tingling in your crotch, but cannot identify it.");
                }
                index = player.vaginas.length;
                while (index > 0) {
                    index--;
                    if (player.vaginas[0].vaginalWetness < VaginaClass.WETNESS_SLAVERING) player.vaginas[index].vaginalWetness++;
                }
            }
            //Remove odd eyes
            if (changes < changeLimit && rand(4) == 0 && player.eyes.type != Eyes.HUMAN && player.eyes.type != Eyes.CANCER) {
                outputText("[pg]");
                transformations.EyesHuman.applyEffect();
                changes++;
            }
            //Set eyes to the racial coloration and change them to cancer type
            if (changes < changeLimit && rand(4) == 0 && player.eyes.type == Eyes.HUMAN && transformations.EyesCancer.isPossible() && transformations.FaceKudere.isPresent()) {
                outputText("[pg]");
                transformations.EyesCancer.applyEffect();
                changes++;
            }

            //Remove special hairs
            if (changes < changeLimit && player.hairType != Hair.NORMAL && rand(4) == 0) {
		        outputText("[pg]");
		        transformations.HairHuman.applyEffect();
                changes++;
            }

            //Set ears to human
            if (changes < changeLimit && rand(4) == 0 && player.ears.type != Ears.HUMAN) {
                outputText("[pg]");
                transformations.EarsHuman.applyEffect();
            }
            //Set legs to human
            if (changes < changeLimit && rand(4) == 0 && player.lowerBody != LowerBody.HUMAN && player.lowerBody != LowerBody.CRAB && player.lowerBody != LowerBody.CANCER) {
                outputText("[pg]");
                transformations.LowerBodyHuman.applyEffect();
            }
            //Set legs to crab
            if (changes < changeLimit && rand(4) == 0 && player.lowerBody == LowerBody.HUMAN) {
                transformations.LowerBodyCrab.applyEffect();
                changes++;
            }
            //Set legs to cancer
            if (changes < changeLimit && rand(4) == 0 && player.lowerBody == LowerBody.CRAB) {
                outputText("[pg]");
                transformations.LowerBodyCancer.applyEffect();
                changes++;
            }
            //Set weird face to human
            if (changes < changeLimit && rand(4) == 0 && player.faceType != Face.HUMAN && player.faceType != Face.KUDERE) {
                outputText("[pg]");
                transformations.FaceHuman.applyEffect();
            }
            //Dump that damn coat away
            if (player.hasCoat() && rand(4) == 0) {
                outputText("[pg]");
                transformations.SkinPlain.applyEffect();
                changes++;
            }
            //Arms
            if (changes < changeLimit && rand(4) == 0 && player.arms.type != Arms.HUMAN) {
                outputText("[pg]");
                transformations.ArmsHuman.applyEffect();
            }
            if (changes == 0) {
                outputText("[pg]Nothing happened.  Weird.");
            }
        }
    }

    public function hardBiscuits(player:Player):void {
        clearOutput();
        outputText("You eat the flavorless biscuits. It satisfies your hunger a bit, but not much else.");
        player.refillHunger(15);
    }

    public function trailMix(player:Player):void {
        clearOutput();
        outputText("You eat the trail mix. You got energy boost from it!");
        player.refillHunger(30);
        fatigue(-(20*player.postConsumptionMlt()));
        HPChange(Math.round(player.maxHP() * 0.1 * player.postConsumptionMlt()), true);
    }

    public function stomiidaeFillet(player:Player):void {
        clearOutput();
        outputText("You unwrap the fillet, and take a bite of the juicy meat, before long you realise there’s no more left. It fills your stomach little, but nothing more.");
        player.refillHunger(30);
    }

    public function calamariSteak(player:Player):void {
        clearOutput();
        outputText("Munching down on the cooked squid, you find it to be tender and slimy. However, it fills your stomach quite well.");
        player.refillHunger(45);
    }

    public function coelacanthJerky(player:Player):void {
        clearOutput();
        outputText("You bite down on the waxy piece of jerky, and while bitter at first the salt helps make the flavor bearable. It doesn’t fill you up much, but it should help stave off hunger.");
        player.refillHunger(15);
    }

    public function softIronIngot(player:Player):void {
        clearOutput();
		if (!player.hasPerk(PerkLib.MiracleMetal)) {
            outputText("As you greedily try to take a bite out of the delicious metal bar full force, you painfully find that your teeth don’t go through the metal and start to ache greatly…OW! The hell!? You quickly try to take more bites but your teeth just…CAN’T pass though the metal. And this is the softest of the metal bars you got!");
            outputText("\n\n<b>Requires perk: Miracle Metal</b>");
            SceneLib.inventory.returnItemToInventory(consumables.SIINGOT);
        }
		else {
			outputText("Quickly scarfing down the metal, you find it has a pleasant, sweet flavor that invigorates your body. You feel like not even a building falling on you would scratch your armor.");
			player.refillHunger(80);
			HPChange(Math.round(player.maxHP() * 0.2 * player.postConsumptionMlt()), true);
			if (player.buff("SoftIronIgnotPhysicalDefenseBuff").isPresent()) player.buff("SoftIronIgnotPhysicalDefenseBuff").remove();
			player.buff("SoftIronIgnotPhysicalDefenseBuff").forHours(24);
		}
    }

    public function lightBronzeBar(player:Player):void {
        clearOutput();
        if (!player.hasPerk(PerkLib.MiracleMetal)) {
            outputText("As you greedily try to take a bite out of the delicious metal bar full force, you painfully find that your teeth don’t go through the metal and start to ache greatly…OW! The hell!? You quickly try to take more bites but your teeth just…CAN’T pass though the metal. And this is the softest of the metal bars you got!");
            outputText("\n\n<b>Requires perk: Miracle Metal</b>");
            SceneLib.inventory.returnItemToInventory(consumables.L_B_BAR);
        }
		else {
			outputText("You take several bites out of the bar before it’s completely gone, a soothing cold feeling lingers in your mouth, and throat before it slowly spreads to the rest of your body. It could just be a trick of the light, but your natural armor looks shinier than ever.");
			player.refillHunger(100);
			HPChange(Math.round(player.maxHP() * 0.4 * player.postConsumptionMlt()), true);
			if (player.buff("LightBronzeBarMagicDefenseAndPoisonResistanceBuff").isPresent()) player.buff("LightBronzeBarMagicDefenseAndPoisonResistanceBuff").remove();
			player.buff("LightBronzeBarMagicDefenseAndPoisonResistanceBuff").forHours(24);
		}
    }

    public function ebonbloomAlloyIngot(player:Player):void {
        clearOutput();
        if (!player.hasPerk(PerkLib.MiracleMetal)) {
            outputText("As you greedily try to take a bite out of the delicious metal bar full force, you painfully find that your teeth don’t go through the metal and start to ache greatly…OW! The hell!? You quickly try to take more bites but your teeth just…CAN’T pass though the metal. And this is the softest of the metal bars you got!");
            outputText("\n\n<b>Requires perk: Miracle Metal</b>");
            SceneLib.inventory.returnItemToInventory(consumables.EAINGOT);
        }
		else {
			outputText("You take a small bite and discover it’s quite bitter at first, but it’s following aftertaste is a blast of flavor that fills your body and mind with heavenly bliss. It could just be a trick of the light, but your natural armor looks darker with a blinding gloss.");
			player.refillHunger(120);
			HPChange(Math.round(player.maxHP() * 0.6 * player.postConsumptionMlt()), true);
			dynStats("lus", -Math.round(player.maxLust() * 0.6 * player.postConsumptionMlt()));
			if (player.buff("EbonbloomAlloyIngotPhysicalAndMagicDefenseBuff").isPresent()) player.buff("EbonbloomAlloyIngotPhysicalAndMagicDefenseBuff").remove();
			player.buff("EbonbloomAlloyIngotPhysicalAndMagicDefenseBuff").forHours(24);
		}
    }

    //ALCHEMICAL ITEMS
	public function Ginseng(player:Player):void {
        clearOutput();
        var power:Number = 10; //needs to be calculated in game
        var duration:Number = Math.round(power/100)+5;
        //strength then Duration in hours
        player.createStatusEffect(StatusEffects.TeasePotion,power,duration,0,0);
        outputText("You eat the ginseng and gulp it down. Your breath will now smells like ginseng for a while wich should increase your appeal.");
        player.refillHunger(15);
        var HE:Number = 5 + player.level;
		HE *= player.HerbalismMulti();
		player.herbXP(HE);
    }

    public function HealingHerb(player:Player):void {
        clearOutput();
        outputText("You eat up the herb, your wounds closing at high speed.");
        var power:Number = 1;
        power += (player.maxHP()*0.25)+(power*0.01*player.maxHP());
        if (player.hasPerk(PerkLib.NaturalHerbalism)) power *= 2;
        HPChange(Math.round(power*player.postConsumptionMlt()),false);
        player.refillHunger(15);
        var HE:Number = 5 + player.level;
		HE *= player.HerbalismMulti();
		player.herbXP(HE);
    }

    public function MoonGrass(player:Player):void {
        clearOutput();
        var power:Number = 20;
        fatigue(-Math.round(power*player.postConsumptionMlt()));
        outputText("You eat up the grass, feeling rejuvenated with newfound magical energy and stamina.");
        player.refillHunger(15);
        var HE:Number = 5 + player.level;
		HE *= player.HerbalismMulti();
		player.herbXP(HE);
    }

    public function SnakeFlower(player:Player):void {
        clearOutput();
        player.buff("Poison").remove();
        outputText("You eat up the flower, feeling relieved as the poison is expelled from your body.");
        player.refillHunger(15);
        var HE:Number = 5 + player.level;
		HE *= player.HerbalismMulti();
		player.herbXP(HE);
    }

    public function Ironweed(player:Player):void {
        clearOutput();
        var power:Number = 10; //needs to be calculated in game
        var duration:Number = Math.round(power/100)+5;
        //strength then Duration in hours
        player.createStatusEffect(StatusEffects.ArmorPotion,power,duration,0,0);
        outputText("You eat up the weed, feeling any lingering pain recede as your skin hardens like stone.");
        player.refillHunger(15);
        player.createStatusEffect(StatusEffects.AlchIronweed, 6, 0, 0, 0);
        var HE:Number = 5 + player.level;
		HE *= player.HerbalismMulti();
		player.herbXP(HE);
    }

    public function BladeFerns(player:Player):void {
        clearOutput();
        //var power:Number = 10; //needs to be calculated in game
        //var duration:Number = Math.round(power/100)+5;
        outputText("You eat up the fern, feeling stronger and more agile already.");
        player.refillHunger(15);
        player.createStatusEffect(StatusEffects.AlchBladeFerns, 6, 0, 0, 0);
        var HE:Number = 5 + player.level;
		HE *= player.HerbalismMulti();
		player.herbXP(HE);
    }

    public function AlrauneNectar(player:Player):void {
        clearOutput();
        player.slimeFeed();
        outputText("You drink the nectar and almost right away regret it as liquid lust rushes through you.");
        player.refillHunger(15);
        dynStats("lus", Math.round((30 + rand(player.lib / 10))*player.postConsumptionMlt()), "scale", false);
        //ORGAZMO
        if (player.lust >= player.maxOverLust() && !CoC.instance.inCombat) {
            outputText("[pg]The arousal from the nectar overwhelms your senses and causes you to spontaneously orgasm.");
            outputText(" You rip off your gear and look down as your ");
            if (player.cocks.length > 0) {
                outputText(multiCockDescriptLight() + " erupts in front of you, liberally spraying the ground around you");
            }
            if (player.cocks.length > 0 && player.vaginas.length > 0) {
                outputText("At the same time your ");
            }
            if (player.vaginas.length > 0) {
                outputText(vaginaDescript(0) + " soaks your thighs");
            }
            if (player.gender == 0) outputText("body begins to quiver with orgasmic bliss");
            if (player.hasPerk(PerkLib.ElectrifiedDesire) || player.hasStatusEffect(StatusEffects.RaijuLightningStatus)) outputText(" with charged, glowing, plasma");
            outputText(".  Once you've had a chance to calm down, you notice that the explosion of pleasure you just experienced has rocked you to your core.  You are a little hornier than you were before.");
            //increase player libido, and maybe sensitivity too?
            player.orgasm();
            dynStats("sen", 1);
            MutagenBonus("lib", 2);
            if (player.hasStatusEffect(StatusEffects.RaijuLightningStatus)) player.addStatusValue(StatusEffects.RaijuLightningStatus, 1, 24);
            outputText("[pg]");
        }
        var HE:Number = 5 + player.level;
		HE *= player.HerbalismMulti();
		player.herbXP(HE);
    }
}
}
